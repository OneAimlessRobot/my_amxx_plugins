#include "../my_include/superheromod.inc"


#define GREAPER_TASKID 12812

#define GRIM_SWING_SFX "shmod/Grimpt2/Stolen1.wav"
#define GRIM_HIT_MEAT_SFX "shmod/Grimpt2/Stolen2.wav"

// GLOBAL VARIABLES
new gHeroID
new const gHeroName[] = "Grim Reaper pt2"
new bool:gHasGreaper[SH_MAXSLOTS+1]
new bool:gUsedScythe[SH_MAXSLOTS+1]
new gScytheSwings[SH_MAXSLOTS+1]

new const gModelScythe[] = "models/shmod/v_scythe.mdl"
new hud_sync
new gModelLoaded
new num_swings,Float:g_reaper_range,inf_swings

//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Grim Reaper Pt2", "1.0", "ThrashBrat")
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("greaper2_level", "8")
	register_cvar("greaper2_inf_swings", "0")
	register_cvar("greaper2_range", "1000.0")
	register_cvar("greaper2_num_swings", "8")
	register_event("ResetHUD","newRound","b")
	gHeroID=shCreateHero(gHeroName, "Death!", "One deathscythe kill", false, "greaper2_level" )
	register_event("DeathMsg","death","a")
	register_event("CurWeapon", "weaponChange", "be", "1=1")
	hud_sync = CreateHudSyncObj()
	
	
	register_srvcmd("greaper2_init", "greaper2_init")
	shRegHeroInit(gHeroName, "greaper2_init")
	hud_sync = CreateHudSyncObj()
	RegisterHam(Ham_Weapon_PrimaryAttack, "weapon_knife", "swing_scythe");
	RegisterHam(Ham_Weapon_SecondaryAttack, "weapon_knife", "swing_scythe");
	
	
	
}
public weaponChange(id)
{
	if ( !is_user_alive(id)||!gHasGreaper[id] ||!shModActive()||!gModelLoaded ) return PLUGIN_CONTINUE

	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	if (wpnid == CSW_KNIFE &&gScytheSwings[id]) {
		entity_set_string(id, EV_SZ_viewmodel, gModelScythe)
	}
	return PLUGIN_CONTINUE

}

public greaper2_init()
{
	
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	gHasGreaper[id]=(hasPowers!=0)
	if(gHasGreaper[id]){
		
		reset_greaper2_user(id)
		set_task(0.5,"greaper2_loop",id+GREAPER_TASKID, "", 0, "b" )
	}
	else{
		reset_greaper2_user(id)
		remove_task(id+GREAPER_TASKID);
	}
	
}
public reset_greaper2_user(id){
	
	
	gUsedScythe[id]=false;
	gScytheSwings[id]=0;
	
	
	
}
status_hud(id){
	
	new hud_msg[40];
	format(hud_msg,39,"[SH] %s:  You have %d swings left!",gHeroName,gScytheSwings[id]);
	
	set_hudmessage(255, 255, 255, 1.0, 0.2, 0, 0.0, 0.2,0.0,0.0,1)
	ShowSyncHudMsg(id, hud_sync, "%s", hud_msg)
	
	
}
//----------------------------------------------------------------------------------------------
public plugin_cfg()
{
	loadCVARS();
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
inf_swings=get_cvar_num("greaper2_inf_swings")
g_reaper_range=get_cvar_float("greaper2_range")
num_swings=get_cvar_num("greaper2_num_swings")
get_cvar_num("greaper_level");
}
//----------------------------------------------------------------------------------------------
public greaper2_loop(id)
{
id -= GREAPER_TASKID

if ( !is_user_connected(id)||!is_user_alive(id)||!gHasGreaper[id]||!((id>0) && (id<=SH_MAXSLOTS))){
	
	return PLUGIN_CONTINUE
	
}
status_hud(id)
new clip,ammo, weapon=get_user_weapon(id,clip,ammo)
if(gScytheSwings[id]&&(weapon==CSW_KNIFE)){

	sh_set_rendering(id, 50, 8, 8, 255,kRenderFxGlowShell, kRenderTransAlpha)

}
return PLUGIN_CONTINUE
}
//----------------------------------------------------------------------------------------------
public newRound(id)
{
if ( gHasGreaper[id]&&is_user_alive(id) && shModActive() ) {
	
	reset_greaper2_user(id)
	gScytheSwings[id]=num_swings;
}
return PLUGIN_CONTINUE

}


public greaper_damage(this, attacker)
{

new attacker_name[128];
new client_name[128];
get_user_name(attacker,attacker_name,127);
get_user_name(this,client_name,127);
sh_extra_damage(this,attacker,1,"Death Swing",0,SH_DMG_KILL);
sh_chat_message(0,gHeroID,"AND THAT IS A HIT!!!!! %s HAS SLAIN %s WITH THE DEATHS SCYTHE!!!!!",attacker_name,client_name);
emit_sound(attacker, CHAN_WEAPON, GRIM_HIT_MEAT_SFX, 1.0, 0.0, 0, PITCH_NORM)
emit_sound(this, CHAN_WEAPON, GRIM_HIT_MEAT_SFX, 1.0, 0.0, 0, PITCH_NORM)

return;
}
vec_sum(Float:vec1[3],Float:vec2[3],Float:vecRes[3]){

	vecRes[0]=vec1[0]+vec2[0];
	vecRes[1]=vec1[1]+vec2[1];
	vecRes[2]=vec1[2]+vec2[2];

}
vec_diff(Float:vec1[3],Float:vec2[3],Float:vecRes[3]){

	vecRes[0]=vec1[0]-vec2[0];
	vecRes[1]=vec1[1]-vec2[1];
	vecRes[2]=vec1[2]-vec2[2];

}
vec_mult(Float:vec1[3],Float:mult,Float:vecRes[3]){

	vecRes[0]=vec1[0]*mult;
	vecRes[1]=vec1[1]*mult;
	vecRes[2]=vec1[2]*mult;



}

client_hittable(greaper_userid,vic_userid,CsTeams:greapers_team){

return is_user_connected(vic_userid)&&is_user_alive(vic_userid)&&(vic_userid!=greaper_userid)&&vic_userid&&(greapers_team!=cs_get_user_team(vic_userid))

}
client_isnt_hitter(greaper_userid){
new clip,ammo;

return (!shModActive()||!gHasGreaper[greaper_userid]||!is_user_alive(greaper_userid)||greaper_userid <= 0 || greaper_userid > SH_MAXSLOTS||(get_user_weapon(greaper_userid,clip,ammo) != CSW_KNIFE))

}

swing_connected(Att){

new Vic,att_orig[3],att_aim[3],Float:att_orig_f[3],Float:att_aim_f[3]

get_user_origin(Att,att_orig);
get_user_origin(Att,att_aim,3);
IVecFVec(att_orig,att_orig_f);
IVecFVec(att_aim,att_aim_f);
new Float:aim_beam_f[3];
vec_diff(att_aim_f,att_orig_f,aim_beam_f);
new Float:aim_len=vector_length(aim_beam_f);
vec_mult(aim_beam_f,1.0/aim_len,aim_beam_f);
vec_mult(aim_beam_f,g_reaper_range,aim_beam_f);

vec_sum(att_orig_f,aim_beam_f,att_aim_f);

new num_ents=SH_MAXSLOTS+1
new ent_list[SH_MAXSLOTS+1];
new className[]="player"
find_sphere_class(-1, className, (g_reaper_range), ent_list, num_ents,att_aim_f);
new CsTeams:att_team=cs_get_user_team(Att)
for(new i=0;i<num_ents;i++){

	if(client_hittable(Att,ent_list[i],att_team)){
			Vic=ent_list[i];
			greaper_damage(Vic,Att);
			return
	}
}
sh_chat_message(Att,gHeroID,"Your swing missed!!!!!")
}

public swing_scythe(weaponent)
{
	
	
	new id = get_pdata_cbase(weaponent, 41, 4);
	if (client_isnt_hitter(id))return HAM_IGNORED

	if (gScytheSwings[id]>0) 
	{
		emit_sound(id, CHAN_WEAPON, GRIM_SWING_SFX, 1.0, 0.0, 0, PITCH_NORM)
		gUsedScythe[id]=true
		gScytheSwings[id]= (inf_swings? gScytheSwings[id]:gScytheSwings[id]-1);
		swing_connected(id)
		
	}
	return HAM_IGNORED
}
public plugin_precache()
{
if ( file_exists(gModelScythe) ) {
		precache_model(gModelScythe)
		gModelLoaded = true
	}
	else {
		sh_debug_message(0, 0, "Aborted loading ^"%s^", file does not exist on server", gModelScythe)
		gModelLoaded = false
	}

engfunc(EngFunc_PrecacheSound, GRIM_HIT_MEAT_SFX)
engfunc(EngFunc_PrecacheSound, GRIM_SWING_SFX)
}
public death()
{
	new id=read_data(2)
	reset_greaper2_user(id)
}
