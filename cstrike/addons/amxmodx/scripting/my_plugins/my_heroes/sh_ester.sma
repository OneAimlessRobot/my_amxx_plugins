

#include "../my_include/superheromod.inc"

#define ESTER_HUD_TASKID 23443
#define ESTER_REVENGE_TASKID 11122

#define COUNTER_UP_SFX "shmod/Teliko/counter_plus_plus.wav"
#define NEUROBLAST_CHARGE "weapons/egon_run3.wav"
 #define NEUROBLAST_WINDUP  "weapons/egon_windup2.wav"

// GLOBAL VARIABLES
new gHeroID
new const gHeroName[] = "Ester"
new bool:gHasEster[SH_MAXSLOTS+1]
new bool:gPedalIsFloored[SH_MAXSLOTS+1]
new bool:gUnloading[SH_MAXSLOTS+1]
new bool:gFinished[SH_MAXSLOTS+1]
new damage_to_do[SH_MAXSLOTS+1]
new gEsterDmg[SH_MAXSLOTS+1]
new gTimesLeft[SH_MAXSLOTS+1]



new bool:g_ester_enemies[SH_MAXSLOTS+1][SH_MAXSLOTS+1]
new m_spriteTexture
new hud_sync
new hud_sync_enemies
new times_per_map,Float:stun_time_at_it,Float:stun_speed_at_it,Float:period,power_cost
new base_dmg_per_it,dmg_inc_per_inc,num_lvls_for_inc,max_dmg
new gHeroLevel

//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Ester", "1.0", "TastyMedula")
	
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("ester_level", "8")
	register_cvar("ester_stuntime", "10")
	register_cvar("ester_stunspeed", "100")
	register_cvar("ester_damage", "3")
	register_cvar("ester_period", "0.1")
	register_cvar("ester_max_dmg", "20")
	register_cvar("ester_dmg_inc_per_inc", "5")
	register_cvar("ester_lvls_for_inc", "5")
	register_cvar("ester_uses_per_map","1")
	register_cvar("ester_power_cost", "3")
	register_event("ResetHUD","newRound","b")
	hud_sync = CreateHudSyncObj()
	hud_sync_enemies = CreateHudSyncObj()
	gHeroID=shCreateHero(gHeroName, "NEUROBLAST!", "Kill everyone who wronged you!", true, "ester_level" )
	
	register_event("Damage", "ester_damage", "b", "2!0")
	register_event("DeathMsg","death","a")
	
	register_srvcmd("ester_init", "ester_init")
	shRegHeroInit(gHeroName, "ester_init")
	
	register_srvcmd("ester_kd", "ester_kd")
	shRegKeyDown(gHeroName, "ester_kd")
	register_srvcmd("ester_ku", "ester_ku")
	shRegKeyUp(gHeroName, "ester_ku")
}
public ester_init()
{
	
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	gHasEster[id]=(hasPowers!=0)
	if(gHasEster[id]){
		
		reset_ester_equip(id)
		
		set_task( 1.0, "ester_loop", id+ESTER_HUD_TASKID, "", 0, "b")
	}
	else{
		remove_task(id+ESTER_HUD_TASKID)
		reset_ester_unequip(id)
	}
	
	
}
public reset_ester_equip(id){
	
	arrayset(gTimesLeft[id],times_per_map,SH_MAXSLOTS+1)
	reset_change_equip_state(id)
	
	update_max_dmg(id)
	
	
	
}
public reset_ester_unequip(id){
	
	arrayset(gTimesLeft[id],0,SH_MAXSLOTS+1)
	reset_change_equip_state(id)
	
	
	
	
	gEsterDmg[id]=0;
	
	
}
reset_change_equip_state(id){

	arrayset(g_ester_enemies[id],false,SH_MAXSLOTS+1)
	reset_status(id)

}
reset_status(id){



	arrayset(gFinished[id],false,SH_MAXSLOTS+1)
	arrayset(damage_to_do[id],0,SH_MAXSLOTS+1)
	arrayset(gPedalIsFloored[id],false,SH_MAXSLOTS+1)
	arrayset(gUnloading[id],false,SH_MAXSLOTS+1)
	remove_task(id+ESTER_REVENGE_TASKID)

}
public reset_ester_user_round(id){
	if(!gTimesLeft[id]){
		
		arrayset(g_ester_enemies[id],false,SH_MAXSLOTS+1)
	
	}
	reset_status(id)
	update_max_dmg(id)
	
	
	
}

public status_hud(id){

	new hud_msg[128];
	format(hud_msg,128,"[SH] %s:^nYour damage: %d^nTimes left: %d^nCharging? %s^nUnloading? %s^nTimes per map %d^nEnemy list:^nDamage to do to enemies: %d^n",
					gHeroName,
					gEsterDmg[id],
					gTimesLeft[id],
					gPedalIsFloored[id]?"Yes":"No",
					gUnloading[id]?"Yes":"No",
					times_per_map,
					damage_to_do[id]);
	
	
	set_hudmessage(255, 255, 255,1.0, 0.3, 0, 0.0, 2.0,0.0,0.0,1)
	ShowSyncHudMsg(id, hud_sync, "%s", hud_msg)
	
	
}
public show_targets(id){

	new hud_msg[500];
	new client_name[128];
	get_user_name(id,client_name,127)
	format(hud_msg,500,"[SH] %s:^nTHE FOLLOWING PLAYERS WILL BE TARGETED BY AN INCOMMING NEUROBLAST FROM %s!!!!^n^n",gHeroName,client_name)
	for(new i=1;i<=SH_MAXSLOTS;i++){
		if(g_ester_enemies[id][i]){
			get_user_name(i,client_name,127)
			format(hud_msg,500,"%s%s.^n",hud_msg,client_name);
		}
	} 
	set_hudmessage(255,50, 255, 0.5, 0.5,      0,       0.0,       4.0,       0.0,     0.0,      2)
	ShowSyncHudMsg(0, hud_sync_enemies, "%s", hud_msg)

}
public update_max_dmg(id){
	
	gEsterDmg[id]=min(max_dmg,base_dmg_per_it+(dmg_inc_per_inc*((sh_get_user_lvl(id)-gHeroLevel)/num_lvls_for_inc)));
	
}
//----------------------------------------------------------------------------------------------
public plugin_cfg()
{
	loadCVARS();
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
	gHeroLevel=get_cvar_num("ester_level");
	stun_time_at_it=get_cvar_float("ester_stuntime")
	stun_speed_at_it=get_cvar_float("ester_stunspeed")
	period=get_cvar_float("ester_period")
	power_cost=get_cvar_num("ester_power_cost")
	times_per_map=get_cvar_num("ester_uses_per_map")
	base_dmg_per_it=get_cvar_num("ester_damage")
	max_dmg=get_cvar_num("ester_max_dmg")
	dmg_inc_per_inc=get_cvar_num("ester_dmg_inc_per_inc")
	num_lvls_for_inc=get_cvar_num("ester_lvls_for_inc")
}//----------------------------------------------------------------------------------------------
public ester_loop(id)
{
	id -= ESTER_HUD_TASKID
	
	if ( !is_user_connected(id)||!is_user_alive(id)||!gHasEster[id]||!id){
		
		set_user_rendering(id,kRenderFxGlowShell, 0, 0, 0, _,_)
		return PLUGIN_HANDLED
		
	}
	status_hud(id)
	if(gPedalIsFloored[id]){
		
		sh_set_rendering(id, 8, 255, 8, 255,kRenderFxGlowShell, kRenderTransAlpha)
			
		
	}
	else {
		if(gUnloading[id]){
			
			sh_set_rendering(id, 255, 255, 255, 255,kRenderFxGlowShell, kRenderTransAlpha)
			
			
		}
		else  if(gFinished[id]) {
	
			sh_chat_message(id,gHeroID,"Revenge taken. You shall now die");
			sh_extra_damage(id,id,1,"Neuroblast",false,SH_DMG_KILL)
			remove_task(id+ESTER_REVENGE_TASKID)
			
	
		}
	}
	return PLUGIN_HANDLED
}
public psychic_stream(id, x)
{
	emit_sound(id, CHAN_ITEM, "weapons/electro5.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)

	new origin[3]
	
	get_user_origin(id, origin, 1)
		
	message_begin( MSG_BROADCAST, SVC_TEMPENTITY )
	write_byte( 8 )
	write_short(id)				// start entity
	write_short(x)				// entity
	write_short(m_spriteTexture)		// model
	write_byte( 0 ) 				// starting frame
	write_byte( 30 )  			// frame rate
	write_byte( 1)  			// life
	write_byte( 45)  		// line width
	write_byte( 0 )  			// noise amplitude
	write_byte(255 )				// r, g, b
	write_byte( 255 )				// r, g, b
	write_byte( 255 )				// r, g, b
	write_byte( 255 )				// brightness
	write_byte( 8 )				// scroll speed
	message_end()

}
public charge_aura(id){

	new origin[3]

	get_user_origin(id, origin, 1)
	
	message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
	write_byte(27)
	write_coord(origin[0])	//pos
	write_coord(origin[1])
	write_coord(origin[2])
	write_byte(15)
	write_byte(100)			// r, g, b
	write_byte(100)		// r, g, b
	write_byte(255)			// r, g, b
	write_byte(3)			// life
	write_byte(1)			// decay
	message_end()

}
public charge_reflect_spark(id, x)
{
	emit_sound(id, CHAN_ITEM, "weapons/electro5.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
	
	new origin[3]
	
	get_user_origin(id, origin, 1)
	
	message_begin( MSG_BROADCAST, SVC_TEMPENTITY )
	write_byte( 8 )
	write_short(id)				// start entity
	write_short(x)				// entity
	write_short(m_spriteTexture)		// model
	write_byte( 0 ) 				// starting frame
	write_byte( 30 )  			// frame rate
	write_byte( 1)  			// life
	write_byte( 2)  		// line width
	write_byte(80 )  			// noise amplitude
	write_byte(8)				// r, g, b
	write_byte( 60)				// r, g, b
	write_byte( 8 )				// r, g, b
	write_byte( 110)				// brightness
	write_byte( 8 )				// scroll speed
	message_end()

}
public Ester_revenge_loop(id)
{
	id-=ESTER_REVENGE_TASKID
	if ( !sh_is_active() || !is_user_alive(id) ||!(gPedalIsFloored[id]||gUnloading[id])||gFinished[id]) return
	static CsArmorType:armorType
	static userArmor,user_health
	user_health=get_user_health(id)
	userArmor = cs_get_user_armor(id, armorType)
	if ( userArmor == 0 ) armorType = CS_ARMOR_VESTHELM
	
	if(gPedalIsFloored[id]){
		
		if (power_cost > 0 )
		{
			if ( (userArmor < power_cost)) {
					if ( user_health< power_cost ) {
						sh_chat_message(id,gHeroID,"You ran out of both vitality and stamina. Now you will die.");
						sh_extra_damage(id,id,1,"Neuroblast",false,SH_DMG_KILL)
						return;
					}
					
					sh_extra_damage(id,id,power_cost,"Neuroblast",false,SH_DMG_NORM)
					user_health=get_user_health(id)
			}
			else{
			
				cs_set_user_armor(id, userArmor - power_cost, armorType)
				if( cs_get_user_armor(id, armorType)<power_cost){
					sh_chat_message(id,gHeroID,"You ran out stamina. Now you will now lose health.");
						
				}
			}
		}
		charge_aura(id)
		emit_sound(id, CHAN_ITEM, NEUROBLAST_CHARGE, 1.0, ATTN_NORM, 0, PITCH_NORM)
		damage_to_do[id]+=gEsterDmg[id]
	}
	else if(gUnloading[id]){
		
		for ( new x=1; x<=SH_MAXSLOTS; x++) 
		{
			if ( (is_user_alive(x) && get_user_team(id)!=get_user_team(x)) && x!=id &&(g_ester_enemies[id][x]))
			{
				
				Ester_instant(x, id)
				sh_set_stun(x,stun_time_at_it, stun_speed_at_it)
			}
		}
		damage_to_do[id]-=min(power_cost,damage_to_do[id])
		if(!damage_to_do[id]){
		
			gUnloading[id]=false;
			gFinished[id]=true;
			sh_chat_message(id,gHeroID,"There.... hah.... hah.... hah...");
		
		}
	}
}

public Ester_instant(x, id)
{
	emit_sound(x, CHAN_ITEM, "weapons/xbow_hitbod2.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
	shExtraDamage( x, id,gEsterDmg[id], "Neuroblast" )
	psychic_stream(id,x)
	return PLUGIN_HANDLED
}
//----------------------------------------------------------------------------------------------
public newRound(id)
{
	if ( gHasEster[id]&&is_user_alive(id) && shModActive() ) {
		
		reset_ester_user_round(id)
	}
	return PLUGIN_HANDLED
	
}
public ester_damage(id)
{
	if ( !shModActive() || !is_user_alive(id)||!is_user_connected(id) ) return
	
	new  damage= read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	if ( (attacker <= 0 || attacker > SH_MAXSLOTS )|| (attacker==id)||!is_user_connected(attacker)) return
	
	new CsTeams:att_team=CS_TEAM_UNASSIGNED;
	att_team=cs_get_user_team(attacker)
	if(cs_get_user_team(id)==att_team){
	
		return;
	
	}
	if(gHasEster[id]&&!gUnloading[id]&&gTimesLeft[id]){
		
		g_ester_enemies[id][attacker]=true;
		if(gPedalIsFloored[id]){
			
			shExtraDamage( attacker, id,floatround(floatmul(floatdiv(float(damage),float(damage_to_do[id])),float(gEsterDmg[id])),floatround_ceil), "Charging reflect" )
			emit_sound(id, CHAN_WEAPON, COUNTER_UP_SFX, 1.0, 0.0, 0, PITCH_NORM)
			charge_reflect_spark(id, attacker)
		}
	}
}
public plugin_precache()
{
	m_spriteTexture = precache_model("sprites/laserbeam.spr")
	engfunc(EngFunc_PrecacheSound, COUNTER_UP_SFX)
	engfunc(EngFunc_PrecacheSound,NEUROBLAST_CHARGE)
	engfunc(EngFunc_PrecacheSound,NEUROBLAST_WINDUP)
	
}

public death()
{
}

//----------------------------------------------------------------------------------------------
public ester_kd()
{
	new temp[6]
	
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	if ( !is_user_alive(id) ) {
		return PLUGIN_HANDLED
	}
	if(!gTimesLeft[id]){
	
		sh_chat_message(id,gHeroID,"Already used Ester %d times this map. Dumbass",times_per_map);
		sh_sound_deny(id)
		return PLUGIN_HANDLED
	}
	if(gUnloading[id]){
	
		sh_chat_message(id,gHeroID,"YOURE UNLOADING!!!! NO GOING BACK NO AHAHAAHAH!!!!");
		sh_sound_deny(id)
		return PLUGIN_HANDLED
	
	}
	new client_name[128];
	get_user_name(id,client_name,127)
	sh_chat_message(0,gHeroID,"%s is charging up and about to release a NEUROBLAST!!!!^n",client_name)
	sh_chat_message(0,gHeroID,"%s: Thats it! IM FUCKING TIRED OF THIS SHIT!!!!! You ALL DIE N O W!",client_name);
	show_targets(id)
	
	emit_sound(id, CHAN_ITEM, NEUROBLAST_WINDUP, 1.0, ATTN_NORM, 0, PITCH_NORM)
	gPedalIsFloored[id]=true
	set_task(period, "Ester_revenge_loop", id+ESTER_REVENGE_TASKID, _, _, "b")
	
	return PLUGIN_HANDLED
}

public ester_ku()
{
	new temp[6]
	
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	if ( !is_user_alive(id) ||!gHasEster[id]||!gTimesLeft[id]||!gPedalIsFloored[id]) {
		return PLUGIN_HANDLED
	}
	gPedalIsFloored[id]=false
	if(!gFinished[id]){
		gUnloading[id]=true
		gTimesLeft[id]--;
		if(!gTimesLeft[id]&&gFinished[id]){
			arrayset(g_ester_enemies[id],false,SH_MAXSLOTS+1)
	
		
		}
	}
	
	return PLUGIN_HANDLED
}
