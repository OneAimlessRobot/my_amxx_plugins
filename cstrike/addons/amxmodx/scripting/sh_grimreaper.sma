//GRIM REAPER! Yea that guy with a Scythe that comes for you when you die.

/* CVARS - copy and paste to shconfig.cfg

//Grim Reaper
grimreaper_level 0
grimreaper_knifemult 10.0	//Multiplier for knife damage	(Default 10.0)
grimreaper_alpha 60			//Grim Reaper's invisibility (Default 60)
grimreaper_gravity 0.25		//Precent of normal gravity (Default 0.25)

*/

/*
* v1.1 - vittu - 12/10/05
*      - Code cleaned up. Cvars renamed.
*      - Set invisible on spawn, like Raiden (avoiding over use of render).
*      - Changed gravity cvar from 0 to .25, because 0 is normal gravity
*          not 0 gravity.
*
*  Same as Raiden (MGS2) by N4m3LesS`Jay, one is a rip of the other not sure which (both are rips of windwalker)
*   only difference is this has extaknife damage and instead of hp/ap this has low gravity.
*/

#define USE_WEAPON_MODEL
//
#include <amxmodx>
#include <fun>
#include <superheromod>
#include <Vexd_Utilities>


#define TASKID 5555

// GLOBAL VARIBLES
new gHeroName[]="Grim Reaper"
new ghasGrimPower[SH_MAXSLOTS+1]
new gInvis[SH_MAXSLOTS+1]
//new gHowMuchInvis[SH_MAXSLOTS+1]
new gHeroID
#if defined USE_WEAPON_MODEL
	new const gModelKnife[] = "models/shmod/v_scythe.mdl"
	new bool:gModelLoaded
#endif
//---------------------------------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Grim Reaper", "1.1", "SniperX")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("grimreaper_level", "0")
	register_cvar("grimreaper_alpha", "60")
	register_cvar("grimreaper_knifemult", "10.0")
	register_cvar("grimreaper_gravity", "0.25")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID=shCreateHero(gHeroName, "Invisibility/Scythe/Float/Silent", "Invisibility/Knife=1 Hit KO/Low Gravity/Silent Walking", false, "grimreaper_level")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("grimreaper_init", "grimreaper_init")
	shRegHeroInit(gHeroName, "grimreaper_init")

	// EXTRA KNIFE DAMAGE
	register_event("Damage", "scythe_damage", "b", "2!0")

	// EVENTS
	register_event("ResetHUD", "newSpawn", "b")

	// Let Server know about Grim Reaper's Variables
	shSetMinGravity(gHeroName, "grimreaper_gravity")
	
#if defined USE_WEAPON_MODEL
	// REGISTER EVENTS THIS HERO WILL RESPOND TO!
	if ( gModelLoaded ) {
		register_event("CurWeapon", "weapon_change", "be", "1=1")
	}
#endif
}
//---------------------------------------------------------------------------------------------------------------------
#if defined USE_WEAPON_MODEL
public plugin_precache()
{
	// Method servers 2 purposes, moron check and optional way to not use the model
	if ( file_exists(gModelKnife) ) {
		precache_model(gModelKnife)
		gModelLoaded = true
	}
	else {
		sh_debug_message(0, 0, "Aborted loading ^"%s^", file does not exist on server", gModelKnife)
		gModelLoaded = false
	}
}
#endif
//---------------------------------------------------------------------------------------------------------------------
public grimreaper_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has the hero
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)

	ghasGrimPower[id] = (hasPowers != 0)
	if ( ghasGrimPower[id]&&is_user_connected(id)) {
		gInvis[id]=1
		set_task( 1.0, "invisible", id+TASKID, "", 0, "b")
	}
	else  {
		gInvis[id]=0
		remove_task(id+TASKID)
		shRemGravityPower(id)
		visible(id)
	}
}
//----------------------------------------------------------------------------------------------
public newSpawn(id)
{
	if ( ghasGrimPower[id] &&is_user_connected(id) ) {
		gInvis[id]=1
		client_print(id,print_center,"[SH] %s: You are now the grim reaper!",gHeroName)
	}
	else  {
		gInvis[id]=0
		remove_task(id+TASKID)
	}
}
//----------------------------------------------------------------------------------------------
public invisible(id)
{
	id-=TASKID
	if (!is_user_alive(id)||!is_user_connected(id)||!ghasGrimPower[id]||!gInvis[id]) return

	
	new footsteps=get_user_footsteps(id)
	sh_set_rendering(id, 8, 8, 8, get_cvar_num("grimreaper_alpha"),kRenderFxGlowShell, kRenderTransAlpha)
	if(!footsteps){
		set_user_footsteps(id, 1)
	}
}
//----------------------------------------------------------------------------------------------
public visible(id)
{
	if ( !is_user_alive(id) ) return

	sh_set_rendering(id)
}
//----------------------------------------------------------------------------------------------
public scythe_damage(id)
{
	if (!shModActive() || !is_user_alive(id)||!is_user_connected(id)) return PLUGIN_CONTINUE

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = (bodypart == 1) ? 1 : 0

	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return PLUGIN_CONTINUE

	if ( ghasGrimPower[attacker] && weapon == CSW_KNIFE && is_user_alive(id) ) 
	{
		// do extra damage
		new extraDamage = floatround(damage * get_cvar_float("grimreaper_knifemult") - damage)
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "death's scythe", headshot)
	}
	return PLUGIN_CONTINUE
}
//----------------------------------------------------------------------------------------------
#if defined USE_WEAPON_MODEL
public weapon_change(id)
{
	if ( !sh_is_active() || !ghasGrimPower[id] ) return

	if ( read_data(2) == CSW_KNIFE ) switch_model(id)
}
//----------------------------------------------------------------------------------------------
switch_model(id)
{
	if ( !sh_is_active() || !is_user_alive(id) || !ghasGrimPower[id]||!is_user_connected(id) ) return
	
	if ( cs_get_user_shield(id) ) return

	if ( get_user_weapon(id) == CSW_KNIFE ) {
		set_pev(id, pev_viewmodel2, gModelKnife)
	}
}
//----------------------------------------------------------------------------------------------
#endif



/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang2070\\ f0\\ fs16 \n\\ par }
*/
