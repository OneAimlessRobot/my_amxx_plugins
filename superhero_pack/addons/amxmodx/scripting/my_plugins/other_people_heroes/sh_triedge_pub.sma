/*
* ~ O S T K ~
*  ~ NOTES ~
*
*origin[0] = X coordinate
*origin[1] = Z coordinate
*origin[2] = Y coordinate
*
*/

/* CVARS - copy and paste to shconfig.cfg

//Tri-Edge
triedge_level 9
triedge_maxhooks 30        //Max ammout of strikes/hooks allowed, -1 is an unlimited ammount (Default 30)
triedge_reelspeed 1000        //How fast hook line reels marked users in (Default 1000)
triedge_dragmates 0        //Drag teammates, 0-no 1-yes
triedge_mode 3            //0-no xtra mode/dmg, 1-strike dmg, 2-line dmg and stun, 3-both 1 and 2 (Default 1)
triedge_strikedmg 10        //Amount of Damage for strike performed when both users are touched (Default 20)
triedge_markdmg 15        //Amount of Damage done when user is marked (Default 20)
triedge_stuntime 2            //Seconds of stun when user is marked (Default 2)
triedge_finaldmg 25        //Amount of Damage the final attack does
triedge_godsecs 4        //Amount of seconds of godmode he gets during the combo (to prevent players from killing in the process)

*/

//----------------------------------------------------------------------------------------------
/*

Version History:

3.0   - 1sh0t2killz - 10/18/2009
		New release, new function, better code.
*/
//----------------------------------------------------------------------------------------------

#include "../my_include/superheromod.inc"

// GLOBAL VARIABLES
new g_heroName[]="Tri-Edge"
new bool:g_hastriedgePower[SH_MAXSLOTS+1]
new bool:Falling[SH_MAXSLOTS+1]
new g_hooked[SH_MAXSLOTS+1]
new g_hooksLeft[SH_MAXSLOTS+1]
new g_spriteLine  
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Tri-Edge", "3.0", "1sh0t2killz AKA ostk")
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("triedge_level", "13")
	register_cvar("triedge_maxhooks", "-1")
	register_cvar("triedge_reelspeed", "1750")
	register_cvar("triedge_dragmates", "0")
	register_cvar("triedge_mode", "3")
	register_cvar("triedge_strikedmg", "10")
	register_cvar("triedge_finaldmg", "25")
	register_cvar("triedge_infinitydmg", "25")
	register_cvar("triedge_maxheal", "100")
	register_cvar("triedge_markdmg", "5")
	register_cvar("triedge_stuntime", "2")
	register_cvar("triedge_godsecs", "4")
	
	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(g_heroName, "Tri-Strike", "Perform a combo on your enemies", true, "triedge_level")
	
	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("triedge_init", "triedge_init")
	shRegHeroInit(g_heroName, "triedge_init")
	
	// KEY UP
	register_srvcmd("triedge_ku", "triedge_ku")
	shRegKeyUp(g_heroName, "triedge_ku")
	
	// KEY DOWN
	register_srvcmd("triedge_kd", "triedge_kd")
	shRegKeyDown(g_heroName, "triedge_kd")
	
	// NEW SPAWN
	register_event("ResetHUD", "newSpawn", "b")
	
	// FORWARDS
	register_forward(FM_PlayerPreThink, "triedge_prethink")
	register_forward(FM_PlayerPostThink, "triedge_postthink")
}
//----------------------------------------------------------------------------------------------
public plugin_precache()
{
    precache_sound("player/headshot3.wav")
    precache_sound("weapons/xbow_hitbod1.wav")
    precache_sound("shmod/redblood.wav")
    g_spriteLine = precache_model("sprites/lgtning.spr")
}
//----------------------------------------------------------------------------------------------
public triedge_init()
{
    // First Argument is an id
    new temp[6]
    read_argv(1,temp,5)
    new id = str_to_num(temp)

    // 2nd Argument is 0 or 1 depending on whether the id has the hero
    read_argv(2,temp,5)
    new hasPowers = str_to_num(temp)

    g_hastriedgePower[id] = (hasPowers != 0)

    if ( g_hooked[id] ) triedge_hookOff(id)
}
//----------------------------------------------------------------------------------------------
public triedge_prethink(id)
{
    if ( shModActive() && is_user_alive(id) && g_hastriedgePower[id] )
    {
        new Float:fallVelocity
        pev(id, pev_flFallVelocity, fallVelocity)
        if ( fallVelocity >= 350.0 )
            Falling[id] = true
    }
}
//----------------------------------------------------------------------------------------------
public triedge_postthink(id)
{
    if ( shModActive() && is_user_alive(id) && g_hastriedgePower[id] )
    {
        if ( Falling[id] )
        {
            if ( !get_user_godmode(id) )
                set_pev(id, pev_watertype, CONTENTS_WATER)

            Falling[id] = false
        }
    }
}
//----------------------------------------------------------------------------------------------
public newSpawn(id)
{   
    g_hooksLeft[id] = get_cvar_num("triedge_maxhooks")

    if ( g_hooked[id] ) triedge_hookOff(id)
}
//----------------------------------------------------------------------------------------------
public triedge_kd()
{
    // First Argument is an id
    new temp[6]
    read_argv(1,temp,5)
    new id = str_to_num(temp)

    if ( !is_user_alive(id) || !g_hastriedgePower[id] || !hasRoundStarted() || !shModActive() ) return

    triedge_hookOn(id)
}
//----------------------------------------------------------------------------------------------
public triedge_ku()
{
    // First Argument is an id
    new temp[6]
    read_argv(1,temp,5)
    new id = str_to_num(temp)

    triedge_hookOff(id)
}
//----------------------------------------------------------------------------------------------
public triedge_hookOn(id)
{
    if ( !is_user_alive(id) ) return

    if ( g_hooksLeft[id] == 0 ) {
        playSoundDenySelect(id)
        return
    }

    if ( g_hooksLeft[id] > 0 ) g_hooksLeft[id]--

    if ( g_hooksLeft[id] >= 0 && g_hooksLeft[id] < 5 ) {
        client_print(id, print_center, "You have %d Tri-Edge's Strike Combos %s left", g_hooksLeft[id], (g_hooksLeft[id] == 1) ? "" : "s")
    }

    new hooktarget, body


    get_user_aiming(id, hooktarget, body)

    if ( is_user_alive(hooktarget) ) {
        new mode = get_cvar_num("triedge_mode")

        if ( get_user_team(hooktarget) != get_user_team(id) ) {
            g_hooked[id] = hooktarget
            emit_sound(hooktarget, CHAN_BODY, "weapons/xbow_hitbod1.wav", 0.6, ATTN_NORM, 0, PITCH_HIGH)

            if ( mode >= 2 ) {
                if ( !get_user_godmode(hooktarget) ) blood_spurt(hooktarget, id)
                shExtraDamage(hooktarget, id, get_cvar_num("triedge_markdmg"), "Tri-Edge Gaze")
                shStun(hooktarget, get_cvar_num("triedge_stuntime"))
                set_user_maxspeed(hooktarget, 100.0)
            }
        }
        else if ( get_cvar_num("triedge_dragmates") == 1 ) {
            g_hooked[id] = hooktarget
            emit_sound(hooktarget, CHAN_BODY, "weapons/xbow_hitbod1.wav", 0.6, ATTN_NORM, 0, PITCH_HIGH)

            new ffOn = get_cvar_num("mp_friendlyfire")
            if ( ffOn && mode >= 2 ) {
                if ( !get_user_godmode(hooktarget) ) blood_spurt(hooktarget, id)
                shExtraDamage(hooktarget, id, get_cvar_num("triedge_markdmg"), "Tri-Edge Gaze")
                shStun(hooktarget, get_cvar_num("triedge_stuntime"))
                set_user_maxspeed(hooktarget, 100.0)
            }
        }
        else {
            g_hooked[id] = SH_MAXSLOTS+1
            hook_notarget(id)
            return
        }

        new parm[2]
        parm[0] = id
        parm[1] = hooktarget
        set_task(0.1, "triedge_reelin", id, parm, 2, "b")

        hook_target(parm)
    }
    else {
        g_hooked[id] = SH_MAXSLOTS+1
        hook_notarget(id)
    }
}
//----------------------------------------------------------------------------------------------
public triedge_reelin(parm[])  //Reverse
{
    // Drags player to you
    new id = parm[0]
    new victim = parm[1]

    if ( !g_hooked[id] ) return

    if ( !is_user_alive(victim) ) {
        triedge_hookOff(id)
        return
    }

    new Float:fl_Velocity[3]
    new idOrigin[3], vicOrigin[3]

    get_user_origin(victim, vicOrigin)
    get_user_origin(id, idOrigin)

    new distance = get_distance(idOrigin, vicOrigin)

    shSetGodMode(id,get_cvar_num("triedge_godsecs"))

    if ( distance > 5 ) {
        new Float:fl_Time = distance / ( get_cvar_float("triedge_reelspeed") * 2 )

        fl_Velocity[0] = (vicOrigin[0] - idOrigin[0]) / fl_Time
        fl_Velocity[1] = (vicOrigin[1] - idOrigin[1]) / fl_Time
        fl_Velocity[2] = (vicOrigin[2] - idOrigin[2]) / fl_Time
    }
    else {
        fl_Velocity[0] = 0.0
        fl_Velocity[1] = 0.0
        fl_Velocity[2] = 0.0
    }

    //entity_set_vector(victim, EV_VEC_velocity, fl_Velocity)
    entity_set_vector(id, EV_VEC_velocity, fl_Velocity)

    set_task(2.6, "triedge_hookOff", id)
    client_print(id,print_chat,"[SH](Tri-Edge) aaa...")
}
//----------------------------------------------------------------------------------------------
public triedge_hookOff(id)
{
    g_hooked[id] = 0

    hook_remove(id)

    remove_task(id)
}
//----------------------------------------------------------------------------------------------
#if defined AMX_NEW
public entity_touch(entity1, entity2) {
    new pToucher = entity1
    new pTouched = entity2
#else
public vexd_pfntouch(pToucher, pTouched) {
#endif

	if ( !is_user_alive(pToucher) || !is_user_alive(pTouched) ) return
	
	if ( g_hastriedgePower[pTouched] && g_hooked[pTouched] == pToucher ) 
	{
		
		triedge_hookOff(pTouched)
		
		new mode = get_cvar_num("triedge_mode")
		if ( mode != 2 ) 
		{
			new ffOn = get_cvar_num("mp_friendlyfire")
			if ( ffOn || get_user_team(pToucher) != get_user_team(pTouched) ) 
			{
				new parm[2]
				parm[0] = pTouched
				parm[1] = pToucher
				set_task(0.1, "strike", pTouched+100, parm, 2)
				set_task(0.2, "tristrike", pTouched+100, parm, 2)
				set_task(0.3, "tristrike", pTouched+100, parm, 2)
				set_task(0.4, "tristrike", pTouched+100, parm, 2)
				set_task(0.5, "tristrike", pTouched+100, parm, 2)
				set_task(0.6, "tristrike", pTouched+100, parm, 2)
				set_task(0.9, "tristrike", pTouched+100, parm, 2)
				set_task(1.5, "Finisher", pTouched+100, parm, 2)
				set_task(1.7, "Infinity_Finisher", pTouched+100, parm, 2)
			}
		}
	}
}
//----------------------------------------------------------------------------------------------
public strike(parm[])
{
    new vic = parm[1]
    if ( !is_user_alive(vic) ) return

    new id = parm[0]
    new Origin[3], vicOrigin[3]

    get_user_origin(id, Origin)
    get_user_origin(vic, vicOrigin)

    emit_sound(vic, CHAN_BODY, "player/headshot3.wav", 1.0, ATTN_NORM, 0, PITCH_LOW)
    if ( !get_user_godmode(vic) ) blood_spray(vic, vicOrigin)

    new Float:fl_Time = get_distance(vicOrigin, Origin) / 800.0

    new Float:fl_vicVelocity[3]
    fl_vicVelocity[0] = (vicOrigin[0] - Origin[0]) / fl_Time
    fl_vicVelocity[1] = (vicOrigin[1] - Origin[1]) / fl_Time
    fl_vicVelocity[2] = 450.0

    entity_set_vector(vic, EV_VEC_velocity, fl_vicVelocity)

    shExtraDamage(vic, id, get_cvar_num("triedge_strikedmg"), "Tri-Edge Strike")
}
//----------------------------------------------------------------------------------------------
public tristrike(parm[])
{
    new vic = parm[1]
    if ( !is_user_alive(vic) ) return

    new id = parm[0]
    new Origin[3], vicOrigin[3]

    get_user_origin(id, Origin)
    get_user_origin(vic, vicOrigin)

    emit_sound(vic, CHAN_BODY, "player/headshot3.wav", 1.0, ATTN_NORM, 0, PITCH_LOW)
    if ( !get_user_godmode(vic) ) blood_spray(vic, vicOrigin)

    new Float:fl_Time = get_distance(vicOrigin, Origin) / 700.0

    new Float:fl_vicVelocity[3]
    fl_vicVelocity[0] = 450.0
    fl_vicVelocity[1] = (vicOrigin[0] - Origin[0]) / fl_Time
    fl_vicVelocity[2] = (vicOrigin[2] - Origin[2]) / fl_Time

    entity_set_vector(vic, EV_VEC_velocity, fl_vicVelocity)

    shExtraDamage(vic, id, get_cvar_num("triedge_strikedmg"), "Tri-Edge Tri Strike")
}
//----------------------------------------------------------------------------------------------
public Finisher(parm[])
{
    new vic = parm[1]
    if ( !is_user_alive(vic) ) return

    new id = parm[0]
    new Origin[3], vicOrigin[3]

    get_user_origin(id, Origin)
    get_user_origin(vic, vicOrigin)

    emit_sound(vic, CHAN_BODY, "player/headshot3.wav", 1.0, ATTN_NORM, 0, PITCH_LOW)
    if ( !get_user_godmode(vic) ) blood_spray(vic, vicOrigin)

    new Float:fl_Time = get_distance(vicOrigin, Origin) / 300.0

    new Float:fl_vicVelocity[3]
    fl_vicVelocity[0] = 450.0                        //(vicOrigin[0] - Origin[0]) / fl_Time
    fl_vicVelocity[1] = 1000 *  ((vicOrigin[1] - Origin[1]) / fl_Time)    //(vicOrigin[1] - Origin[1]) / fl_Time
    fl_vicVelocity[2] = 1000 *  ((vicOrigin[2] - Origin[2]) / fl_Time)    //(vicOrigin[2] - Origin[2]) / fl_Time

    entity_set_vector(vic, EV_VEC_velocity, fl_vicVelocity)

    shExtraDamage(vic, id, get_cvar_num("triedge_finaldmg"), "Tri-Edge Finisher")
}
//----------------------------------------------------------------------------------------------
public Infinity_Finisher(parm[])
{
    new vic = parm[1]
    if ( !is_user_alive(vic) ) return

    new id = parm[0]
    new Origin[3], vicOrigin[3]

    get_user_origin(id, Origin)
    get_user_origin(vic, vicOrigin)

    emit_sound(vic, CHAN_BODY, "shmod/redblood.wav", 1.0, ATTN_NORM, 0, PITCH_LOW)
    emit_sound(id, CHAN_BODY, "shmod/redblood.wav", 1.0, ATTN_NORM, 0, PITCH_LOW)
    infinity_spray(vic, id)
    if ( !get_user_godmode(vic) ) blood_spray(vic, vicOrigin)

    new Float:fl_Time = get_distance(vicOrigin, Origin) / 300.0

    new Float:fl_vicVelocity[3]
    fl_vicVelocity[0] = 450.0                        //(vicOrigin[0] - Origin[0]) / fl_Time
    fl_vicVelocity[1] = 1000 *  ((vicOrigin[1] - Origin[1]) / fl_Time)    //(vicOrigin[1] - Origin[1]) / fl_Time
    fl_vicVelocity[2] = 1000 *  ((vicOrigin[2] - Origin[2]) / fl_Time)    //(vicOrigin[2] - Origin[2]) / fl_Time

    entity_set_vector(vic, EV_VEC_velocity, fl_vicVelocity)

    shExtraDamage(vic, id, get_cvar_num("triedge_infinitydmg"), "Tri-Edge Infinity Finisher")
    sh_add_hp(id, get_cvar_num("triedge_infinitydmg") , get_cvar_num("triedge_maxheal"))
}
//----------------------------------------------------------------------------------------------
public sh_client_death(id)
{
    if ( g_hooked[id] ) triedge_hookOff(id)
}
//----------------------------------------------------------------------------------------------
public client_disconnected(id)
{
    // stupid check but lets see
    if ( id <= 0 || id > SH_MAXSLOTS ) return

    if ( g_hooked[id] ) triedge_hookOff(id)
}
//----------------------------------------------------------------------------------------------
public hook_target(parm[])
{
    new id = parm[0]
    new hooktarget = parm[1]

    // Create a beam between two entities
    message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
    write_byte(8)                // TE_BEAMENTS
    write_short(id)
    write_short(hooktarget)
    write_short(g_spriteLine)    // sprite index
    write_byte(0)        // start frame
    write_byte(0)        // framerate
    write_byte(10)    // life
    write_byte(25)        // width
    write_byte(1)        // noise
    write_byte(0)    // r, g, b
    write_byte(255)    // r, g, b
    write_byte(0)        // r, g, b
    write_byte(100)    // brightness
    write_byte(10)        // speed
    message_end()
}
//----------------------------------------------------------------------------------------------
public hook_notarget(id)
{
    new endorigin[3]

    // Set beam to users aim
    get_user_origin(id, endorigin, 3)

    // Beam effect between point and entity
    message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
    write_byte(1)                // TE_BEAMENTPOINT
    write_short(id)
    write_coord(endorigin[0])
    write_coord(endorigin[1])
    write_coord(endorigin[2])
    write_short(g_spriteLine)    // sprite index
    write_byte(0)        // start frame
    write_byte(0)        // framerate
    write_byte(10)    // life
    write_byte(25)        // width
    write_byte(1)        // noise
    write_byte(0)    // r, g, b
    write_byte(255)    // r, g, b
    write_byte(0)        // r, g, b
    write_byte(100)    // brightness
    write_byte(0)        // speed
    message_end()
}
//----------------------------------------------------------------------------------------------
public hook_remove(id)
{
    // Remove the beam aka hook
    message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
    write_byte(99)        //TE_KILLBEAM
    write_short(id)    //entity
    message_end()
}
//----------------------------------------------------------------------------------------------
public blood_spurt(vic, id)
{
    new vicOrigin[3], idOrigin[3]
    get_user_origin(id, idOrigin)
    get_user_origin(vic, vicOrigin)

    new invTime = 300 / ( get_distance(vicOrigin, idOrigin) ? get_distance(vicOrigin, idOrigin) : 1 )

    new rX = (vicOrigin[0] - idOrigin[0])*invTime
    new rY = (vicOrigin[1] - idOrigin[1])*invTime
    new rZ = (vicOrigin[2] - idOrigin[2])*invTime

    // Stream of blood
    message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
    write_byte(101)            // TE_BLOODSTREAM
    write_coord(vicOrigin[0])    // start position
    write_coord(vicOrigin[1])
    write_coord(vicOrigin[2])
    write_coord(rX)     // spray vector
    write_coord(rY)
    write_coord(rZ)
    write_byte(70)     // color RED = 248 YELLOW = 196
    write_byte(random_num(100, 200)) // speed
    message_end()
}
//----------------------------------------------------------------------------------------------
public blood_spray(vic, vicOrigin[3])
{
/*    new x, y
    for(new i = 0; i < 2; i++) {
        x = random_num(-10, 10)
        y = random_num(-10, 10)
        for(new j = 0; j < 2; j++) {
            // Blood spray
            message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
            write_byte(115)                // TE_BLOODSPRITE
            write_coord(vicOrigin[0]+(x*j))    // position
            write_coord(vicOrigin[1]+(y*j))
            write_coord(vicOrigin[2]+21)
            write_short(g_spriteBldSpray)    // sprite1 index
            write_short(g_spriteBlood)    // sprite2 index
            write_byte(248)             // color RED = 248 YELLOW = 196
            write_byte(10)             // scale
            message_end()
        }
    }
*//*
    message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
    write_byte(22)       //TE_BEAMFOLLOW
    write_short(vic)  //The entity to attach the sprite to
    write_short(g_spriteBlood)  //sprite's model
    write_byte(20)   //life in 0.1 seconds
    write_byte(60)   //width of sprite
    write_byte(255)  //red
    write_byte(0)    //green
    write_byte(255)  //blue
    write_byte(255)  //brightness
    message_end()
*/
    message_begin(MSG_BROADCAST ,SVC_TEMPENTITY) //message begin
    write_byte(17)
    write_coord(vicOrigin[0]) // start position
    write_coord(vicOrigin[1])
    write_coord(vicOrigin[2])
    write_short(g_spriteLine) // sprite index
    write_byte(25) // scale in 0.1's
    write_byte(200) // brightness
    message_end()
}
//----------------------------------------------------------------------------------------------
public infinity_spray(vic, id)
{
	// Main Lightning
	message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
	write_byte(8)				//TE_BEAMENTS
	write_short(vic)			// start entity
	write_short(id)		// entity
	write_short(g_spriteLine)	// model
	write_byte(0)			// starting frame
	write_byte(200)		// frame rate
	write_byte(15)			// life
	write_byte(70)	// line width
	write_byte(6)			// noise amplitude
	write_byte(255)		// r, g, b
	write_byte(255)		// r, g, b
	write_byte(255)		// r, g, b
	write_byte(random_num(195, 205))		// brightness
	write_byte(0)			// scroll speed
	message_end()

	// Extra Lightning
	message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
	write_byte(8)				//TE_BEAMENTS
	write_short(vic)			// start entity
	write_short(id)		// entity
	write_short(g_spriteLine)	// model
	write_byte(10)			// starting frame
	write_byte(200)		// frame rate
	write_byte(15)			// life
	write_byte(35)	// line width
	write_byte(18)			// noise amplitude
	write_byte(0)		// r, g, b
	write_byte(random_num(100, 190))		// r, g, b
	write_byte(random_num(190, 255))		// r, g, b
	write_byte(random_num(175, 255))		// brightness
	write_byte(0)			// scroll speed
	message_end()
}
//----------------------------------------------------------------------------------------------
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1033\\ f0\\ fs16 \n\\ par }
*/
