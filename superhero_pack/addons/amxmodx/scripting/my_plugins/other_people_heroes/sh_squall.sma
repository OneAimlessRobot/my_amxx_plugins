// Squall!
//credits to Avalanche for his i_aim_good plugin

/* CVARS - copy and paste to shconfig.cfg

//Squall
squall_level 10
squall_bullets 7

*/

#include "../my_include/superheromod.inc"
#include <xs>

#pragma semicolon 1

// comment to not use model
#define USE_MODEL

#if defined USE_MODEL
	new const knifemodel[] = "models/shmod/gunblade.mdl";
	new bool:gModelLoaded;
#endif

new const gunsound[] = "weapons/deagle-1.wav";

// GLOBAL VARIABLES
new gHeroID;
new bool:gHasSquallPowers[SH_MAXSLOTS+1];
new gBullets[SH_MAXSLOTS+1];
//pcvars
new pcvar_bullets;
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Squall","1.8","Random1");

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvar_lev = register_cvar("squall_level", "10");
	pcvar_bullets = register_cvar("squall_bullets", "7");

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero("Squall", pcvar_lev);
	sh_set_hero_info(gHeroID, "Gunblade!", "Use your knife like a gun, just aim and fire");

#if defined USE_MODEL
	// Knife Model
	RegisterHam(Ham_Item_Deploy, "weapon_knife", "fw_Item_Deploy_Post", 1);
#endif
		
	//knife hack part
	register_forward(FM_TraceLine,"fw_traceline");
	//sound replacement and bullet consumption
	RegisterHam(Ham_Weapon_PrimaryAttack, "weapon_knife", "Ham_Weapon_Attack");
	RegisterHam(Ham_Weapon_SecondaryAttack, "weapon_knife", "Ham_Weapon_Attack");
	register_forward(FM_EmitSound, "fw_EmitSound");
}
//----------------------------------------------------------------------------------------------
public sh_hero_init(id, heroid, mode)
{
	if ( heroid != gHeroID ) return;
		
	switch(mode)
	{
		case SH_HERO_ADD:
		{
			gBullets[id] = get_pcvar_num(pcvar_bullets);
			gHasSquallPowers[id] = true;
#if defined USE_MODEL			
			if ( gModelLoaded && get_user_weapon(id) == CSW_KNIFE )
				switch_model(id);
#endif
		}
		case SH_HERO_DROP: gHasSquallPowers[id] = false;
	}
}
//----------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_sound(gunsound);
	
#if defined USE_MODEL

	gModelLoaded = true;
	if ( file_exists(knifemodel) )
		precache_model(knifemodel);
	else
	{
		sh_debug_message(0, 0, "Aborted loading ^"%s^", file does not exist on server", knifemodel);
		gModelLoaded = false;
	}
}
//----------------------------------------------------------------------------------------------
public fw_Item_Deploy_Post(weapon_ent)	//you'll notice that get_user_weapon doesn't have updated weapon when this is called so be carefull of it's usage
{
	if(!is_valid_ent(weapon_ent)) return;
	if ( !sh_is_active() ) return ;
	if ( gModelLoaded )
	{
		// Get weapon's owner
		static owner;
		owner = get_pdata_cbase(weapon_ent, 41, 4);
		
		switch_model(owner);
	}
}
//----------------------------------------------------------------------------------------------
switch_model(id)
{
	if ( !sh_is_active() || !is_user_alive(id) || !gHasSquallPowers[id] ) return;

	set_pev(id, pev_viewmodel2, knifemodel);
		
#endif		
}
//----------------------------------------------------------------------------------------------
public sh_client_spawn(id)
	if ( gHasSquallPowers[id] && sh_is_active() )
		gBullets[id] = get_pcvar_num(pcvar_bullets);

//----------------------------------------------------------------------------------------------
public fw_traceline(Float:v1[3],Float:v2[3],noMonsters,id)
{
	if( !sh_is_active() || !is_user_alive(id) || !gHasSquallPowers[id] || gBullets[id] < 0 )
		return FMRES_IGNORED;
	
 	if( get_user_weapon(id) != CSW_KNIFE )
		return FMRES_IGNORED;

	// get crosshair aim
	static iMyAim[3], Float:flMyAim[3];
	get_user_origin(id, iMyAim, 3);
	IVecFVec(iMyAim, flMyAim);

	// set crosshair aim
	set_tr(TR_vecEndPos, flMyAim);
	
	// get ent looking at
	static ent, body;
	get_user_aiming(id, ent, body);
	
	// if looking at something
	if( pev_valid(ent) )
	{
		set_tr(TR_flFraction, 0.1); // 1.0 == no hit, < 1.0 == hit
		set_tr(TR_pHit, ent); // entity hit
		set_tr(TR_iHitgroup, body); // bodypart hit				
	}	
	return FMRES_IGNORED;
}
//----------------------------------------------------------------------------------------------
public Ham_Weapon_Attack(weaponent)
{
	if(!is_valid_ent(weaponent)) return HAM_IGNORED;
	if ( !sh_is_active() ) return HAM_IGNORED;
	
	new id = get_pdata_cbase(weaponent, 41, 4);
	if ( gBullets[id] >= 0 )
	{
		new count = --gBullets[id];		//cache the data since arrays take longer to read
		if ( 0 < count < 5 )
			sh_chat_message( id, gHeroID, "You Have %d Bullet%s Left", count, count == 1 ? "" : "s" );
	}
	return HAM_IGNORED;
}
//----------------------------------------------------------------------------------------------
public fw_EmitSound(id, channel, const sample[], Float:volume, Float:attn, flags, pitch)
{
	if ( !is_user_connected(id) || !gHasSquallPowers[id] || !sh_is_active() || gBullets[id] < 0 )
		return FMRES_IGNORED;
		
	if ( sample[0] == 'w' && sample[6] == 's' && sample[8] == 'k' && sample[13] == '_' && sample[14] != 'd' )	//9 sounds dealing with knife, 1 of which not useful
	{
		engfunc(EngFunc_EmitSound, id, channel, gunsound, volume, attn, flags, pitch);
		return FMRES_SUPERCEDE;
	}
	return FMRES_IGNORED;
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang10266\\ f0\\ fs16 \n\\ par }
*/
