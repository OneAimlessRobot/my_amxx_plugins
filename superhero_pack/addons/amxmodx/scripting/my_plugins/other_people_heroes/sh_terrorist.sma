//Terrorist!

/* CVARS - copy and paste to shconfig.cfg

//terrorist
terrorist_level 0

*/

#include <amxmod>
#include <Vexd_Utilities>
#include <superheromod>
#include <amxmisc> 
#include <engine>

// GLOBAL VARIABLES
new gHeroName[]="Terrorist"
new bool:gHasTerroristPower[SH_MAXSLOTS+1]
new bool:can_plant
new gCurrentWeapon[SH_MAXSLOTS+1]
new planter
new g_state
new g_bombEnts[2] = {0,0}

//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Terrorist","1.2","MEGA / Krot@l / Velocity36")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("terrorist_level", "0")
	register_cvar("terrorist_c4plant", "60")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(gHeroName, "Terrorist", "Plant anywhere you want + free AK", false, "terrorist_level" )

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	register_srvcmd("terrorist_init", "terrorist_init")
	shRegHeroInit(gHeroName, "terrorist_init")
	register_event("ResetHUD","newRound","b")
	register_event("CurWeapon","changeWeapon","be","1=1")
	register_event("TextMsg", "game_restart", "a", "1=4", "2&#Game_C", "2&#Game_w")
	register_event("SendAudio", "round_end", "a", "2=%!MRAD_terwin", "2=%!MRAD_ctwin", "2=%!MRAD_rounddraw")
	register_event("StatusIcon", "gotbomb", "be", "1=1", "1=2", "2=c4")

	g_state = 0


}
//----------------------------------------------------------------------------------------------
public terrorist_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has terrorist
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)

	if (!is_user_connected(id)) return

	//Reset thier shield restrict status
	//Shield restrict MUST be before weapons are given out
	shResetShield(id)

	if ( hasPowers ) {
		terrorist_giveweapons(id)
		create_bombtarget()
	}
	//This gets run if they had the power but don't anymore
	else if ( gHasTerroristPower[id] ) {
		terrorist_dropweapons(id)
		remove_bombtarget()
	}

	//Sets this variable to the current status
	gHasTerroristPower[id] = (hasPowers != 0)
	g_state = hasPowers
}
//----------------------------------------------------------------------------------------------
public newRound(id)
{
	if ( gHasTerroristPower[id] && is_user_alive(id) && shModActive() ) {
		set_task(0.1, "terrorist_giveweapons",id)
		set_task(get_cvar_float("terrorist_c4plant"), "enable_planting", 97564673)
	}
}
//----------------------------------------------------------------------------------------------
public gotbomb(id)
{
	planter = id
	return PLUGIN_CONTINUE
}
//----------------------------------------------------------------------------------------------
public round_end()
{
	 set_task(4.0, "disable_planting", 78645135)
}
//----------------------------------------------------------------------------------------------
public game_restart()
{
    set_task(0.5, "disable_planting", 71586461)
}
//----------------------------------------------------------------------------------------------
public disable_planting()
{
	if(task_exists(97564673)) remove_task(97564673)
	planter = 0
	can_plant = false
}
//----------------------------------------------------------------------------------------------
public terrorist_giveweapons(id)
{
	if ( shModActive() && is_user_alive(id) ) {
		shGiveWeapon(id,"weapon_ak47")
	}


	if ( get_user_team(id) == 1 )
	{
		shGiveWeapon(id,"weapon_c4") 	// Give Ts a Bomb
		cs_set_user_plant(id,1,1) 	// Make bomb useable
	}

	if ( get_user_team(id) == 2 ) shGiveWeapon(id,"item_thighpack")
}
//----------------------------------------------------------------------------------------------
public terrorist_dropweapons(id)
{
	if ( !is_user_alive(id) ) return

	new iCurrent = -1
	new Float:weapvel[3]

	while ( (iCurrent = FindEntity(iCurrent, "weaponbox")) > 0 ) {

		//Skip anything not owned by this client
		if ( Entvars_Get_Edict(iCurrent, EV_ENT_owner) != id) continue

		//Get Weapon velocites
		Entvars_Get_Vector(iCurrent, EV_VEC_velocity, weapvel)

		//If Velocities are all Zero its on the ground already and should stay there
		if (weapvel[0] == 0.0 && weapvel[1] == 0.0 && weapvel[2] == 0.0) continue

		RemoveEntity(iCurrent)
	}
}
//----------------------------------------------------------------------------------------------
public changeWeapon(id)
{
	if ( !shModActive() || !gHasTerroristPower[id] ) return

	new weaponid = read_data(2)

	if ( gCurrentWeapon[id] != weaponid ) {
		gCurrentWeapon[id] = weaponid
	}
}
//----------------------------------------------------------------------------------------------
public enable_planting()
{
	can_plant = true
}
//----------------------------------------------------------------------------------------------
public create_bombtarget() 
{
	new old_bomtarget = find_ent_by_class(-1, "func_bomb_target")
	if(old_bomtarget > 0)
	{
		new Float:origin[3]
		entity_get_vector(old_bomtarget, EV_VEC_origin, origin)
		new bombtarget = create_entity("func_bomb_target")
		if(bombtarget > 0)
		{
			DispatchKeyValue(bombtarget, "classname", "func_bomb_target")
			DispatchSpawn(bombtarget)
			entity_set_size(bombtarget, Float:{-1000000.0,-1000000.0,-1000000.0}, Float:{1000000.0,1000000.0,1000000.0})
			entity_set_string(bombtarget, EV_SZ_classname, "func_bomb_target")
			entity_set_origin(bombtarget, origin)
			g_bombEnts[0] = bombtarget
		}
		bombtarget = create_entity("info_bomb_target")
		if(bombtarget > 0)
		{
			DispatchKeyValue(bombtarget, "classname", "info_bomb_target")
			DispatchSpawn(bombtarget)
			entity_set_size(bombtarget, Float:{-1000000.0,-1000000.0,-1000000.0}, Float:{1000000.0,1000000.0,1000000.0})
			entity_set_string(bombtarget, EV_SZ_classname, "info_bomb_target")
			entity_set_origin(bombtarget, origin)
			g_bombEnts[1] = bombtarget
		}
	}
}
//----------------------------------------------------------------------------------------------
public remove_bombtarget()
{
  if(is_valid_ent(g_bombEnts[0])) remove_entity(g_bombEnts[0])
  if(is_valid_ent(g_bombEnts[1])) remove_entity(g_bombEnts[1])
}
//----------------------------------------------------------------------------------------------
public client_prethink(id)
{
	if(g_state && id == planter && !can_plant)
	{
		new clip, ammo, weapon = get_user_weapon(id, clip, ammo)
		if(weapon == CSW_C4)
		{
			entity_set_int(id, EV_INT_button, entity_get_int(id, EV_INT_button) & ~IN_ATTACK)
		}
	}
}
//----------------------------------------------------------------------------------------------
public client_connect(id)
{
	gHasTerroristPower[id] = false
}
//----------------------------------------------------------------------------------------------
