// Goku!
/*
This was taught to Goku in the afterlife by King Kai. 
It is a power up technique that allows the user to amplify their Ki by how ever much they desire. 
Goku should not have been able to go past two times Kaioken, 
but after training under 100x Earth's gravity he could increase it to 20x.
http://www.myfavoritegames.com/dragonball-z/info/AttackList/I-K.htm
*/


/*
Big Thanks To G-Dog For Helping me fix this
Also the creators of FoxMcCloud
*/



/* 
Version 1
---------

Released on 07-25-05
Bugged version
Bugs were controls messed up.


Version 2
---------
Released on 02-26-08
New Name: Instead of Kaioken -> Goku's Kaioken Technic
Code complete bug free
No warnings nothing (BIG THX TO G-DOG)

Version 3
---------
Added Sound Spanish
Added Glow Red
Added Sprite when transformed

*/


/* CVARS - copy and paste to shconfig.cfg
//gokukt
gokukt_level 0
gokukt_cooldown 30  //# of seconds before Goku can use the Kaioken technic again
gokukt_kaiokentime 7  //# of seconds Goku has in Kaioken mode.
gokukt_speed 1000 // How fast can goku run is kaioken mode
gokukt_armor 1000 // How much armor does goku have in kaioken mode
gokukt_health 800 // How much HP does goku have in kaioken mode.
*/

#include <amxmodx>
#include <superheromod>

// GLOBAL VARIABLES
new HeroName[] = "Goku's Kaioken technic"
new bool:HasGokuKT[SH_MAXSLOTS+1]
new GokuKTTimer[SH_MAXSLOTS+1]
//reset variables
new bool:reset_speed[SH_MAXSLOTS+1], bool:reset_health[SH_MAXSLOTS+1], bool:reset_armor[SH_MAXSLOTS+1]
//pcvar holders
new goku_speed, goku_hp, goku_ap, goku_time, goku_cooldown
new g_spritePowerUp
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Goku's Kaioken Technic", "3.0", "MEGA/SOEN/BONINI")
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("gokukt_level", "12")
	goku_cooldown = register_cvar("gokukt_cooldown", "45")
	goku_time = register_cvar("gokukt_kaiokentime", "5")
	goku_speed = register_cvar("gokukt_speed", "5000.0")
	goku_ap = register_cvar("gokukt_armor", "5000")
	goku_hp = register_cvar("gokukt_health", "800")
	
	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(HeroName, "Goku's Kaioken Technic", "Go into Kaiokenmode for X Seconds", true, "gokukt_level")
	
	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("gokukt_init", "gokukt_init")
	shRegHeroInit(HeroName, "gokukt_init")
	
	// KEY DOWN
	register_srvcmd("gokukt_kd", "gokukt_kd")
	shRegKeyDown(HeroName, "gokukt_kd")
	
	register_event("ResetHUD", "new_spawn", "b")
	
	// LOOP
	set_task(1.0, "gokukt_loop", 0, "", 0, "b") //forever loop
	 
}
//----------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_sound("shmod/kaiokenbonini.wav")
	g_spritePowerUp = precache_model("sprites/shmod/kaiokenbonini.spr")
}

public gokukt_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1, temp, 5)
	new id=str_to_num(temp)
	// 2nd Argument is 0 or 1 depending on whether the id has the hero
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	switch(hasPowers) {
		case true: {
			HasGokuKT[id] = true
		}
		case false:	{
			if ( is_user_connected(id) && HasGokuKT[id]) {
 				GokuKTTimer[id] = 0
				HasGokuKT[id] = false
			}
		}
	}
}
//----------------------------------------------------------------------------------------------
public new_spawn(id)
{
	gPlayerUltimateUsed[id] = false
	reset_speed[id] = false
	reset_health[id] = false
	reset_armor[id] = false
}
//----------------------------------------------------------------------------------------------
// RESPOND TO KEYDOWN
public gokukt_kd()
{
	if ( !hasRoundStarted() ) return;

	// First Argument is an id
	new temp[6]
	read_argv(1, temp, 5)
	new id = str_to_num(temp)
	if ( !is_user_alive(id) ) return;
	
	// Let them know they already used their ultimate if they have
	if ( gPlayerUltimateUsed[id] ) {
		playSoundDenySelect(id)
		return
	}
	// Make sure they're not in the middle of Kaioken already
	if ( GokuKTTimer[id] > 0 ) return;
	
	GokuKTTimer[id] = get_pcvar_num(goku_time) + 1
	gokukt_kaiokenmode(id)
	ultimateTimer(id, get_pcvar_float(goku_cooldown))
}
//----------------------------------------------------------------------------------------------
public gokukt_loop()
{
	for ( new id = 1; id <= SH_MAXSLOTS; id++ ) {
		if ( HasGokuKT[id] && is_user_alive(id) && GokuKTTimer[id] >= 0 ) {
			if ( GokuKTTimer[id] > 0 ) {
				GokuKTTimer[id]--
				shGlow(id,255,0,0)
				set_hudmessage(255, 0, 0, -1.0, 0.3, 0, 1.0, 1.0, 0.0, 0.0)
				show_hudmessage(id, "%d seconds left of Kaioken Mode", GokuKTTimer[id])
			}
			else if ( GokuKTTimer[id] == 0 ) {
				GokuKTTimer[id] = -1
				end_kaioken(id)
			}
		}
	}
}
//----------------------------------------------------------------------------------------------
public end_kaioken(id)
{
	new set_health = get_pcvar_num(goku_hp) - get_user_health(id)
	new set_armor = get_pcvar_num(goku_ap) - get_user_armor(id)
	if ( set_health < 1 ) set_health = 100;
	if ( set_armor < 1 ) set_armor = 100;
	
	if ( reset_speed[id] ) {
		shResetSpeed(id)
		reset_speed[id] = false
	}
	if ( reset_health[id] ) {
		set_user_health(id, set_health)
		reset_health[id] = false
	}
	if ( reset_armor[id] ) {
		set_user_armor(id, set_armor)
		reset_armor[id] = false
	}
	set_user_rendering(id)
}
//----------------------------------------------------------------------------------------------
public gokukt_kaiokenmode(id)
{
	if ( HasGokuKT[id] && is_user_alive(id) ) {
		new parm[2]
		parm[0] = id
		parm[1] = 5
		if ( get_pcvar_float(goku_speed) > get_user_maxspeed(id) ) {
			set_user_maxspeed(id, get_pcvar_float(goku_speed));
			reset_speed[id] = true
		}
		
		if ( get_pcvar_num(goku_hp) > get_user_health(id) ) {
			set_user_health(id, get_pcvar_num(goku_hp));
			reset_health[id] = true
		}
		
		if ( get_pcvar_num(goku_ap) > get_user_armor(id) ) {
			set_user_armor(id, get_pcvar_num(goku_ap));
			reset_armor[id] = true
		}
			
			
		set_hudmessage(255, 0, 0, -1.0, 0.3, 0, 0.25, 1.0, 0.0, 0.0)
		show_hudmessage(id, "5 Times x Kaioken! Haaaa!")
		emit_sound(0, CHAN_AUTO, "shmod/kaiokenbonini.wav", VOL_NORM, ATTN_NORM, 0, PITCH_NORM)
		powerup_effect(parm)
		set_task(0.1, "powerup_effect", 0, parm, 2, "a", 85)
	}
}

public powerup_effect(parm[])
{
	if ( !shModActive()) return

	new id = parm[0]

	if ( !is_user_alive(id) ) return

	new Size = parm[1]
	new players[SH_MAXSLOTS], pnum
	new idOthers, Origin[3]

	get_players(players, pnum, "a")

	// Show a powerup to all alive players except the one being powered up.
	for (new i = 0; i < pnum; i++) {
		idOthers = players[i]
		if ( !is_user_alive(idOthers) || idOthers == id ) continue

		get_user_origin(id, Origin)

		// power up sprite - additive sprite, plays 1 cycle
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)			// TE_SPRITE
		write_coord(Origin[0])	// center position
		write_coord(Origin[1])
		write_coord(Origin[2]+20)
		write_short(g_spritePowerUp)	// sprite index
		write_byte(Size)		// scale in 0.1's
		write_byte(50)			// brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycle
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)			// TE_SPRITE
		write_coord(Origin[0]+5) // center position
		write_coord(Origin[1])
		write_coord(Origin[2]+20)
		write_short(g_spritePowerUp)	// sprite index
		write_byte(Size)		// scale in 0.1's
		write_byte(50)			// brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycle
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)			// TE_SPRITE
		write_coord(Origin[0]-5)	// center position
		write_coord(Origin[1])
		write_coord(Origin[2]+20)
		write_short(g_spritePowerUp)	// sprite index
		write_byte(Size)		// scale in 0.1's
		write_byte(50)			// brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycle
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)			// TE_SPRITE
		write_coord(Origin[0])	// center position
		write_coord(Origin[1]+5)
		write_coord(Origin[2]+10)
		write_short(g_spritePowerUp)	// sprite index
		write_byte(Size)		// scale in 0.1's
		write_byte(50)			// brightness
		message_end()

		// power up sprite - additive sprite, plays 1 cycle
		message_begin(MSG_ONE, SVC_TEMPENTITY, Origin, idOthers)
		write_byte(17)			// TE_SPRITE
		write_coord(Origin[0])	// center position
		write_coord(Origin[1]-5)
		write_coord(Origin[2]+10)
		write_short(g_spritePowerUp)	// sprite index
		write_byte(Size)		// scale in 0.1's
		write_byte(50)			// brightness
		message_end()
	}
}
//------------------------------------------------------------------------------------
