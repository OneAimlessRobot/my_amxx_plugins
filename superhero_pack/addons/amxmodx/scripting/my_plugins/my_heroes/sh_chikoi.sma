

#include "../my_include/superheromod.inc"
#include "./superheromod_help_files_includes/superheromod_help_files.inc"
#include "sh_aux_stuff/sh_aux_inc.inc"
#define CHIKOI_HITZONE_TASKID 19999

#define CHIKOI_THE_MAID_PHYSICAL_PROPERTY "Smallness"
// GLOBAL VARIABLES
new gHeroID
new const gHeroName[] = "Chikoi the Maid"
new bool:gHasChikoi[SH_MAXSLOTS+1]



#define SENDAUDIO_MESSAGE_PITCH_ARG 3

//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Chikoi the Maid", "1.0", "TastyMedula")
	
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("chikoi_level", "8")
	register_event("ResetHUD","newRound","b")
	gHeroID=shCreateHero(gHeroName, "Small maid!", "Become headshot only! But it really is headshot only! 1Shot 1Kill!", false, "chikoi_level" )
	new hero_name_arr[STRLEN_FOR_NAMES];
	arrayset(hero_name_arr,0,sizeof hero_name_arr)
	add(hero_name_arr,charsmax(hero_name_arr),gHeroName,charsmax(gHeroName))
	superheromod_help_link_hero(gHeroID, "Chikoi the maid: Help file","chikoi_the_maid_folder/","chikoi_help_file.html",hero_name_arr)
	register_event("Damage", "chikoi_damage", "b", "2!0")
	register_srvcmd("chikoi_init", "chikoi_init")
	shRegHeroInit(gHeroName, "chikoi_init")
	
	
}


public chikoi_init()
{
	
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	gHasChikoi[id]=(hasPowers!=0)
	if(gHasChikoi[id]){
		set_task(0.1, "hitzone_loop", id+CHIKOI_HITZONE_TASKID, "", 0, "b")
		
	}
	else{
		remove_task(id+CHIKOI_HITZONE_TASKID)
	}
	
	
}
stock dmg_message(id, attacker){
	new attacker_name[128];
	new client_name[128];
	get_user_name(attacker,attacker_name,127);
	get_user_name(id,client_name,127);
	sh_chat_message(0,gHeroID,"%s has killed Chikoi the Maid (%s), the Small Maid, at your service.",attacker_name,client_name)

}
public chikoi_damage(id){
if ( !shModActive() || !is_user_alive(id) ||!gHasChikoi[id]) return


new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
new headshot = bodypart == 1 ? 1 : 0
if ( attacker <= 0 || attacker > SH_MAXSLOTS || attacker==id ) return
new attacker_name[128];
new client_name[128];
get_user_name(attacker,attacker_name,127);
get_user_name(id,client_name,127);

if(headshot){

	
	shExtraDamage(id, attacker, 1, CHIKOI_THE_MAID_PHYSICAL_PROPERTY, headshot,SH_DMG_KILL)
	dmg_message(id, attacker)
}

}
public chikoi_hitzones(id)
{
	if ( !shModActive() || !hasRoundStarted() ) return PLUGIN_CONTINUE
	if ( gHasChikoi[id] && is_user_alive(id) ) {
		
		set_user_hitzones(0, id, HITZONE_HEAD)	//remove left arm hitzone
		new client_name[128]
		get_user_name(id,client_name,127)
	}
	return PLUGIN_CONTINUE
}

public hitzone_loop(id){
	
	id-=CHIKOI_HITZONE_TASKID;
	
	if(gHasChikoi[id]){
		
		chikoi_hitzones(id)
		
		
	}
	
	
}
//----------------------------------------------------------------------------------------------
public plugin_cfg()
{
	loadCVARS();
	
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
}
public reset_chikoi(id){

	if ( gHasChikoi[id]) {
		sh_chat_message(id,gHeroID,"Hello player! I am Chikoi the maid, The Small Maid, at your service.")
	}

}
//----------------------------------------------------------------------------------------------
public newRound(id)
{	
if(is_user_alive(id) && shModActive()&&gHasChikoi[id]){ 
	reset_chikoi(id)	
}
return PLUGIN_HANDLED	
}

public sh_extra_damage_fwd_post(victim, attacker, damage, const wpnDescription[32], headshot, dmgMode, bool:dmgStun,bool:dmgFFmsg, const Float:dmgOrigin[3],dmg_type){
	if(client_hittable(victim,gHasChikoi[victim])){
		if(headshot){
			
			
			new Ent = create_entity("info_target")

			if (pev_valid(Ent)!=2){
			return PLUGIN_HANDLED
			}
			entity_set_string(Ent, EV_SZ_classname, CHIKOI_THE_MAID_PHYSICAL_PROPERTY)
			ExecuteHam(Ham_TakeDamage,victim,attacker,Ent,((float(get_user_health(victim)))+1),DMG_GENERIC);
			dmg_message(victim, attacker)
			remove_entity(Ent)
			return DMG_FWD_PASS
		}
		else {
			return DMG_FWD_BLOCK
		}
	}
	return DMG_FWD_PASS
}
