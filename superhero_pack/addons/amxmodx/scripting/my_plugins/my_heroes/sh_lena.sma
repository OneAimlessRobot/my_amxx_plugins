


//---------- User Changeable Defines --------//

// SH 1.20 settings (if running older SH: 0 is no reload, 1 is drop weapon, 4 is normal cs)
// 0-follow server sh_reloadmode cvar setting [Default]
// 1-no reload, continuous shooting
// 2-reload, but backpack ammo never depletes
// 3-drop weapon and get a new one with full clip
// 4-normal cs, reload and backpack ammo depletes
#define AMMO_MODE false

// Comment out to not use the Awp model
#define USE_WPN_MODEL

// Comment out to not give a free Awp
#define GIVE_WEAPONS


//------- Do not edit below this point ------//

#include "../my_include/superheromod.inc"
#include "sh_aux_stuff/sh_aux_inc.inc"
#include "lena_inc/sh_lena_l96_include.inc"
#include "lena_inc/sh_lena_general_include.inc"

#define PLUGIN_AUTHOR "MilkChanTheGOAT"
#define PLUGIN_VER "1.0"
#define PLUGIN_NAME "SUPERHERO Lena de Verias"

// GLOBAL VARIABLES
new HeroName[] = "L96A1"
new bool:gHasLena[SH_MAXSLOTS+1]
new CvarAwpDmgMult, CvarHealPoints

#if defined USE_WPN_MODEL
	new const Model_V_Awp[] = "models/shmod/madassassin_v_awp.mdl"
	new const Model_P_Awp[] = "models/shmod/madassassin_p_awp.mdl"
	new bool:ModelWeaponLoaded
#endif
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin(PLUGIN_NAME, PLUGIN_VER, PLUGIN_AUTHOR)

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("lena_level", "10")
	CvarAwpDmgMult = register_cvar("lena_awpmult", "3.99")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(HeroName, "L96A1", "become Lena de Verias! Get her A.W.P.!", false, "lena_level")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("lena_init", "lena_init")
	shRegHeroInit(HeroName, "lena_init")

	// EVENTS
#if (defined AMMO_MODE < 4) || (defined USE_WPN_MODEL)
	register_event("CurWeapon", "weapon_change", "be", "1=1")
#endif

	register_event("Damage", "lena_damage", "b", "2!0")

#if defined GIVE_WEAPONS
	register_event("ResetHUD", "new_spawn", "b")
	shSetShieldRestrict(HeroName)
#endif
}

public plugin_natives(){

	register_native("lena_get_has_lena","_lena_get_has_lena",0);
	

	

}

public _lena_get_has_lena(iPlugin,iParams){
	new id=get_param(1)
	
	return gHasLena[id]

}
//----------------------------------------------------------------------------------------------
#if defined USE_WPN_MODEL
public plugin_precache()
{
	ModelWeaponLoaded = true
	if ( file_exists(Model_V_Awp) ) {
		precache_model(Model_V_Awp)
	}
	else {
		log_amx("[SH](%s)Aborted loading ^"%s^", file does not exist on server", HeroName, Model_V_Awp)
		ModelWeaponLoaded = false
	}

	if ( file_exists(Model_P_Awp) ) {
		precache_model(Model_P_Awp)
	}
	else {
		log_amx("[SH](%s)Aborted loading ^"%s^", file does not exist on server", HeroName, Model_P_Awp)
		ModelWeaponLoaded = false
	}
}
#endif
//----------------------------------------------------------------------------------------------
public lena_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1, temp, 5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has the hero
	read_argv(2, temp, 5)
	new hasPowers = str_to_num(temp)

#if defined GIVE_WEAPONS
	// Reset thier shield restrict status
	// Shield restrict MUST be before weapons are given out
	shResetShield(id)
#endif

	switch(hasPowers)
	{
		case true:
		{
			gHasLena[id] = true

			if ( is_user_alive(id) )
			{
				#if defined GIVE_WEAPONS
					lena_weapons(id)
				#endif

				#if defined USE_WPN_MODEL
					switch_model(id)
				#endif
			}
		}

		case false:
		{
			#if defined GIVE_WEAPONS
			// Check is needed since this gets run on clearpowers even if user didn't have this hero
			if ( is_user_alive(id) && gHasLena[id] )
			{
				engclient_cmd(id, "drop", "weapon_awp")
			}
			#endif

			gHasLena[id] = false
		}
	}
}
//----------------------------------------------------------------------------------------------
#if defined GIVE_WEAPONS
public new_spawn(id)
{
	if ( shModActive() && is_user_alive(id) && gHasLena[id] )
	{
		lena_weapons(id)
	}
}
//----------------------------------------------------------------------------------------------
lena_weapons(id)
{
	if ( shModActive() && is_user_alive(id) && gHasLena[id] ) {
		shGiveWeaponID(id, CSW_AWP)
	}
}
#endif
//----------------------------------------------------------------------------------------------
#if defined USE_WPN_MODEL
switch_model(id)
{
	if ( !shModActive() || !is_user_alive(id) || !gHasLena[id] )
		return

	new clip, ammo, wpnid = get_user_weapon(id, clip, ammo)

	if ( wpnid == CSW_AWP )
	{
		set_pev(id, pev_viewmodel2, Model_V_Awp)
		set_pev(id, pev_weaponmodel2, Model_P_Awp)
	}
}
#endif
//----------------------------------------------------------------------------------------------
#if defined AMMO_MODE < 4 || defined USE_WPN_MODEL
public weapon_change(id)
{
	if ( !shModActive() || !gHasLena[id] || !is_user_alive(id) ||!is_user_connected(id) )
		return

	//weaponID = read_data(2)
	if ( read_data(2) != CSW_AWP )
		return

#if defined USE_WPN_MODEL
	if ( ModelWeaponLoaded )
		switch_model(id)
#endif

#if AMMO_MODE < 4
	// Never Run Out of Ammo!
	//clip = read_data(3)
	if ( read_data(3) == 0 ) {
		shReloadAmmo(id, AMMO_MODE)
	}
#endif
}
#endif
//----------------------------------------------------------------------------------------------
public lena_damage(id)
{
	if ( !shModActive() || !is_user_alive(id) ||!is_user_connected(id)){
		return HAM_IGNORED
	}

	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)

	if ( !is_user_connected(attacker) ||id==attacker )
		return HAM_IGNORED

	if ( gHasLena[attacker] && weapon == CSW_AWP )
	{
		new damage = read_data(2)
		new headshot = bodypart == 1 ? 1 : 0

		// do extra damage
		new extraDamage = floatround(damage * get_pcvar_float(CvarAwpDmgMult) - damage)
		if ( extraDamage > 0 )
			shExtraDamage(id, attacker, extraDamage, "awp", headshot)
	}
	return HAM_IGNORED
}
//----------------------------------------------------------------------------------------------
public client_connect(id)
{
	gHasLena[id] = false
}
//----------------------------------------------------------------------------------------------
