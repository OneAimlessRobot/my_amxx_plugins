// Arctic Predator

/* CVARS - copy and paste to shconfig.cfg
	thrashy_level 20
	thrashy_explode_radius 500
	thrashy_explode_maxdamage 190
	thrashy_explodeod_radius 500
	thrashy_explodeod_maxdamage 190
	thrashy_ndynamites 10
	thrashy_cooldown 30
*/

#include "../my_include/superheromod.inc"



#define MAX_PICKED 1

// GLOBAL VARIABLES
new const Model_Player[] = "models/player/thrash/thrash.mdl"
new const Model_Weapon_P[] = "models/shmod/thrashteen/p_superak47.mdl";
new const Model_Weapon_V[] = "models/shmod/thrashteen/v_superak47.mdl"
new gHeroName[]="Thrashy Thrash"
new gThrashyExplosionAmmo[SH_MAXSLOTS+1]
new bool:gHasThrashyPowers[SH_MAXSLOTS+1]
new bool:gHasAcess[SH_MAXSLOTS+1]
new bool:gmorphed[SH_MAXSLOTS+1]
new bool:gHasThrashZoom[SH_MAXSLOTS+1]


new thrash_bullets[ SH_MAXSLOTS+1 ]
new gLastWeapon[SH_MAXSLOTS+1]


new times_picked


new blast_shroom
new spr_laser
new spr_laser_impact
new gHeroID;
#define TASKID 532221
new smoke, white, fire
new g_spriteBlood, g_spriteBldSpray
new xplodedmg,xplode_radius,xplodeoddmg,xplodeod_radius,Float:ak_dmgmult,ndynamites,cooldown,team_glow_on
new a_flags[10]
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Thrashy Thrsh","1.0","Thrasher")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("thrashy_level", "30" )
	register_cvar("thrashy_explode_radius", "500" )
	register_cvar("thrashy_explode_maxdamage", "400" )
	register_cvar("thrashy_explodeod_radius", "500" )
	register_cvar("thrashy_explodeod_maxdamage", "1100" )
	register_cvar("thrashy_ndynamites", "10")
	register_cvar("thrashy_cooldown", "2" )
	register_cvar("thrashy_adminflag", "a")
	register_cvar("thrashy_akmult", "10.0" )
	register_cvar("thrashy_teamglow", "1" )
	register_cvar("thrashy_speed", "500" )
	new healthcvar=register_cvar("thrashy_health", "1000" )

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID=shCreateHero(gHeroName, "Warrior (Admin acess SLAY)", "Warrior! Explode and crush and kill and THRASH!!!!!!! (supd up ak + explsns on keydown. gl :P!) ", true, "thrashy_level" )

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	register_event("ResetHUD","newRound","b")
	register_event("CurWeapon", "weaponChange", "be", "1=1")
	register_event("DeathMsg","death","a")
	register_event("Damage", "thrashy_damage", "b", "2!0")
	register_event("CurWeapon", "make_tracer", "be", "1=1", "3>0")
	register_forward(FM_TraceLine,"fw_traceline");
	register_forward( FM_CmdStart, "fw_CmdStart" )


	// INIT
	register_srvcmd("thrashy_init", "thrashy_init")
	shRegHeroInit(gHeroName, "thrashy_init")

	register_srvcmd("thrashy_kd", "thrashy_kd")
	shSetShieldRestrict(gHeroName)
	shRegKeyDown(gHeroName, "thrashy_kd")
	sh_set_hero_hpap(gHeroID, healthcvar, 0)
	shSetMaxSpeed(gHeroName, "thrashy_speed", "[0]")
	times_picked=0;
}
//----------------------------------------------------------------------------------------------
public client_connect(id)
{
	gmorphed[id] = false
}

public num_picked_check(id){
	return!(times_picked>=MAX_PICKED)

}
public haveable_check(id){
	return!(times_picked>MAX_PICKED)

}
//----------------------------------------------------------------------------------------------
public thrashy_init()
{
		
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	gHasThrashyPowers[id]=(hasPowers!=0)
	gHasAcess[id]=gHasThrashyPowers[id]
	if ( is_user_connected(id) && gHasThrashyPowers[id]){
		
		thrashy_pickable_check(id)
		
	}
	if(gHasThrashyPowers[id]){
		
		times_picked=clamp(times_picked+1,0,MAX_PICKED);
		gThrashyExplosionAmmo[id]=ndynamites
		thrashy_tasks(id)
		switchgun(id)
		thrashy_weapons(id+TASKID)
	}
	else{
		thrashy_unmorph(id+TASKID)
		shRemHealthPower(id)
		shRemSpeedPower(id)
		times_picked=clamp(times_picked-1,0,MAX_PICKED);
	}
	
}
//----------------------------------------------------------------------------------------------
public plugin_cfg()
{
	loadCVARS();
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
	get_cvar_num("thrashy_level")
	xplode_radius=get_cvar_num("thrashy_explode_radius")
	xplodedmg=get_cvar_num("thrashy_explode_maxdamage")
	xplodeod_radius=get_cvar_num("thrashy_explodeod_radius")
	xplodeoddmg=get_cvar_num("thrashy_explodeod_maxdamage")
	ndynamites=get_cvar_num("thrashy_ndynamites")
	team_glow_on=get_cvar_num("thrashy_teamglow")
	cooldown=get_cvar_num("thrashy_cooldown")
	get_cvar_string("thrashy_adminflag",a_flags,9)
	ak_dmgmult=get_cvar_float("thrashy_akmult")
}
public fw_CmdStart( id, uc_handle, seed )
{
	if( !is_user_alive( id ) ) 
		return PLUGIN_HANDLED
	
	if( ( get_uc( uc_handle, UC_Buttons ) & IN_ATTACK2 ) && !( pev( id, pev_oldbuttons ) & IN_ATTACK2 ) )
	{
		new szClip, szAmmo
		new szWeapID = get_user_weapon( id, szClip, szAmmo )
		
		if( szWeapID == CSW_AK47 && gHasThrashyPowers[id] == true && !gHasThrashZoom[id] == true)
		{
			gHasThrashZoom[id] = true
			cs_set_user_zoom( id, CS_SET_AUGSG552_ZOOM, 0 )
			emit_sound( id, CHAN_ITEM, "weapons/zoom.wav", 0.20, 2.40, 0, 100 )
		}
		
		else if ( szWeapID == CSW_AK47 && gHasThrashyPowers[id] == true && gHasThrashZoom[id])
		{
			gHasThrashZoom[ id ] = false
			cs_set_user_zoom( id, CS_RESET_ZOOM, 0 )
			
		}
		
	}
	return PLUGIN_HANDLED
}
//----------------------------------------------------------------------------------------------
public thrashy_tasks(id)
{
	set_task(1.0, "thrashy_morph", id+TASKID)
	if( team_glow_on){
		set_task(1.0, "thrashy_glow", id+TASKID, "", 0, "b" )
	}

}
//----------------------------------------------------------------------------------------------
public thrashy_morph(id)
{
	id-=TASKID
	if ( gmorphed[id] || !is_user_alive(id)||!gHasThrashyPowers[id] ) return

	cs_set_user_model(id, "thrash")

	// Message
	set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1)
	show_hudmessage(id, "You are now the baddest bitch on earth!")

	gmorphed[id] = true
	
}
//----------------------------------------------------------------------------------------------
public thrashy_unmorph(id)
{
	id-=TASKID
	if ( !is_user_connected(id) ) return
	if ( gmorphed[id] ) {
		// Message
		set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1)
		show_hudmessage(id, "Aw man!!!.... Already? Hmpf Imagine girls having ANY fun EVER!")

		cs_reset_user_model(id)

		gmorphed[id] = false

		if ( team_glow_on ) {
			remove_task(id+TASKID)
			set_user_rendering(id)
		}
	}
}
//----------------------------------------------------------------------------------------------
public thrashy_glow(id)
{
	id -= TASKID

	if ( !is_user_connected(id) ) {
		//Don't want any left over residuals
		remove_task(id+TASKID)
		return
	}

	if ( gHasThrashyPowers[id] && is_user_alive(id)) {
		if ( get_user_team(id) == 1 ) {
			shGlow(id, 255, 0, 0)
		}
		else {
			shGlow(id, 0, 0, 255)
		}
	}
}
//----------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_model(Model_Weapon_V)
	precache_model(Model_Weapon_P)
	precache_model(Model_Player)
	
	if ( file_exists(Model_Player) ) {
		precache_model(Model_Player)
	}
	else {
		log_amx("[SH](%s)Aborted loading ^"%s^", file does not exist on server", gHeroName,	Model_Player)
	}
	if ( file_exists("sprites/laserbeam.spr") ) {
			spr_laser = precache_model("sprites/laserbeam.spr")
	}
	else {
		log_amx("[SH](%s)Aborted loading 'sprites/laserbeam.spr', file does not exist on server", gHeroName)
	}
	precache_sound("weapons/electro5.wav")
	spr_laser = precache_model("sprites/laserbeam.spr")
	smoke = precache_model("sprites/steam1.spr")
	blast_shroom = precache_model("sprites/mushroom.spr")
	spr_laser_impact = precache_model("sprites/zerogxplode.spr")
	white = precache_model("sprites/shockwave.spr")
	fire = precache_model("sprites/zerogxplode.spr")
	g_spriteBlood = precache_model("sprites/blood.spr")
	g_spriteBldSpray = precache_model("sprites/bloodspray.spr")
	precache_sound("weapons/zoom.wav")
}
//----------------------------------------------------------------------------------------------
public thrashy_kd()
{
	new temp[6]

	// First Argument is an id with colussus Powers!
	read_argv(1,temp,5)
	new id=str_to_num(temp)

	if ( !is_user_alive(id) ) 
		return PLUGIN_HANDLED

	// Let them know they already used their ultimate if they have
	if ( gPlayerUltimateUsed[id] || !gThrashyExplosionAmmo[id]) 
	{
		playSoundDenySelect(id)
		if ( gThrashyExplosionAmmo[id] ){
			sh_chat_message( id, gHeroID, "You Have to wait for the cooldown!!!!!! Sry :(" );
		}
		else{
			sh_chat_message( id, gHeroID, "You have no ammo!!! Stoooooooooop you ugly >(((((( (jk I love u queen)!!!!!!!");
		}
		return PLUGIN_HANDLED
	}

	BlowUp(id,false);

	new currAmmount=--gThrashyExplosionAmmo[id];
	gPlayerUltimateUsed[id]=true
	if ( 0 < currAmmount < 5 ){
		sh_chat_message( id, gHeroID, "You Have %d Dynamites%s Left", currAmmount, currAmmount == 1 ? "" : "s" );
	}
	ultimateTimer(id, cooldown * 1.0)

	
	// colussus Messsage
	//  emit_sound(id,CHAN_STATIC, g_colussusSound, 0.1, ATTN_NORM, 0, PITCH_LOW)

	return PLUGIN_HANDLED
}
//----------------------------------------------------------------------------------------------
public newRound(id)
{	
	
	if (haveable_check(id)&& gHasAcess[id]&&is_user_alive(id) && shModActive() ) {
		thrashy_haveable_check(id)
		if(gHasThrashyPowers[id]){
			gPlayerUltimateUsed[id]=false
			gThrashyExplosionAmmo[id]=ndynamites
		
			thrashy_tasks(id)
			set_task(0.1, "thrashy_weapons", id+TASKID)
			switchgun(id)
			thrashy_weapons(id+TASKID)
		}
	}
	return PLUGIN_HANDLED
}
//-----------------------------------------------------------------------------------------------
public switchgun(id)
{
	if ( !is_user_alive(id)||!gHasThrashyPowers[id]) return
	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	if (wpnid == CSW_AK47) {
		// Weapon Model change thanks to [CCC]Taz-Devil
		entity_set_string(id, EV_SZ_viewmodel, Model_Weapon_V)
		entity_set_string(id, EV_SZ_weaponmodel, Model_Weapon_P)
	}
}
public make_tracer(id)
{
	
if ( !gHasThrashyPowers[id] ||!is_user_alive(id)) return PLUGIN_CONTINUE 
new wpnid = read_data(2)		// id of the weapon 
new ammo = read_data(3)		// ammo left in clip 

if ( wpnid  == CSW_AK47)
{
	if (gLastWeapon[id] == 0) gLastWeapon[id] = wpnid
	
	if ((thrash_bullets[id] > ammo)&&(gLastWeapon[id] == wpnid)) 
	{
		
		new vec1[3], vec2[3]
		get_user_origin(id, vec1, 1) // origin; where you are
		get_user_origin(id, vec2, 4) // termina; where your bullet goes

			// tracer beam
		message_begin(MSG_PAS, SVC_TEMPENTITY, vec1)
		write_byte(0)        // TE_BEAMPOINTS
		write_coord(vec1[0])
		write_coord(vec1[1])
		write_coord(vec1[2])
		write_coord(vec2[0])
		write_coord(vec2[1])
		write_coord(vec2[2])
		write_short(spr_laser)    // laserbeam sprite
		write_byte(0)        // starting frame
		write_byte(10)        // frame rate
		write_byte(2)        // life in 0.1s
		write_byte(4)        // line width in 0.1u
		write_byte(1)        // noise in 0.1u
		write_byte(255)        // red
		write_byte(0)      // green
		write_byte(255)        // blue
		write_byte(190)        // brightness
		write_byte(100)        // scroll speed
		message_end()

			// bullet impact explosion
		message_begin(MSG_PAS, SVC_TEMPENTITY, vec2)
		write_byte(3)        // TE_EXPLOSION
		write_coord(vec2[0])    // end point of beam
		write_coord(vec2[1])
		write_coord(vec2[2])
		write_short(spr_laser_impact)    // blast sprite
		write_byte(10)            // scale in 0.1u
		write_byte(30)            // frame rate
		write_byte(8)            // TE_EXPLFLAG_NOPARTICLES
		message_end()            // ..unless i'm mistaken, noparticles helps avoid a crash
			
	}
	thrash_bullets[id] = ammo
	gLastWeapon[id]=wpnid;
}
return PLUGIN_CONTINUE 

}
//-----------------------------------------------------------------------------------------------
public weaponChange(id)
{
	if ( !gHasThrashyPowers[id] ||!shModActive() ) return

	new wpnid = read_data(2)
	new clip = read_data(3)

	if ( wpnid != CSW_AK47)
	{
		return
	}

	switchgun(id)

	// Never Run Out of Ammo!
	if ( clip == 0 ) {
		shReloadAmmo(id)
	}
}
//-----------------------------------------------------------------------------------------------
public thrashy_weapons(id)
{
	id-=TASKID
	if ( is_user_alive(id) ) {
		shGiveWeapon(id,"weapon_ak47")
	}
}
//----------------------------------------------------------------------------------------------
public death()
{
	new id = read_data(2)
	gPlayerUltimateUsed[id]=false
	thrashy_unmorph(id+TASKID)
	if ( gHasThrashyPowers[id] )
	{
		BlowUp(id,true)
	}
}
//-----------------------------------------------------------------------------------------------
public thrashy_damage(id)
{
	if (!shModActive() || !is_user_alive(id)) return PLUGIN_CONTINUE

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0

	if ( (attacker <= 0 || attacker > SH_MAXSLOTS )|| (attacker==id)||!is_user_connected(attacker)) return PLUGIN_CONTINUE

	if ( gHasThrashyPowers[attacker]&&weapon == CSW_AK47 && is_user_alive(id)  )
	{
		new health = get_user_health(id)

		// damage is less than 10%
		if ( ( (1.0 * damage) / (1.0 * (health + damage) ) ) < 0.01 ) return PLUGIN_CONTINUE

		new origin[3]
		get_user_origin(id, origin)

		// player fades..


		// beeeg explody!
		message_begin(MSG_ALL, SVC_TEMPENTITY)
		write_byte(3)			// TE_EXPLOSION
		write_coord(origin[0])
		write_coord(origin[1])
		write_coord(origin[2]-22)
		write_short(blast_shroom)	// mushroom cloud
		write_byte(40)			// scale in 0.1's
		write_byte(12)			// frame rate
		write_byte(12)			// TE_EXPLFLAG_NOPARTICLES & TE_EXPLFLAG_NOSOUND
		message_end()


		// do extra damage
		new extraDamage = floatround(float(damage)*ak_dmgmult-float(damage));
		shExtraDamage( id, attacker, extraDamage, "supermegaEPICTHRASHER", headshot )
		if(extraDamage>=health){
			set_user_rendering(id, kRenderFxFadeSlow, 255, 255, 255, kRenderTransColor, 0);
			// do turn down that awful racket..to be replaced by a blood spurt!
			message_begin(MSG_ALL, SVC_TEMPENTITY)
			write_byte(10)	// TE_LAVASPLASH
			write_coord(origin[0])
			write_coord(origin[1])
			write_coord(origin[2]-26)
			message_end()

		}
	}
	return PLUGIN_CONTINUE
}

//-----------------------------------------------------------------------------------------------
public explode( vec1[3] )
{
	// blast circles
	message_begin( MSG_BROADCAST,SVC_TEMPENTITY,vec1)
	write_byte( 21 )
	write_coord(vec1[0])
	write_coord(vec1[1])
	write_coord(vec1[2] + 16)
	write_coord(vec1[0])
	write_coord(vec1[1])
	write_coord(vec1[2] + 1936)
	write_short( white )
	write_byte( 0 ) // startframe
	write_byte( 0 ) // framerate
	write_byte( 2 ) // life 2
	write_byte( 60 ) // width 16
	write_byte( 0 ) // noise
	write_byte( 255 ) // r
	write_byte( 0 ) // g
	write_byte( 0 ) // b
	write_byte( 255 ) //brightness
	write_byte( 0 ) // speed
	message_end()
	//Explosion2
	message_begin( MSG_BROADCAST,SVC_TEMPENTITY)
	write_byte( 12 )
	write_coord(vec1[0])
	write_coord(vec1[1])
	write_coord(vec1[2])
	write_byte( 188 ) // byte (scale in 0.1's) 188
	write_byte( 10 ) // byte (framerate)
	message_end()

	//TE_Explosion
	message_begin( MSG_BROADCAST,SVC_TEMPENTITY,vec1)
	write_byte( 3 )
	write_coord(vec1[0] + random_num( -100, 100 ))
	write_coord(vec1[1] + random_num( -100, 100 ))
	write_coord(vec1[2]+ random_num( -50, 50 ))
	write_short( fire )
	write_byte(  random_num(0,20) + 20  ) // byte (scale in 0.1's) 188
	write_byte( 12 ) // byte (framerate)
	write_byte( 0 ) // byte flags
	message_end()

	//Smoke
	message_begin( MSG_BROADCAST,SVC_TEMPENTITY,vec1)
	write_byte( 5 ) // 5
	write_coord(vec1[0] + random_num( -100, 100 ))
	write_coord(vec1[1] + random_num( -100, 100 ))
	write_coord(vec1[2] + random_num( -50, 50 ))
	write_short( smoke )
	write_byte( 60 )  // 2
	write_byte( 10 )  // 10
	message_end()
}
//----------------------------------------------------------------------------------------------
public BlowUp(id,bool:died)
{
	if ( !shModActive() ||!gHasThrashyPowers[id]){	
		return PLUGIN_CONTINUE;
			
			
	}
	new Float:dRatio, damage, distanceBetween
	new damradius;
	new maxdamage;
	if(died){
		damradius = xplodeod_radius
		maxdamage= xplodeoddmg
	}
	else{
	
	
		damradius = xplode_radius
		maxdamage= xplodedmg
	}

	new FFOn = get_cvar_num("mp_friendlyfire")
	new origin[3], origin1[3]
	get_user_origin(id,origin)

	explode(origin) // blowup even if dead

	for(new a = 1; a <= SH_MAXSLOTS; a++) {
		if( is_user_alive(a) && ( get_user_team(id) != get_user_team(a) || FFOn || (a == id &&died)) ) {

			get_user_origin(a,origin1)

			distanceBetween = get_distance(origin, origin1 )
			if( distanceBetween < damradius ) {
				if ( a == id ) {
					damage = maxdamage * 4
				}
				else {
					dRatio = float(distanceBetween) / float(damradius)
					damage = maxdamage - floatround( maxdamage * dRatio)
				}
				shExtraDamage(a, id, damage, "Mega spy movie shit")
			} // distance
		} // alive
	} // loop
	return PLUGIN_CONTINUE;
}
//----------------------------------------------------------------------------------------------
public fw_traceline(Float:v1[3],Float:v2[3],noMonsters,id)
{
	if(!is_user_alive(id))
	return FMRES_IGNORED;

	if(!gHasThrashyPowers[id])
	return FMRES_IGNORED;
	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	
	if(wpnid != CSW_AK47)
	return FMRES_IGNORED;

	// get crosshair aim
	new MyAim[3], Float:flMyAim[3];
	get_user_origin(id,MyAim,3);
	IVecFVec(MyAim,flMyAim);

	// set crosshair aim
	set_tr(TR_vecEndPos,flMyAim);

	// get ent looking at
	new ent, body;
	get_user_aiming(id,ent,body);

	// if looking at something
	if(is_valid_ent(ent)) {
		set_tr(TR_flFraction,0.1); // 1.0 == no hit, < 1.0 == hit
		set_tr(TR_pHit,ent); // entity hit
		set_tr(TR_iHitgroup,body); // bodypart hit
	}

	return FMRES_IGNORED;
}
//----------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------
public blood_spray(vic, vicOrigin[3])
{
	new x, y
	for(new i = 0; i < 2; i++) {
		x = random_num(-10, 10)
		y = random_num(-10, 10)
		for(new j = 0; j < 2; j++) {
			// Blood spray
			message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
			write_byte(115)				// TE_BLOODSPRITE
			write_coord(vicOrigin[0]+(x*j))	// position
			write_coord(vicOrigin[1]+(y*j))
			write_coord(vicOrigin[2]+21)
			write_short(g_spriteBldSpray)	// sprite1 index
			write_short(g_spriteBlood)	// sprite2 index
			write_byte(248) 			// color RED = 248 YELLOW = 196
			write_byte(10) 			// scale
			message_end()
		}
	}
}
/*public drop_hero(id){

	id-=TASKID


}*/
//----------------------------------------------------------------------------------------------
public thrashy_pickable_check(id)
{

	if ( gHasThrashyPowers[id] &&  (!num_picked_check(id)||!(get_user_flags(id)&read_flags(a_flags)))) {
		gHasThrashyPowers[id] = false
		new dropMsg[100];
		formatex(dropMsg,99,"drop %s",gHeroName);
		_dropPower(id,dropMsg,0);
		
		sh_chat_message(id, gHeroID, "STOOOOPPPP!!!! YOURE NOT AEDMIN1111111!!!!! Num picked: %d^n",times_picked)
	}
}public thrashy_haveable_check(id)
{

	if ( gHasThrashyPowers[id] &&  (!haveable_check(id)||!(get_user_flags(id)&read_flags(a_flags)))) {
		gHasThrashyPowers[id] = false
		new dropMsg[100];
		formatex(dropMsg,99,"drop %s",gHeroName);
		_dropPower(id,dropMsg,0);
		
		sh_chat_message(id, gHeroID, "STOOOOPPPP!!!! YOURE NOT AEDMIN!!!!!11111")
	}
}
