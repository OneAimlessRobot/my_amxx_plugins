

#include "../my_include/superheromod.inc"
#include <xs>
#include "soccer_ball_inc/sh_roberto_get_set.inc"
#include "soccer_ball_inc/sh_soccer_funcs.inc"

// GLOBAL VARIABLES

new gHasRoberto[SH_MAXSLOTS+1]
new gNumBalls[SH_MAXSLOTS+1]

new round_win[] = "shmod/roberto_carlos/cheers/round_win.wav"
new round_lose[] = "shmod/roberto_carlos/cheers/round_lose.wav"

new gHeroLevel
new num_balls
new Float:ball_cooldown


//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Roberto", "1.0", "TastyMedula")
	
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	
	register_srvcmd("roberto_kd", "roberto_kd")
	shRegKeyDown(gHeroName, "roberto_kd")
	/*register_srvcmd("roberto_ku", "roberto_ku")
	shRegKeyUp(gHeroName, "roberto_ku")
	*/
	register_cvar("roberto_level", "8")
	
	register_cvar("roberto_num_balls", "100")
	register_cvar("roberto_ball_cooldown", "1.0")
	register_event("ResetHUD","newRound","b")
	gHeroID=shCreateHero(gHeroName, "Roberto carlos!", "take a freekick and kill everybody!", true, "roberto_level" )
	roberto_set_hero_id(gHeroID)
	//register_event("Damage", "lara_damage", "b", "2!0")
	register_event("DeathMsg","death","a")
	register_srvcmd("roberto_init", "roberto_init")
	shRegHeroInit(gHeroName, "roberto_init")
	register_event("SendAudio","ev_SendAudio","a","2=%!MRAD_terwin","2=%!MRAD_ctwin","2=%!MRAD_rounddraw");
	
	
	
}

public ev_SendAudio(){
	
	new sTeam[22];
	read_data(2,sTeam,charsmax(sTeam));
	new CsTeams:win_team=CS_TEAM_UNASSIGNED
	new CsTeams:lose_team=CS_TEAM_UNASSIGNED
	new CsTeams:player_team=CS_TEAM_UNASSIGNED
	new bool:playing_win_sound=false
	new bool:playing_lose_sound=false
	if(containi(sTeam,"terwin") != -1){
		
		win_team=CS_TEAM_T
		lose_team=CS_TEAM_CT
		
		
	}
	else if(containi(sTeam,"ctwin") != -1){
		
		
		win_team=CS_TEAM_CT
		lose_team=CS_TEAM_T
		
	}
	else {
		
		
	} // Draw
	for(new id=0;id<SH_MAXSLOTS+1;id++){
		
		if(gHasRoberto[id]){
			player_team=cs_get_user_team(id)
			if(player_team==win_team)
				if(!playing_win_sound){
					playing_win_sound=true
					emit_sound(id, CHAN_VOICE, round_win, VOL_NORM, ATTN_NORM, 0, PITCH_NORM)
				
				}
				else{
					emit_sound(id, CHAN_VOICE, round_win, VOL_NORM, ATTN_NORM, SND_STOP, PITCH_NORM)
					emit_sound(id, CHAN_VOICE, round_win, VOL_NORM, ATTN_NORM, 0, PITCH_NORM)
				
				}
			
			}
			else if(player_team==lose_team){
				if(!playing_lose_sound){
					playing_lose_sound=true
					emit_sound(id, CHAN_VOICE, round_lose, VOL_NORM, ATTN_NORM, 0, PITCH_NORM)
				
				}
				else{
					emit_sound(id, CHAN_VOICE, round_lose, VOL_NORM, ATTN_NORM, SND_STOP, PITCH_NORM)
					emit_sound(id, CHAN_VOICE, round_lose, VOL_NORM, ATTN_NORM, 0, PITCH_NORM)
				
				}
			}
			
		}
			
		
}
public plugin_natives(){
	
	
	register_native("roberto_dec_num_balls","_roberto_dec_num_balls",0);
	register_native("roberto_get_num_balls","_roberto_get_num_balls",0);
	register_native("roberto_set_num_balls","_roberto_set_num_balls",0);
	
	
	
	register_native("roberto_set_hero_id","_roberto_set_hero_id",0);
	register_native("roberto_get_hero_id","_roberto_get_hero_id",0);
	
	register_native("roberto_get_has_roberto","_roberto_get_has_roberto",0);
	register_native("roberto_set_has_roberto","_roberto_set_has_roberto",0);
	
	
}

public _roberto_set_has_roberto(iPlugin,iParams){
	new id= get_param(1)
	new value_to_set= get_param(2)
	gHasRoberto[id]=value_to_set;
}
public _roberto_get_has_roberto(iPlugin,iParams){
	new id= get_param(1)
	return gHasRoberto[id]
}

public _roberto_get_hero_id(iPlugin,iParams){
	return gHeroID
}
public _roberto_set_hero_id(iPlugin,iParams){
	gHeroID=get_param(1)
}

public _roberto_set_num_balls(iPlugin,iParams){
	new id= get_param(1)
	new value_to_set=get_param(2)
	gNumBalls[id]=value_to_set;
}
public _roberto_get_num_balls(iPlugin,iParams){
	
	
	new id= get_param(1)
	return gNumBalls[id]
	
}

public _roberto_dec_num_balls(iPlugin,iParams){
	
	
	new id= get_param(1)
	gNumBalls[id]-= (gNumBalls[id]>0)? 1:0
	
}


public roberto_init()
{
	
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	gHasRoberto[id]=(hasPowers!=0)
	if(gHasRoberto[id]){
		gNumBalls[id]=num_balls
		
	}
	else{
		gNumBalls[id]=0
	}
	
	
}
//----------------------------------------------------------------------------------------------
public plugin_cfg()
{
	loadCVARS();
	
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
	
	gHeroLevel=get_cvar_num("roberto_level")
	num_balls=get_cvar_num("roberto_num_balls")
	ball_cooldown=get_cvar_float("roberto_ball_cooldown")
}

public roberto_kd()
{
	new temp[6]
	
	// First Argument is an id with colussus Powers!
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	if ( !is_user_alive(id)||!gHasRoberto[id]) return PLUGIN_HANDLED
	if(!gNumBalls[id]){
		
		sh_chat_message(id,gHeroID,"Out of balls!!!!")
		playSoundDenySelect(id)
		return PLUGIN_HANDLED
	}
	if(gPlayerUltimateUsed[id]){
		
		sh_chat_message(id,gHeroID,"Intervalo!!!!")
		playSoundDenySelect(id)
		return PLUGIN_HANDLED
	}
	
	ultimateTimer(id, ball_cooldown)
	kick_the_ball(id)
	
	return PLUGIN_HANDLED
}
//----------------------------------------------------------------------------------------------
public newRound(id)
{	
	if(is_user_alive(id) && shModActive()){
		if ( gHasRoberto[id]) {
			sh_end_cooldown(id+SH_COOLDOWN_TASKID)
			gNumBalls[id]=num_balls
		}
	}
	return PLUGIN_HANDLED
	
}
public sh_client_spawn(id)
{
	if ( gHasRoberto[id] ) {
	}
	
}
/*
public erica_ku()
{
	new temp[6]
	
	// First Argument is an id with colussus Powers!
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	if ( !is_user_alive(id)||!gHasErica[id]) return PLUGIN_HANDLED
	
	
	return PLUGIN_HANDLED
}*/
public sh_round_end(){
	
	clear_balls()
	
}
public plugin_precache()
{
	precache_sound(round_win)
	precache_sound(round_lose)
	
	
}
public death()
{	
	new id = read_data(2)
	if(!is_user_connected(id)||!gHasRoberto[id]) return
	
	/*new killer= read_data(1)
	new killer_name[128]
	get_user_name(killer,killer_name,127)
	*/
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang2070\\ f0\\ fs16 \n\\ par }
*/
