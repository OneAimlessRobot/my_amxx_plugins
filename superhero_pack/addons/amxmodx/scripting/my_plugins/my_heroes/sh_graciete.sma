
#include "../my_include/superheromod.inc"
#include "q_barrel_inc/sh_q_barrel.inc"
#include "sh_aux_stuff/sh_aux_inc.inc"
#include "q_barrel_inc/sh_graciete_get_set.inc"
#include "q_barrel_inc/sh_graciete_rocket.inc"

#define GRACIETE_HUD_TASKID 17282
#define GRACIETE_MORPH_TASKID 212122
new gHeroID
new const gHeroName[] = "Graciete"
new gHasGraciete[SH_MAXSLOTS+1]
new gmorphed[SH_MAXSLOTS+1]
new teamglow_on
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Graciete", "1.0", "TastyMedula")
	
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("graciete_level", "8")
	register_cvar("graciete_jet_velocity", "8")
	register_cvar("graciete_jet_cooldown", "8")
	register_cvar("graciete_jet_max_power", "8")
	register_cvar("graciete_teamglow_on", "1")
	register_cvar("graciete_jet_stomp_grav_mult", "8")
	register_cvar("graciete_land_explosion_radius", "8")
	register_cvar("graciete_berserk_m3_mult", "8")
	register_cvar("graciete_power_land_charge_time", "8")
	register_event("ResetHUD","newRound","b")
	gHeroID=shCreateHero(gHeroName, "Gritty warrior!", "Gritty warrior.", false, "graciete_level" )

	register_event("DeathMsg","death","a")
	register_srvcmd("graciete_init", "graciete_init")
	shRegHeroInit(gHeroName, "graciete_init")
	RegisterHam(Ham_CS_RoundRespawn,"player","Ham_respawn",_,true)
	
	// Add your code here...
}
public plugin_natives(){

	register_native("graciete_get_has_graciete","_graciete_get_has_graciete",0);
	register_native("graciete_get_hero_id","_graciete_get_hero_id",0);
	

}
public _graciete_get_hero_id(iPlugin,iParams){

	return gHeroID;

}
public _graciete_get_has_graciete(iPlugin,iParams){
	new id=get_param(1);
	return gHasGraciete[id]

}
public graciete_init()
{
	
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	gHasGraciete[id]=(hasPowers!=0)
	if(gHasGraciete[id]){
		
		reset_graciete_user(id)
		q_barrel_set_q_barrel(id)
		graciete_model(id)
		
		set_task( 0.2, "graciete_loop", id+GRACIETE_HUD_TASKID, "", 0, "b")
	}
	else{
		reset_graciete_user(id)
		graciete_unmorph(id+GRACIETE_MORPH_TASKID)
		q_barrel_unset_q_barrel(id)
		remove_task(id+GRACIETE_HUD_TASKID)
	}
	
}

//----------------------------------------------------------------------------------------------
public graciete_model(id)
{
	set_task(1.0, "graciete_morph", id+GRACIETE_MORPH_TASKID)
	if( teamglow_on){
		set_task(1.0, "graciete_glow", id+GRACIETE_MORPH_TASKID, "", 0, "b" )
	}

}
//----------------------------------------------------------------------------------------------
public graciete_morph(id)
{
	id-=GRACIETE_MORPH_TASKID
	if ( gmorphed[id] || !is_user_alive(id)||!gHasGraciete[id] ) return
	
	// Message
	set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1)
	show_hudmessage(id, "Graciete ready.")
	cs_set_user_model(id, "graciete")
	
	gmorphed[id] = true
	
}
//----------------------------------------------------------------------------------------------
public graciete_unmorph(id)
{
	id-=GRACIETE_MORPH_TASKID
	if(!is_user_connected(id)) return
	if ( gmorphed[id] ) {

		cs_reset_user_model(id)

		gmorphed[id] = false

		if ( teamglow_on ) {
			remove_task(id+GRACIETE_MORPH_TASKID)
			set_user_rendering(id)
		}
		// Message
		set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1)
		show_hudmessage(id, "Mission failed.")
	}
}
//----------------------------------------------------------------------------------------------
public graciete_glow(id)
{
	id -= GRACIETE_MORPH_TASKID

	if ( !is_user_connected(id) ) {
		//Don't want any left over residuals
		remove_task(id+GRACIETE_MORPH_TASKID)
		return
	}

	if ( gHasGraciete[id] && is_user_alive(id)) {
		if ( get_user_team(id) == 1 ) {
			shGlow(id, 255, 0, 0)
		}
		else {
			shGlow(id, 0, 0, 255)
		}
	}
}
//----------------------------------------------------------------------------------------------
public graciete_loop(id)
{
	id -= GRACIETE_HUD_TASKID
	
	if ( !client_hittable(id,gHasGraciete[id])){
		
		return PLUGIN_HANDLED
		
	}
	return PLUGIN_CONTINUE
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
	teamglow_on=get_cvar_num("graciete_teamglow_on")
	
}
//----------------------------------------------------------------------------------------------
public newRound(id)
{	
	if(gHasGraciete[id]&&is_user_alive(id) && shModActive()&&!hasRoundStarted()){
			reset_graciete_user(id)
			graciete_model(id)
			jet_uncharge_user(id)
			q_barrel_set_q_barrel(id)
	}
	return PLUGIN_HANDLED
	
}
public sh_client_spawn(id){
	
	if(gHasGraciete[id]&&is_user_alive(id) && shModActive()){
			reset_graciete_user(id)
			graciete_model(id)
			jet_uncharge_user(id)
			q_barrel_set_q_barrel(id)
	}
	return PLUGIN_HANDLED


}
public Ham_respawn(id){

	if(gHasGraciete[id]&&is_user_alive(id) && shModActive()){
			reset_graciete_user(id)
			graciete_model(id)
			jet_uncharge_user(id)
			q_barrel_set_q_barrel(id)
	}
	return HAM_IGNORED


}
//----------------------------------------------------------------------------------------------
public plugin_cfg()
{
	loadCVARS();
	
}
public sh_round_end(){

	clear_jps()

}
public client_disconnected(id){
	
	reset_graciete_user(id)
	graciete_unmorph(id)
	q_barrel_unset_q_barrel(id)
	
	return PLUGIN_HANDLED
	
}
public plugin_precache(){


	precache_model("models/player/graciete/graciete.mdl")
}
public death()
{
	new id = read_data(2)
	if(gHasGraciete[id]){
		
		graciete_unmorph(id+GRACIETE_MORPH_TASKID)
		reset_graciete_user(id)
	}
}
