// Marksman! - The Main Man of the Matrix

/* CVARS - copy and paste to shconfig.cfg

//Marksman
Marksman_level 8
Marksman_g3sg1mult 2.0		//Damage multiplyer for his Dragunov sniper rifle
Marksman_sg550mult 2.0		//Damage multiplyer for his PSG1 sniper rifle

*/

//---------- User Changeable Defines --------//

// 0-follow server sh_reloadmode cvar setting [Default]
// 1-no reload, continuous shooting
// 2-reload, but backpack ammo never depletes
// 3-drop weapon and get a new one with full clip
// 4-normal cs, reload and backpack ammo depletes
#define AMMO_MODE 0

// Comment out to not give a free G3SG1
#define GIVE_WEAPON

//------- Do not edit below this point ------//

#include "../my_include/superheromod.inc"
#include "sh_aux_stuff/sh_aux_inc.inc"
#include "sh_aux_stuff/sh_aux_inc_pt2.inc"

#define MARKSMAN_TASKID 12812
// GLOBAL VARIABLES
new gHeroID
new const gHeroName[] = "Marksman"
new bool:gHasMarksman[SH_MAXSLOTS+1]

new gLastWeapon[SH_MAXSLOTS+1]
new marksman_bullets[ SH_MAXSLOTS+1 ]




new const g_psg1Sounds[1][]={"shmod/marksman/PSG1/g3sg1-1.wav"}
new const g_dragunovSounds[1][]={"shmod/marksman/Dragunov/g3sg1-1.wav"}
new const g_psg1Model[1][]={"models/shmod/marksman/psg1/v_sg550.mdl"}
new const g_dragunovModel[2][]={"models/shmod/marksman/dragunov/v_g3sg1.mdl","models/shmod/marksman/dragunov/p_g3sg1.mdl"}
new gPlayerLevel[SH_MAXSLOTS+1]
new const g_models[3][128];
new const g_sounds[2][128];
new bool:g_modelsloaded
new gHeroLevel
new Float:PSG1_DMG_Mult
new Float:DRAGUNOV_DMG_Mult
new gMaxAlpha,gAlphaByLvlInc,gMinAlpha

//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Marksman", "1.0", "TastyMedula")
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel = register_cvar("Marksman_level", "8")
	register_cvar("Marksman_g3sg1mult", "2.0")
	register_cvar("Marksman_sg550mult", "2.0")
	register_cvar("Marksman_alphainc", "10" )
	
	register_cvar("Marksman_maxalpha", "50" )
	
	register_cvar("Marksman_minalpha", "5" )
	
	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "G3SG1", "Receive a Dragunov (CT) or a PSG1 (T)")
	
	#if defined GIVE_WEAPON
	sh_set_hero_shield(gHeroID, true)
	#endif
	register_event("Damage", "Marksman_damage", "b", "2!0")
	
	// REGISTER EVENTS THIS HERO WILL RESPOND TO!
	#if AMMO_MODE < 4 || defined USE_WEAPON_MODEL
	register_event("CurWeapon", "make_tracer", "be", "1=1", "3>0")
	register_event("CurWeapon", "weapon_change", "be", "1=1")
	#endif
}
//----------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID != heroID ) return
	gPlayerLevel[id]=sh_get_user_lvl(id)
	
	switch(mode) {
		case SH_HERO_ADD: {
			gHasMarksman[id] = true
			set_task( 0.3, "marksman_loop", id+MARKSMAN_TASKID, "", 0, "b")
			
			#if defined GIVE_WEAPON
			Marksman_weapons(id)
			#endif
		}
		
		case SH_HERO_DROP: {
			gHasMarksman[id] = false
			#if defined GIVE_WEAPON
			if ( is_user_alive(id) ) {
				sh_drop_weapon(id, CSW_G3SG1, true)
				sh_drop_weapon(id, CSW_SG550, true)
			}
			#endif
			remove_task(id+MARKSMAN_TASKID)
			
		}
	}
	
	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
}
//----------------------------------------------------------------------------------------------
public plugin_cfg()
{
	loadCVARS();
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
	gHeroLevel=get_cvar_num("Marksman_level");
	DRAGUNOV_DMG_Mult=get_cvar_float("Marksman_g3sg1mult");
	PSG1_DMG_Mult=get_cvar_float("Marksman_sg550mult");
	gAlphaByLvlInc=get_cvar_num("Marksman_alphainc");
	gMaxAlpha=get_cvar_num("Marksman_maxalpha");
	gMinAlpha=get_cvar_num("Marksman_minalpha");
}
//----------------------------------------------------------------------------------------------
public marksman_loop(id)
{
	id -= MARKSMAN_TASKID

	if ( !is_user_connected(id)||!is_user_alive(id)||!gHasMarksman[id]){
	
	
	return PLUGIN_HANDLED
	
	}
	new alpha;
	if(!(gPlayerLevel[id]-gHeroLevel)){
		alpha=gMaxAlpha
			
	}
	else{
		new alpharemoval=gAlphaByLvlInc*(gPlayerLevel[id]-gHeroLevel)
		alpha=max(gMinAlpha,gMaxAlpha-alpharemoval)
	}
	Crouch(id,alpha)
	return PLUGIN_HANDLED
}
//----------------------------------------------------------------------------------------------
#if defined GIVE_WEAPON
public sh_client_spawn(id)
{
	if ( gHasMarksman[id] ) {
		Marksman_weapons(id)
	}

}
public Marksman_damage(id)
{
	if ( !shModActive() || !is_user_alive(id) ) return

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0

	if ( !is_user_connected(attacker) ||id==attacker) return

	if ( gHasMarksman[attacker] && weapon == CSW_G3SG1 && is_user_alive(id) ) {
		new extraDamage = floatround(damage * DRAGUNOV_DMG_Mult - damage)
		if (extraDamage > 0) shExtraDamage(id, attacker, extraDamage, "SVD-Dragunov", headshot)
	
	}
	else if(gHasMarksman[attacker] && weapon == CSW_SG550 && is_user_alive(id) ){
		new extraDamage = floatround(damage * PSG1_DMG_Mult - damage)
		if(extraDamage > 0) shExtraDamage(id, attacker, extraDamage, "PSG-1", headshot)
			
	}
}
public plugin_precache()
{
	strcat(g_models[0],g_psg1Model[0],127)
	strcat(g_models[1],g_dragunovModel[0],127)
	strcat(g_models[2],g_dragunovModel[1],127)
	for(new i=0;i<sizeof(g_models);i++){
	
		if ( file_exists(g_models[i]) ) {
			precache_model(g_models[i])
			console_print(0, "Model loaded: ^"%s^"", g_models[i])
			g_modelsloaded=true
			
		}
		else{
			console_print(0, "Aborted loading ^"%s^", file does not exist on server", g_models[i])
			g_modelsloaded= false
		}
	
	}
	console_print(0, "Models loaded? %d", g_modelsloaded)
	strcat(g_sounds[0],g_psg1Sounds[0],127)
	strcat(g_sounds[1],g_dragunovSounds[0],127)
	for(new i=0;i<sizeof(g_sounds);i++){
	
			engfunc(EngFunc_PrecacheSound, g_sounds[i])
			console_print(0, "Sound loaded: ^"%s^"", g_sounds[i])
	}
	precache_explosion_fx()
}

public Crouch(id,alpha) {
		
	
	new iPlayer=id
	if( !(1<=iPlayer<=32) )
		return FMRES_IGNORED;
	
	if( !is_user_alive( iPlayer ) ){
		return FMRES_IGNORED;
	}
	
	static Float: fOrigin[ 3 ];
	entity_get_vector( iPlayer, EV_VEC_origin, fOrigin );
	
	if( !(entity_get_int( iPlayer, EV_INT_flags ) & FL_ONGROUND  )){
		sh_set_rendering(iPlayer);
		return FMRES_IGNORED;
	
	
	}
	
	
	static iButton;
	iButton = entity_get_int( iPlayer, EV_INT_button );
	
	if( ( iButton & IN_DUCK ) ) {
		sh_set_rendering(iPlayer,0,0,0,alpha,kRenderFxGlowShell,kRenderTransAlpha);
	}
	else{
		sh_set_rendering(iPlayer);
		return FMRES_IGNORED;
		
	}
	
	return FMRES_IGNORED;
}
//----------------------------------------------------------------------------------------------
switch_model(id)
{
	if ( !sh_is_active() || !is_user_alive(id) || !gHasMarksman[id]||!is_user_connected(id) ) return
	
	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)

	if ( wpnid == CSW_SG550 ) {
		entity_set_string(id, EV_SZ_viewmodel, g_psg1Model[0])
	}
	else if(wpnid == CSW_G3SG1){
		entity_set_string(id, EV_SZ_viewmodel, g_dragunovModel[0])
		entity_set_string(id, EV_SZ_weaponmodel, g_dragunovModel[1])
	}
}
public Marksman_Shooting(id)
{	new clip,ammo
	new wpnid = get_user_weapon(id,clip,ammo)
	
	if(wpnid== CSW_SG550){
		emit_sound(id, CHAN_WEAPON, g_psg1Sounds[0], VOL_NORM, ATTN_NORM, 0, PITCH_NORM)	
	}
	else if(wpnid== CSW_G3SG1){
		emit_sound(id, CHAN_WEAPON, g_dragunovSounds[0], VOL_NORM, ATTN_NORM, 0, PITCH_NORM)	
	}

}

//----------------------------------------------------------------------------------------------
Marksman_weapons(id)
{
if ( sh_is_active() && is_user_alive(id) && gHasMarksman[id] ) {
	if ( cs_get_user_team(id) == CS_TEAM_CT ){
		sh_give_weapon(id, CSW_G3SG1)
	}
	else if ( cs_get_user_team(id) == CS_TEAM_T ){
		sh_give_weapon(id, CSW_SG550)
	}
}
}

public make_tracer(id)
{
	
if ( !gHasMarksman[id] ||!is_user_alive(id)) return PLUGIN_CONTINUE 
new wpnid = read_data(2)		// id of the weapon 
new ammo = read_data(3)		// ammo left in clip 

if ( (wpnid == CSW_SG550)||(wpnid == CSW_G3SG1))
{
	if (gLastWeapon[id] == 0){
		gLastWeapon[id] = wpnid
	}
	if ((marksman_bullets[id] > ammo)&&(gLastWeapon[id] == wpnid)) 
	{
		
			draw_aim_vector(id,{RED,BLUE,WHITE})
			Marksman_Shooting(id)
	}
	marksman_bullets[id] = ammo
	gLastWeapon[id]=wpnid;
}
return PLUGIN_CONTINUE 

}
#endif
//----------------------------------------------------------------------------------------------
#if AMMO_MODE < 4 || defined USE_WEAPON_MODEL
public weapon_change(id)
{
if ( !sh_is_active() || !gHasMarksman[id] ) return

new weapon= read_data(2)
//weaponID = read_data(2)
if ( (weapon != CSW_G3SG1) && (weapon != CSW_SG550)){
	
	return

}
if ( ((weapon == CSW_SG550 )||(weapon == CSW_G3SG1 )) && g_modelsloaded){
	
	switch_model(id)

}
#if AMMO_MODE < 4
// Never Run Out of Ammo!
//clip = read_data(3)
if ( read_data(3) == 0 ) {
	sh_reload_ammo(id, AMMO_MODE)
}
#endif
}
#endif
//----------------------------------------------------------------------------------------------
