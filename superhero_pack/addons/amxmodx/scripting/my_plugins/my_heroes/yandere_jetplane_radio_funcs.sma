
#include "../my_include/superheromod.inc"
#include <fakemeta_util>
#include "jetplane_inc/sh_jetplane_funcs.inc"
#include "jetplane_inc/sh_jetplane_radio_funcs.inc"
#include "jetplane_inc/sh_yandere_get_set.inc"
#include "sh_aux_stuff/sh_aux_inc.inc"
#include "tranq_gun_inc/sh_tranq_fx.inc"
#include "chaff_grenade_inc/sh_chaff_fx.inc"


#define PLUGIN "Superhero yandere radio funcs"
#define VERSION "1.0.0"
#define AUTHOR "Me"
#define Struct				enum


new scan_loaded[SH_MAXSLOTS+1]
new Float:jetplane_scan_radius;

new jetplane_scan_ammo;
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin(PLUGIN, VERSION, AUTHOR)

	arrayset(scan_loaded,true,SH_MAXSLOTS+1)
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("yandere_jetplane_scan_ammo", "5")
	register_cvar("yandere_jetplane_scan_radius", "5")
	register_forward(FM_CmdStart, "CmdStart");




}
public plugin_cfg(){


	loadCVARS()
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
	jetplane_scan_radius=get_cvar_float("yandere_jetplane_scan_radius");
	jetplane_scan_ammo=get_cvar_num("yandere_jetplane_scan_ammo");
}
public plugin_natives(){

	register_native("get_jet_scans","_get_jet_scans",0);
	register_native("set_jet_scans","_set_jet_scans",0);
	register_native("get_user_jet_scans","_get_user_jet_scans",0);
	register_native("set_user_jet_scans","_set_user_jet_scans",0);
	register_native("reset_jet_scans","_reset_jet_scans",0);
	register_native("reset_user_jet_scans","_reset_user_jet_scans",0);

}
public _get_jet_scans(iPlugins,iParams){
	new jet_id=get_param(1)
	
	new num_scans=floatround(entity_get_float(jet_id,EV_FL_fuser4))
	return num_scans;

}
public _set_jet_scans(iPlugins,iParams){
	new jet_id=get_param(1)
	new the_scans=get_param(2)
	
	entity_set_float(jet_id,EV_FL_fuser4,float(the_scans))
}
public _reset_jet_scans(iPlugins,iParams){
	new jet_id=get_param(1)
	entity_set_float(jet_id,EV_FL_fuser4,float(jetplane_scan_ammo))
}
public _get_user_jet_scans(iPlugins,iParams){
	
	new id=get_param(1)
	return get_jet_scans(jet_get_user_jet(id))

}
public _set_user_jet_scans(iPlugins,iParams){
	
	new id=get_param(1)
	new the_scans=get_param(2)
	return set_jet_scans(jet_get_user_jet(id),the_scans)

}
public _reset_user_jet_scans(iPlugins,iParams){
	
	new id=get_param(1)
	return reset_jet_scans(jet_get_user_jet(id))

}
public CmdStart(id, uc_handle)
{
	if ( !is_user_alive(id)||!yandere_get_has_yandere(id)||!hasRoundStarted()||!client_hittable(id)) return FMRES_IGNORED;
	
	if(sh_get_user_is_asleep(id)) return FMRES_IGNORED
	if(sh_get_user_is_chaffed(id)) return FMRES_IGNORED
	new button = get_uc(uc_handle, UC_Buttons);
	new clip, ammo, weapon = get_user_weapon(id, clip, ammo);
	
	if((weapon==CSW_KNIFE )&& jet_deployed(id)){
		if(button & IN_USE)
		{
			button &= ~IN_USE;
			set_uc(uc_handle, UC_Buttons, button);
			if( !(is_user_alive(id))||!scan_loaded[id]) return FMRES_IGNORED
			if(!get_user_jet_scans(id))
			{
				client_print(id, print_center, "You are out of scans!")
				return FMRES_IGNORED
			}
			scan_loaded[id]=false
			launch_scan(id)
			set_user_jet_scans(id,get_user_jet_scans(id)-1)
			set_task(RADIO_SCAN_PERIOD,"scan_reload",id+RADIO_RELOAD_TASKID,"",0,"a",1)
			
		}
	}
	
	return FMRES_IGNORED;
}

launch_scan(id){


	
	if(!client_hittable(id)||!yandere_get_has_yandere(id)){
	
		return 
	
	}
	
	new Float:fOrigin[3];
	entity_get_vector( id, EV_VEC_origin, fOrigin);
	
	new iOrigin[3];
	for(new i=0;i<3;i++)
		iOrigin[i] = floatround(fOrigin[i]);
	
	make_shockwave(iOrigin,jetplane_scan_radius,LineColorsWithAlpha[PINK])
	
	new entlist[33];
	new numfound = find_sphere_class(id,"player", jetplane_scan_radius ,entlist, 32);
	
	new CsTeams:idTeam = cs_get_user_team(id)
		
	for (new i=0; i < numfound; i++)
	{		
		new pid = entlist[i];
		if(cs_get_user_team(pid)==idTeam){
			continue
		}
		else if(!(client_hittable(pid))){
			
			continue
		}
		track_user(pid,id,0,0,0.5,10.0)
		
	}


}
//----------------------------------------------------------------------------------------------
public scan_reload(id)
{
id-=RADIO_RELOAD_TASKID
scan_loaded[id] = true
}

//----------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_explosion_fx()
	
}
//---------------------------------------------------------------------------------------------- 
