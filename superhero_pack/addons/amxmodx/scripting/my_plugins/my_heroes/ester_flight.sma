
#include "../my_include/superheromod.inc"
#include <fakemeta_util>
#include <engine>
#include "ester_inc/ester_global.inc"
#include "ester_inc/ester_flight.inc"
#include "sh_aux_stuff/sh_aux_inc.inc"


#define PLUGIN "Superhero ester flight funcs"
#define VERSION "1.0.0"
#define AUTHOR "Me"
#define Struct				enum


new Float:ester_flyspeed,
Float:ester_fly_health_spend,
Float:ester_calculation_time_period,
Float:ester_calculation_chance_numerator,
Float:ester_fly_knock_enemies_force,
Float:ester_damage_reflect_coeff,
Float:ester_calculation_chance_denominator
new ester_fly_knock_enemies;

new Float:ester_explosion_damage,
Float:ester_explosion_radius

new ester_explosion_ignore_user

new ester_total_respawn_attempts


new g_ester_is_reborn_mode[SH_MAXSLOTS+1]

new Float:g_ester_blow_up_time_left[SH_MAXSLOTS+1]

new ester_anti_pussy_engaged

new ester_calculation_times
new bool:g_flying[SH_MAXSLOTS+1]
new g_ester_respawned_attempts[SH_MAXSLOTS+1]
new g_is_between_rounds
new g_which_team_is_user[SH_MAXSLOTS+1]
new g_saved_coords[SH_MAXSLOTS+1][3]
new g_last_coords[SH_MAXSLOTS+1][3]


new g_is_glowing[SH_MAXSLOTS+1]
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin(PLUGIN, VERSION, AUTHOR)

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("ester_flyspeed", "1000.0")
	register_cvar("ester_fly_health_spend", "25.0")
	register_cvar("ester_explosion_damage", "300.0")
	register_cvar("ester_explosion_radius", "400.0")
	register_cvar("ester_explosion_ignore_user", "1")
	register_cvar("ester_fly_knock_enemies", "1")
	register_cvar("ester_fly_knock_enemies_force", "100.0")
	register_cvar("ester_calculation_time_period", "25.0")
	register_cvar("ester_calculation_times", "10")
	register_cvar("ester_calculation_chance_numerator", "4.0")
	register_cvar("ester_calculation_chance_denominator", "6.0")
	register_cvar("ester_damage_reflect_coeff", "0.8")
	register_cvar("ester_total_respawn_attempts", "4")
	register_cvar("ester_anti_pussy_engaged", "0")
	
	register_event("DeathMsg","ester_death","a")
	
	register_forward(FM_CmdStart, "OnCmdStart")
	g_msgFade = get_user_msgid("ScreenFade");
	arrayset(g_ester_is_reborn_mode,0,SH_MAXSLOTS+1)
	arrayset(g_ester_respawned_attempts,0,SH_MAXSLOTS+1)
	arrayset(g_is_glowing,0,SH_MAXSLOTS+1)
	arrayset(g_which_team_is_user,0,SH_MAXSLOTS+1)
	arrayset(g_ester_blow_up_time_left,0.0,SH_MAXSLOTS+1)
	arrayset(g_flying,false,SH_MAXSLOTS+1)
	
	register_forward(FM_Touch,"player_to_player_touch")
	RegisterHam(Ham_TakeDamage, "player", "Ester_Knockback", 1)
	RegisterHam(Ham_TakeDamage, "player", "Ester_DamageReflect")
	register_logevent("ester_round_start", 2, "1=Round_Start")
	register_logevent("ester_round_end", 2, "1=Round_End")
	register_logevent("ester_round_end", 2, "1&Restart_Round_")


}
public plugin_cfg(){


	loadCVARS()
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
	ester_flyspeed=get_cvar_float("ester_flyspeed");
	ester_fly_health_spend=get_cvar_float("ester_fly_health_spend");
	ester_calculation_time_period=get_cvar_float("ester_calculation_time_period");
	ester_calculation_chance_numerator=get_cvar_float("ester_calculation_chance_numerator");
	ester_calculation_chance_denominator=get_cvar_float("ester_calculation_chance_denominator");
	ester_explosion_damage=get_cvar_float("ester_explosion_damage")
	ester_explosion_radius=get_cvar_float("ester_explosion_radius")
	ester_explosion_ignore_user=get_cvar_num("ester_explosion_ignore_user")
	ester_calculation_times=get_cvar_num("ester_calculation_times")
	ester_fly_knock_enemies=get_cvar_num("ester_fly_knock_enemies")
	ester_fly_knock_enemies_force=get_cvar_float("ester_fly_knock_enemies_force");
	ester_damage_reflect_coeff=get_cvar_float("ester_damage_reflect_coeff")
	ester_total_respawn_attempts=get_cvar_num("ester_total_respawn_attempts")
	ester_anti_pussy_engaged=get_cvar_num("ester_anti_pussy_engaged")

}
public plugin_natives(){

	register_native("ester_get_reborn_mode","_ester_get_reborn_mode",0);
	register_native("ester_set_reborn_mode","_ester_set_reborn_mode",0);
	register_native("reset_ester_reborn_mode","_reset_ester_reborn_mode",0);
	register_native("ester_get_respawn_attempts_remaining","_ester_get_respawn_attempts_remaining");
	
}
public Ester_DamageReflect(id, idinflictor, attacker, Float:damage, damagebits)
{
	if ( !sh_is_active() || !client_hittable(id)||!client_hittable(attacker)||(id==attacker)) return HAM_IGNORED
	
	if(cs_get_user_team(id)==cs_get_user_team(attacker)){
	
		return HAM_IGNORED;
	
	}
	if(g_flying[id]&&ester_get_has_ester(id)&&ester_get_reborn_mode(id)){
		
			sh_extra_damage( attacker, id,floatround(ester_damage_reflect_coeff*damage), "Charging reflect" )
			directed_spark(id, attacker)
			damage=1.0+damage- (damage*floatclamp(ester_damage_reflect_coeff,0.0,1.0))
			SetHamParamFloat(4, damage);
	
	}
	return HAM_IGNORED
}
public client_kill(id){
	
	if(!sh_is_active()) return PLUGIN_CONTINUE
	
	if(!is_user_connected(id)) return PLUGIN_CONTINUE
	
	if(ester_get_has_ester(id)&&ester_anti_pussy_engaged){
		
		sh_chat_message(id,ester_get_hero_id(),ESTER_SUICIDE_FAIL_MSG)
		emit_sound(id, CHAN_AUTO,ESTER_RESPAWN_FAIL_SOUND , VOL_NORM, ATTN_NORM, 0, PITCH_NORM);
		g_ester_respawned_attempts[id]=ester_total_respawn_attempts
		return PLUGIN_CONTINUE
		
	}
	else if(ester_get_has_ester(id)){
		
		
		
		sh_chat_message(id,ester_get_hero_id(),ESTER_SUICIDE_SCOURN_MSG)
		return PLUGIN_CONTINUE
		
	}
	return PLUGIN_CONTINUE
}
/*dec_user_ester_respawn_attempts(id){
	
	if(is_user_connected(id)&&sh_is_active()&&ester_get_has_ester(id)){
		
		g_ester_respawned_attempts[id]=g_ester_respawned_attempts[id]?g_ester_respawned_attempts[id]-1:0
	
	}
	
}*/
inc_user_ester_respawn_attempts(id){
	
	if(is_user_connected(id)&&sh_is_active()&&ester_get_has_ester(id)){
		
		g_ester_respawned_attempts[id]=g_ester_respawned_attempts[id]<ester_total_respawn_attempts?g_ester_respawned_attempts[id]+1:ester_total_respawn_attempts
	
	}
	
}
public Ester_Knockback(id)
{
	if ( !sh_is_active() || !ester_get_reborn_mode(id)||!client_hittable(id)) return HAM_IGNORED
	
	set_pdata_float(id, fPainShock, 1.0, 5)

	return HAM_IGNORED
}
public _reset_ester_reborn_mode(iPlugin,iParams){
	
	new id=get_param(1)
	new enable=get_param(2)
	if(!ester_get_has_ester(id)||!sh_is_active()) return
	
	ester_set_reborn_mode(id,enable)
	if(!enable){
	
		emit_sound(id,CHAN_AUTO,NULL_SOUND,VOL_NORM,ATTN_NORM,0,PITCH_HIGH)
		for(new i=0;i<ESTER_NUM_BLOWUPSOUNDS;i++){
			emit_sound(id, CHAN_AUTO,ester_blowup_sounds[i] , VOL_NORM, ATTN_NORM, SND_STOP, PITCH_NORM);	
		}
	}
	remove_user_flight_fx(id)
	

	
}
remove_user_flight_fx(id){
	
	if(!ester_get_has_ester(id)||!is_user_connected(id)||!sh_is_active()) return
	
	trailing_beam(0,id,LineColorsWithAlpha[GREEN])
	set_user_rendering(id,_,_,_,_,_,0)
	emit_sound(id, CHAN_BODY,NULL_SOUND, VOL_NORM, ATTN_NORM, 0, PITCH_NORM);
	emit_sound(id, CHAN_BODY,FLIGHT_WEAK, VOL_NORM, ATTN_NORM, SND_STOP, PITCH_NORM);
	emit_sound(id, CHAN_BODY,FLIGHT_POWER, VOL_NORM, ATTN_NORM, SND_STOP, PITCH_NORM);
	g_is_glowing[id]=0;
	g_flying[id]=false;
	
	
}
public _ester_get_reborn_mode(iPlugins,iParams){
	new id=get_param(1)
	
	return g_ester_is_reborn_mode[id];

}

public _ester_get_respawn_attempts_remaining(iPlugins,iParams){
	
	new id=get_param(1)
	
	return g_ester_respawned_attempts[id]
	
	

}
public _ester_set_reborn_mode(iPlugins,iParams){
	new id=get_param(1)
	new value=get_param(2)

	g_ester_is_reborn_mode[id]=value
}
public OnCmdStart(id)
{
	if(!ester_get_has_ester(id)||!is_user_connected(id)) return;
	
	static button,oldbuttons; 
	button = entity_get_int(id, EV_INT_button);
	
	oldbuttons = entity_get_int(id,EV_INT_oldbuttons)
	if(is_user_alive(id)&&ester_get_reborn_mode(id) && ((button & IN_DUCK)&&(button &IN_JUMP)))
	{ 
		if(!((oldbuttons & IN_DUCK)&&(oldbuttons &IN_JUMP))){
			
			
			emit_sound(id, CHAN_WEAPON, FLIGHT_IGNITION, VOL_NORM, ATTN_NORM, 0, PITCH_NORM);
			
		}
		g_flying[id]=true;
		if(random(FlameAndSoundRate) <3)
		{
			static Float:Velocity[3]
			velocity_by_aim(id, floatround(ester_flyspeed), Velocity)
		
			entity_set_vector(id, EV_VEC_velocity, Velocity)
		
			sh_extra_damage(id,id,floatround(ester_fly_health_spend),"Ester bleed flying")
		
		
			
		}
		if(!g_is_glowing[id]){
			g_is_glowing[id]=1
			if(float(get_user_health(id)) > 160.0){
				
				emit_sound(id, CHAN_BODY, FLIGHT_POWER, VOL_NORM, ATTN_NORM, 0, PITCH_NORM);
			
			}
			else{
			
				emit_sound(id, CHAN_BODY, FLIGHT_WEAK, VOL_NORM, ATTN_NORM, 0, PITCH_NORM);
			
			}
			trailing_beam(1,id,LineColorsWithAlpha[GREEN])
			glow(id,LineColorsWithAlpha[GREEN][0],LineColorsWithAlpha[GREEN][1],LineColorsWithAlpha[GREEN][2],LineColorsWithAlpha[GREEN][3],1)
		}
	}
	else{
		g_flying[id]=false;
		if(g_is_glowing[id]){
			g_is_glowing[id]=0;
			remove_user_flight_fx(id)
		}
		
		
	}
	
}

//----------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_explosion_fx()
	engfunc(EngFunc_PrecacheSound,FLIGHT_HUM );
	engfunc(EngFunc_PrecacheSound,FLIGHT_POWER );
	engfunc(EngFunc_PrecacheSound,FLIGHT_IGNITION );
	engfunc(EngFunc_PrecacheSound,FLIGHT_WEAK );
	engfunc(EngFunc_PrecacheSound,ESTER_RESPAWN_FAIL_SOUND );
	for(new i=0;i<ESTER_NUM_BLOWUPSOUNDS;i++){
		engfunc(EngFunc_PrecacheSound,ester_blowup_sounds[i] );	
	}
	
}
//---------------------------------------------------------------------------------------------- 

public ester_death()
{
	if ( !sh_is_active() || g_is_between_rounds ) return

	new id = read_data(2)

	if ( !is_user_connected(id) || !ester_get_has_ester(id) ) return
	g_ester_blow_up_time_left[id]=0.0
	
	ester_remove_statuses(id)
	new user_name[128]
	
	get_user_name(id,user_name,127)
	
	emit_sound(id,CHAN_AUTO,NULL_SOUND,VOL_NORM,ATTN_NORM,0,PITCH_HIGH)
	for(new i=0;i<ESTER_NUM_BLOWUPSOUNDS;i++){
		emit_sound(id, CHAN_AUTO,ester_blowup_sounds[i] , VOL_NORM, ATTN_NORM, SND_STOP, PITCH_NORM);	
	}
	sh_chat_message(id,ester_get_hero_id(),"Ester has died!!!!!!^nThe ester user was called %s^n",user_name)
	
	reset_ester_reborn_mode(id,0)

	g_which_team_is_user[id] = get_user_team(id)

	// Save users origin on death
	get_user_origin(id, g_saved_coords[id])
	g_saved_coords[id][2] += 60

	// Look for self to raise from dead
	if ( !is_user_alive(id) && (g_ester_respawned_attempts[id]<ester_total_respawn_attempts) ) {
		new parm[1]
		parm[0] = id
		// Respawn it faster then Zues, let this power be used before Zues's
		// never set higher then 1.9 or lower then 0.5
		set_task(floatmax(PRE_RESPAWN_MESSAGE_RELAY,ester_calculation_time_period-PRE_RESPAWN_MESSAGE_RELAY), "ester_reborn_loop_task", id+ESTER_REBORN_CALCULATION_LOOP_TASKID, parm, 1,"a",ester_calculation_times)
	}
	else if (!is_user_alive(id)){
		
	
			sh_chat_message(id,ester_get_hero_id(),ESTER_RESPAWN_FAIL_MSG)
			emit_sound(id, CHAN_AUTO,ESTER_RESPAWN_FAIL_SOUND , VOL_NORM, ATTN_NORM, 0, PITCH_NORM);	
			return
	}
}

public ester_reborn_loop_task(parm[]){
	
	new id= parm[0]
	if(is_user_alive(id)&&ester_get_has_ester(id)){
		
		
		sh_chat_message(id,ester_get_hero_id(),"Removing respawning dice rool loop. already alive")
		remove_task(id+ESTER_REBORN_CALCULATION_LOOP_TASKID)
		return
		
	}
	else if(ester_get_has_ester(id)){
		
		sh_chat_message(id,ester_get_hero_id(),"Keeping you on the team...")
		cs_set_user_team(id,g_which_team_is_user[id],CS_DONTCHANGE)
	}
	
	new Float:chance=random_float(0.0,1.0)
	if(chance<(ester_calculation_chance_numerator/ester_calculation_chance_denominator)){
	
		ester_respawn(parm)
		
	}
	else{
		sh_chat_message(id,ester_get_hero_id(),"Not this time...")
		
		
	}
	
	
	
}
//----------------------------------------------------------------------------------------------
public ester_respawn(parm[])
{
	new id = parm[0]
	if ( !is_user_connected(id) || is_user_alive(id) ) return
	if ( !ester_get_has_ester(id)) return
	if ( (g_ester_respawned_attempts[id]>=ester_total_respawn_attempts)|| g_is_between_rounds ) return
	if ( g_which_team_is_user[id]!= get_user_team(id) ) return //prevents respawning spectators

	emit_sound(id, CHAN_STATIC, "ambience/port_suckin1.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)

	sh_chat_message(id,ester_get_hero_id(), "%s",ester_sentences[random_num(0,ESTER_NUM_SENTENCES-1)])
	new user_name[128]
	get_user_name(id,user_name,127)
	sh_chat_message(0,ester_get_hero_id(), "%s! They've been reborn!",user_name)
	sh_chat_message(id,ester_get_hero_id(), "%d attempts to change left",ester_total_respawn_attempts-g_ester_respawned_attempts[id])

	// Double spawn prevents the no HUD glitch
	
	revival(id)
	revival(id)
	reset_ester_reborn_mode(id,1)
	emit_sound(id, CHAN_AUTO,ester_blowup_sounds[random_num(0,ESTER_NUM_BLOWUPSOUNDS-1)] , VOL_NORM, ATTN_NORM, 0, PITCH_NORM);

	inc_user_ester_respawn_attempts(id)
	g_ester_blow_up_time_left[id]=ESTER_REBORN_EXPLOSION_DELAY_TIME

	set_task(1.0, "ester_teamcheck", id+ESTER_REBORN_TEAM_CHECK_TASKID, parm, 1)

	
	ester_teleport(id)
}
public godmode_render_update(id){
	
	id-=ESTER_REBORN_GLOW_TASKID
	
	if(client_hittable(id)&&ester_get_has_ester(id)){
		client_print(id,print_center,"Blowing up in %0.2f...",g_ester_blow_up_time_left[id])
		g_ester_blow_up_time_left[id]=g_ester_blow_up_time_left[id]-FLIGHT_GODMODE_THINK_TIME
		glow(id,255,255,255,255,1)
	}
	
	
}
public ester_unglow(id){
	
	if(is_user_connected(id)&&ester_get_has_ester(id)){
	
		glow(id,255,255,255,255,0)
	}
	
	
}
//----------------------------------------------------------------------------------------------
public ester_teamcheck(parm[])
{
	new id = parm[0]

	if ( g_which_team_is_user[id] != get_user_team(id) ) {
		sh_chat_message(id, ester_get_hero_id(), ESTER_REBORN_TEAM_CHANGE_MSG)
		user_kill(id,1)
		emit_sound(id, CHAN_AUTO,ESTER_RESPAWN_FAIL_SOUND , VOL_NORM, ATTN_NORM, 0, PITCH_NORM);
		ester_remove_statuses(id)
	}
}
//----------------------------------------------------------------------------------------------
public ester_round_start()
{
	g_is_between_rounds = 0
	// Reset the cooldown on round end, to start fresh for a new round
	for (new id = 1; id <= SH_MAXSLOTS; id++) {
		if(is_user_connected(id)&&ester_get_has_ester(id)){
			reset_ester_reborn_mode(id,0)
		}
	}
}
//----------------------------------------------------------------------------------------------
public ester_round_end()
{
	if ( !sh_is_active() ) return

	g_is_between_rounds = 1
	arrayset(g_ester_respawned_attempts,0,SH_MAXSLOTS+1)
	arrayset(g_ester_blow_up_time_left,0.0,SH_MAXSLOTS+1)
	arrayset(g_flying,false,SH_MAXSLOTS+1)
	// Reset the cooldown on round end, to start fresh for a new round
	for (new id = 1; id <= SH_MAXSLOTS; id++) {
		remove_task(id+ESTER_REBORN_EXPLOSION_DELAY_TASKID)
		remove_task(id+ESTER_REBORN_GLOW_TASKID)
		if ( ester_get_has_ester(id)&&is_user_connected(id)) {
			
			if(get_user_godmode(id)){
				sh_set_godmode(id,0.0)
				ester_unglow(id)
			}
			emit_sound(id,CHAN_BODY,NULL_SOUND,VOL_NORM,ATTN_NORM,0,PITCH_HIGH)
			reset_ester_reborn_mode(id,0)
		}
	}
}
//----------------------------------------------------------------------------------------------
public ester_teleport(id)
{
	// Teleport the player
	set_user_origin(id, g_saved_coords[id])

	positionChangeTimer(id)
	
	sh_set_godmode(id,ESTER_REBORN_EXPLOSION_DELAY_TIME)
	
	set_task(FLIGHT_GODMODE_THINK_TIME,"godmode_render_update",id+ESTER_REBORN_GLOW_TASKID,"",0,"b")
	for(new i=0;i<3;i++){
		set_task(ESTER_REBORN_EXPLOSION_DELAY_TIME+(float(i)*FLIGHT_GODMODE_THINK_TIME),"BlowUp",id+ESTER_REBORN_EXPLOSION_DELAY_TASKID)
	}
}
//----------------------------------------------------------------------------------------------
public positionChangeTimer(id)
{
	if ( !is_user_alive(id) ) return

	get_user_origin(id, g_last_coords[id])
	new Float:velocity[3]
	Entvars_Get_Vector(id, EV_VEC_velocity, velocity)

	if ( velocity[0]==0.0 && velocity[1]==0.0 ) {
		// Force a Move (small jump)
		velocity[0] += 20.0
		velocity[2] += 100.0
		Entvars_Set_Vector(id, EV_VEC_velocity, velocity)
	}

	set_task(0.4, "positionChangeCheck", id+ESTER_REBORN_POSITION_CHECK_TASKID)
}
ester_remove_statuses(id){
	
	if(is_user_connected(id)&&ester_get_has_ester(id)){
		remove_task(id+ESTER_REBORN_EXPLOSION_DELAY_TASKID)
		remove_task(id+ESTER_REBORN_GLOW_TASKID)
		sh_set_godmode(id,0.0)
		ester_unglow(id)
	}
	
}
//----------------------------------------------------------------------------------------------
public positionChangeCheck(id)
{
	id -= ESTER_REBORN_POSITION_CHECK_TASKID

	if ( !is_user_alive(id) ) return

	new origin[3]
	get_user_origin(id, origin)

	// Kill this player if Stuck in Wall!
	if ( g_last_coords[id][0] == origin[0] && g_last_coords[id][1] == origin[1] && g_last_coords[id][2] == origin[2] && is_user_alive(id) ) {
		user_kill(id,1)
		sh_chat_message(id, ester_get_hero_id(), ESTER_WALL_STUCK_MSG)
		ester_remove_statuses(id)
		g_ester_respawned_attempts[id]=ester_total_respawn_attempts
		reset_ester_reborn_mode(id,0)
	}
}
//----------------------------------------------------------------------------------------------
public BlowUp(id)
{
	id-=ESTER_REBORN_EXPLOSION_DELAY_TASKID
	ester_unglow(id)
	sh_set_godmode(id,0.0)
	remove_task(id+ESTER_REBORN_GLOW_TASKID)
	explosion_player(ester_get_hero_id(),id,ester_explosion_radius,ester_explosion_damage,ester_explosion_ignore_user)
	
		
	
}
public revival(id)
{
	ExecuteHamB(Ham_Spawn, id) 
	if(client_hittable(id)){
		remove_task(id+ESTER_REBORN_CALCULATION_LOOP_TASKID)
		engclient_cmd(id, "weapon_knife")
		setScreenFlash(id, 0, 0, 0, 0, 255 )  //Black flash indicating revival
	}
}
//----------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------
public player_to_player_touch(pTouched, pToucher)  //This is triggered when two entites touch
{
	
new tger_name[128], vic_name[128]
new killer = pToucher
new victim = pTouched
if(!client_hittable(killer)){
	
	return FMRES_IGNORED
}
get_user_name(pToucher,tger_name,127)

if(!client_hittable(victim)){
	
	return FMRES_IGNORED
}

get_user_name(pTouched,vic_name,127)

new ffOn = get_cvar_num("mp_friendlyfire")
if ( (get_user_team(victim) != get_user_team(killer)) || ffOn )
{
	//console_print(0,"yay! client %d called %s just hit enemy %d named %s!!!",killer,tger_name,victim,vic_name)
	/*console_print(0,"Lets go over some briefing, okay?^nOkay so, is the killer flying? %s^nAlright: Does the killer have ester equipped? %s^nAnyways, is the killer in reborn mode? %s^nSo, Lastly...^nIs ester fly knocking enabled on the server? %s^n",
								g_flying[killer]?"Yes!":"No...",
								ester_get_has_ester(killer)?"Yes!":"No...",
								ester_get_reborn_mode(killer)?"Yes!":"No...",
								ester_fly_knock_enemies?"Yes!":"No...")*/
	if(g_flying[killer]&&ester_get_has_ester(killer)&&ester_get_reborn_mode(killer)&&ester_fly_knock_enemies){
	
		sh_chat_message(ester_get_hero_id(),killer,"You, named %s, knocked %s!!!!!^n (i hope)",tger_name,vic_name)
		
		damage_player(ester_get_hero_id(),killer,killer,victim,200.0,ester_fly_knock_enemies_force,0)
		sh_extra_damage(killer,killer,floatround(ester_fly_knock_enemies_force),"Ester fly ramming knockback")
	}
}
return FMRES_IGNORED
}
