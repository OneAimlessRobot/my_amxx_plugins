

#include "../my_include/superheromod.inc"
#include "ester_inc/ester_global.inc"
#include "ester_inc/ester_flight.inc"
#include "sh_aux_stuff/sh_aux_inc.inc"
#include "sh_aux_stuff/sh_aux_inc_pt2.inc"
#include "special_fx_inc/sh_gatling_special_fx.inc"
#include "special_fx_inc/sh_yakui_get_set.inc"

#define ESTER_HUD_TASKID 23443
#define ESTER_REVENGE_TASKID 11122
#define ESTER_MORPH_TASKID 2182722

// GLOBAL VARIABLES
new gHeroID
new const gHeroName[] = "Ester"
new bool:gHasEster[SH_MAXSLOTS+1]
new bool:gPedalIsFloored[SH_MAXSLOTS+1]
new bool:gUnloading[SH_MAXSLOTS+1]
new bool:gFinished[SH_MAXSLOTS+1]
new gGunLastDeployed[SH_MAXSLOTS+1]
new damage_to_do[SH_MAXSLOTS+1]
new gEsterDmg[SH_MAXSLOTS+1]
new gTimesLeft[SH_MAXSLOTS+1]
new gBuiltUpXp[SH_MAXSLOTS+1]

new gmorphed[SH_MAXSLOTS+1]
new teamglow_on

new bool:g_ester_enemies[SH_MAXSLOTS+1][SH_MAXSLOTS+1]
new hud_sync
new hud_sync_enemies
new times_per_map,Float:stun_time_at_it,Float:stun_speed_at_it,Float:period,power_cost
new base_dmg_per_it,dmg_inc_per_inc,num_lvls_for_inc,max_dmg
new Float:pan_dmg,Float:tmp_dmg_mult
new gHeroLevel
new max_moralizing_xp;
new moralizing_tmp_xp_give;
new moralizing_pan_xp_give;
new moralizing_headshot_xp_mult;
new min_damage_to_do;

new moralizing_tmp_xp_get_mult; 
new moralizing_pan_xp_get_mult;

//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Ester", "1.0", "TastyMedula")
	
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("ester_level", "8")
	register_cvar("ester_stuntime", "10")
	register_cvar("ester_stunspeed", "100")
	register_cvar("ester_damage", "3")
	register_cvar("ester_period", "0.1")
	register_cvar("ester_max_dmg", "20")
	register_cvar("ester_teamglow_on", "1")
	register_cvar("ester_dmg_inc_per_inc", "5")
	register_cvar("ester_lvls_for_inc", "5")
	register_cvar("ester_uses_per_map","1")
	register_cvar("ester_power_cost", "3")
	register_cvar("ester_pan_dmg", "1.5")
	register_cvar("ester_tmp_dmg_mult", "1.5")
	register_cvar("ester_min_damage_to_do", "1.5")
	register_cvar("ester_max_moralizing_xp","9000") 
	register_cvar("ester_moralizing_tmp_xp_give","4.0")
	register_cvar("ester_moralizing_pan_xp_give","16.0")
	register_cvar("ester_moralizing_headshot_xp_mult","4");
	register_cvar("ester_moralizing_tmp_xp_get_mult","5.0"); 
	register_cvar("ester_moralizing_pan_xp_get_mult","25.0");

	hud_sync = CreateHudSyncObj()
	hud_sync_enemies = CreateHudSyncObj()
	gHeroID=shCreateHero(gHeroName, "NEUROBLAST! REBORN!", "Kill everyone who wronged you! Also you have a pan", true, "ester_level" )
	
	register_event("Damage", "ester_damage", "b", "2!0")
	RegisterHam(Ham_TraceAttack, "player", "fw_TraceAttack_Player",_,true)
	register_event("CurWeapon", "weaponChange", "be", "1=1")
	register_event("DeathMsg","death","a")
	
	g_msgFade = get_user_msgid("ScreenFade");
	register_srvcmd("ester_init", "ester_init")
	shRegHeroInit(gHeroName, "ester_init")
	register_srvcmd("ester_kd", "ester_kd")
	shRegKeyDown(gHeroName, "ester_kd")
	register_srvcmd("ester_ku", "ester_ku")
	shRegKeyUp(gHeroName, "ester_ku")
	register_forward(FM_PlayerPreThink, "ester_prethink")
	RegisterHam(Ham_BloodColor,"player","Hook_BloodColor")

}
public Hook_BloodColor(id)
{
	if ( sh_is_active()){
		if(client_hittable(id)){
			if(ester_get_has_ester(id)){
				SetHamReturnInteger(BLOOD_COLOR_YELLOW)
				return HAM_SUPERCEDE;
			}
		}
	}
	return HAM_IGNORED
}

//----------------------------------------------------------------------------------------------
public ester_prethink(id)
{
	if ( sh_is_active()){
		if(client_hittable(id)){
			if(ester_get_has_ester(id)){
				if(get_user_weapon(id)==CSW_TMP) {
					set_pev(id, pev_flTimeStepSound, 999)
				}
			}
		}
	}
}
public plugin_natives(){
	
	register_native("ester_get_has_ester","_ester_get_has_ester",0)
	register_native("ester_get_hero_id","_ester_get_hero_id",0)
	
	
	
}
public _ester_get_hero_id(iPlugins, iParms){
	
	return gHeroID
}
public _ester_get_has_ester(iPlugins, iParms){
	
	new id= get_param(1)
	
	return gHasEster[id]
}
public ester_init()
{
	
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	gHasEster[id]=(hasPowers!=0)
	if(gHasEster[id]){
		
		ester_model(id)
		if(gTimesLeft[id]<=0){
			reset_status(id)
			sh_chat_message(id,gHeroID,"Youve already used up Ester this map. Have fun with the pan and tmp, tho!!!")
			return
		}
		reset_ester_user_round(id)
		ester_weapons(id)
		set_task( 0.25, "ester_loop", id+ESTER_HUD_TASKID, "", 0, "b")
	}
	else{
		reset_ester_reborn_mode(id,0)
		ester_weapons(id)
		reset_ester_user_round(id)
		ester_unmorph(id+ESTER_MORPH_TASKID)
		remove_task(id+ESTER_HUD_TASKID)
		
	}
	
	
}
stock stop_sounds(id){
	
	if(is_user_connected(id)){
		emit_sound(id, CHAN_WEAPON,NULL_SOUND, VOL_NORM, ATTN_NORM, 0, PITCH_NORM);
		emit_sound(id, CHAN_ITEM, NEUROBLAST_CHARGE, 1.0, 0.0,SND_STOP,PITCH_NORM)
		emit_sound(id, CHAN_ITEM, NEUROBLAST_RELEASE, 1.0, 0.0,SND_STOP,PITCH_NORM)
	}
}
stock ester_weapons(id){
	if(!sh_is_active()||!client_hittable(id)){
		
		return
		
	}
	else if(ester_get_has_ester(id)){
		shGiveWeaponID(id, CSW_TMP)
	}
	else{
		
		engclient_cmd(id, "drop", "weapon_tmp");
		
	}
	
}

//----------------------------------------------------------------------------------------------
public ester_model(id)
{
	set_task(1.0, "ester_morph", id+ESTER_MORPH_TASKID)
	if( teamglow_on){
		set_task(1.0, "ester_glow", id+ESTER_MORPH_TASKID, "", 0, "b" )
	}
	
}
//----------------------------------------------------------------------------------------------
public ester_morph(id)
{
	id-=ESTER_MORPH_TASKID
	if ( gmorphed[id] || !is_user_alive(id)||!gHasEster[id] ) return
	
	set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, 7)
	show_hudmessage(id, "Ready to adult & Pwn 50m3 n3wbz")
	cs_set_user_model(id, "ester")
	
	gmorphed[id] = true
	
}
//----------------------------------------------------------------------------------------------
public ester_unmorph(id)
{
	id-=ESTER_MORPH_TASKID
	if(!is_user_connected(id)) return
	if ( gmorphed[id] ) {
		
		cs_reset_user_model(id)
		
		gmorphed[id] = false
		
		if ( teamglow_on ) {
			remove_task(id+ESTER_MORPH_TASKID)
			set_user_rendering(id)
		}
		set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, 7)
		show_hudmessage(id, "Fuck my li- *Sigh...* Spectating again")
	}
}
//----------------------------------------------------------------------------------------------
public ester_glow(id)
{
	id -= ESTER_MORPH_TASKID
	
	if ( !is_user_connected(id) ) {
		//Don't want any left over residuals
		remove_task(id+ESTER_MORPH_TASKID)
		return
	}
	
	if ( gHasEster[id] && is_user_alive(id)) {
		if ( get_user_team(id) == 1 ) {
			shGlow(id, 255, 0, 0)
		}
		else {
			shGlow(id, 0, 0, 255)
		}
	}
}

reset_status(id){
	
	
	remove_task(id+ESTER_REVENGE_TASKID)
	if(is_user_connected(id)){
		set_user_rendering(id,_,_,_,_,_,0)	
	}
	gFinished[id]=false
	damage_to_do[id]=0
	gBuiltUpXp[id]=0
	gPedalIsFloored[id]=false
	gUnloading[id]=false
	stop_sounds(id)
	
}

stock count_enemies(id){
	
	new count=0;
	if((gTimesLeft[id]>0)||!gFinished[id]){
		new players[SH_MAXSLOTS]
		new player_count
		get_players(players,player_count)
		for(new i=0;i<player_count;i++){
			if(client_hittable(players[i])){
				count+=((g_ester_enemies[id][players[i]])&&(players[i]!=id)&&(players[i]))?1:0;
			}
		}
		
		
		
	}
	return count;
	
	
	
	
}

public weaponChange(id)
{
	if ( !client_hittable(id)||!sh_is_active()){
		
		return PLUGIN_CONTINUE
	}
	if(!ester_get_has_ester(id)){
		
		return PLUGIN_CONTINUE
	}
	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	if (wpnid == CSW_TMP) {
		if(gGunLastDeployed[id]!=wpnid){
			if(sh_get_user_effect(id)!=METYLPHENIDATE){
				new fx_num=sh_effect_user_direct(id,id,METYLPHENIDATE,ester_get_hero_id());
				gatling_set_fx_num(id,fx_num);
			}
		}
	}
	else{
		if(sh_get_user_effect(id)==METYLPHENIDATE){
			sh_uneffect_user(id,METYLPHENIDATE,ester_get_hero_id());
			
		}
		if (wpnid == CSW_KNIFE) {
			entity_set_string(id, EV_SZ_viewmodel, PAN_V_MODEL)
			entity_set_string(id, EV_SZ_weaponmodel, PAN_P_MODEL)
		}
	}
	if(gGunLastDeployed[id]!=wpnid){
		gGunLastDeployed[id]=wpnid;
		
	}
	return PLUGIN_CONTINUE
	
}
public reset_ester_user_round(id){
	reset_status(id)
	update_max_dmg(id)
	
	
	
}
public status_hud(id){
	
	new hud_msg[200];
	format(hud_msg,199,"[SH] %s:^nDischarge times left: %d^nDamage to do to %d enemies: %d^nAmmount of moralizing xp built up: %d^nNumber of attempts to matter used: %d^nAre you in respawn mode? %s^n",
		gHeroName,
		gTimesLeft[id],
		count_enemies(id),
		damage_to_do[id],
		gBuiltUpXp[id],
		ester_get_respawn_attempts_remaining(id),
		ester_get_reborn_mode(id)?"Yes!":"No."
	);
	
	
	set_hudmessage(255, 255, 255,1.0, 0.3, 0, 0.0, 2.0,0.0,0.0,1)
	ShowSyncHudMsg(id, hud_sync, "%s", hud_msg)
	
	
}
public show_targets(id){
	
	new hud_msg[500];
	new client_name[128];
	get_user_name(id,client_name,127)
	format(hud_msg,500,"[SH] %s:^nTHE FOLLOWING PLAYERS WILL BE TARGETED BY AN INCOMMING NEUROBLAST FROM %s!!!!^n^n",gHeroName,client_name)
	for(new i=1;i<=SH_MAXSLOTS;i++){
		if(g_ester_enemies[id][i]&&client_hittable(i)){
			get_user_name(i,client_name,127)
			format(hud_msg,500,"%s%s.^n",hud_msg,client_name);
		}
	} 
	set_hudmessage(255,50, 255, -1.0, -1.0,      0,       0.0,       4.0,       0.0,     0.0,      1)
	ShowSyncHudMsg(0, hud_sync_enemies, "%s", hud_msg)
	
}
public update_max_dmg(id){
	gEsterDmg[id]=(gTimesLeft[id]>0)?min(max_dmg,base_dmg_per_it+(dmg_inc_per_inc*((sh_get_user_lvl(id)-gHeroLevel)/num_lvls_for_inc))):0
	
}
//----------------------------------------------------------------------------------------------
public plugin_cfg()
{
	loadCVARS();
	arrayset(gTimesLeft,times_per_map,SH_MAXSLOTS+1)
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
	gHeroLevel=get_cvar_num("ester_level");
	stun_time_at_it=get_cvar_float("ester_stuntime")
	stun_speed_at_it=get_cvar_float("ester_stunspeed")
	period=get_cvar_float("ester_period")
	power_cost=get_cvar_num("ester_power_cost")
	times_per_map=get_cvar_num("ester_uses_per_map")
	base_dmg_per_it=get_cvar_num("ester_damage")
	min_damage_to_do=get_cvar_num("ester_min_damage_to_do")
	max_dmg=get_cvar_num("ester_max_dmg")
	dmg_inc_per_inc=get_cvar_num("ester_dmg_inc_per_inc")
	num_lvls_for_inc=get_cvar_num("ester_lvls_for_inc")
	pan_dmg=get_cvar_float("ester_pan_dmg")
	tmp_dmg_mult=get_cvar_float("ester_tmp_dmg_mult")
	teamglow_on=get_cvar_num("ester_teamglow_on")
	max_moralizing_xp=get_cvar_num("ester_max_moralizing_xp");
	moralizing_tmp_xp_give=get_cvar_num("ester_moralizing_tmp_xp_give")
	moralizing_pan_xp_give=get_cvar_num("ester_moralizing_pan_xp_give")
	moralizing_headshot_xp_mult=get_cvar_num("ester_moralizing_headshot_xp_mult");
	moralizing_tmp_xp_get_mult=get_cvar_num("ester_moralizing_tmp_xp_get_mult"); 
	moralizing_pan_xp_get_mult=get_cvar_num("ester_moralizing_pan_xp_get_mult");

}//----------------------------------------------------------------------------------------------
public ester_loop(id)
{
	id -= ESTER_HUD_TASKID
	
	if ( !is_user_connected(id)||!is_user_alive(id)||!gHasEster[id]||!id){
		
		return PLUGIN_HANDLED
		
	}
	status_hud(id)
	if(gPedalIsFloored[id]){
		
		sh_set_rendering(id, 8, 255, 8, 255,kRenderFxGlowShell, kRenderTransAlpha)
		
		
	}
	else {
		if(gUnloading[id]){
			
			sh_set_rendering(id, 255, 255, 255, 255,kRenderFxGlowShell, kRenderTransAlpha)
			
			
		}
		else  if(gFinished[id]) {
			
			sh_chat_message(id,gHeroID,"Revenge taken. You shall now die");
			sh_extra_damage(id,id,1,"Neuroblast",false,SH_DMG_KILL)
			arrayset(g_ester_enemies[id],false,SH_MAXSLOTS+1)
			
			
		}
	}
	return PLUGIN_HANDLED
}
public Ester_revenge_loop(id)
{
	id-=ESTER_REVENGE_TASKID
	if ( !sh_is_active() || !is_user_alive(id) ||!(gPedalIsFloored[id]||gUnloading[id])||gFinished[id]) return
	static CsArmorType:armorType
	static userArmor,user_health
	user_health=get_user_health(id)
	userArmor = cs_get_user_armor(id, armorType)
	if ( userArmor == 0 ) armorType = CS_ARMOR_VESTHELM
	
	if(gPedalIsFloored[id]){
		
		if (power_cost > 0 )
		{
			if(count_enemies(id)){
				if ( (userArmor < power_cost)) {
					if ( user_health< power_cost ) {
						sh_chat_message(id,gHeroID,"You ran out of both vitality and stamina. Now you will die.");
						sh_extra_damage(id,id,1,"Neuroblast",false,SH_DMG_KILL)
						return;
					}
					
					sh_extra_damage(id,id,power_cost,"Neuroblast",false,SH_DMG_NORM)
					user_health=get_user_health(id)
				}
				else{
					
					cs_set_user_armor(id, userArmor - power_cost, armorType)
					if( cs_get_user_armor(id, armorType)<power_cost){
						sh_chat_message(id,gHeroID,"You ran out stamina. Now you will now lose health.");
						
					}
				}
			}
			else{
			
				sh_chat_message(id,gHeroID,"No enemies detected as you charged! Aborting!");
				sh_sound_deny(id)
				reset_status(id)
				remove_task(id+ESTER_REVENGE_TASKID)
				return
			
			}
		}
		
		aura(id,{100,100,255,255});
		damage_to_do[id]+=gEsterDmg[id]
	}
	else if(gUnloading[id]){
		if(count_enemies(id)){
			for ( new x=1; x<=SH_MAXSLOTS; x++) 
			{
				if ( is_user_alive(x) && (get_user_team(id)!=get_user_team(x)) && x!=id &&(g_ester_enemies[id][x]))
				{
					
					Ester_instant(x, id)
					sh_set_stun(x,stun_time_at_it, stun_speed_at_it)
				}
			}
			damage_to_do[id]-=min(power_cost,damage_to_do[id])
			if(!damage_to_do[id]){
				
				gUnloading[id]=false;
				gFinished[id]=true;
				sh_chat_message(id,gHeroID,"There.... hah.... hah.... hah...");
				
			}
		}
		else{
			sh_chat_message(id,gHeroID,"No enemies detected as you unloaded. Youre done here.");
			explosion_player(gHeroID,id,float(damage_to_do[id]),float(damage_to_do[id]),1)
			reset_status(id)
			gFinished[id]=true;
			return
			
		}
	}
}

public Ester_instant(x, id)
{
	emit_sound(x, CHAN_ITEM, "weapons/xbow_hitbod2.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
	shExtraDamage( x, id,gEsterDmg[id], "Neuroblast" )
	directed_spark(id,x,30,5,200,40,PURPLE)
}
//----------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{
	if ( ester_get_has_ester(id)&&is_user_connected(id)&& sh_is_active() ) {
		if(gBuiltUpXp[id]){
			sh_set_user_xp(id,gBuiltUpXp[id],true);
			sh_chat_message(id,ester_get_hero_id(),ESTER_FINE_WHATEVER_YOU_SAY,gBuiltUpXp[id]);
			
		}
		
		set_task( 0.25, "ester_loop", id+ESTER_HUD_TASKID, "", 0, "b")
		ester_weapons(id)
		trailing_beam(0,id,LineColorsWithAlpha[GREEN])
		set_user_rendering(id,_,_,_,_,_,0)
		reset_ester_user_round(id)
		ester_model(id)
		
	}
	
}
public ester_damage(id)
{
	if ( !sh_is_active() || !client_hittable(id)) return
	
	new damage= read_data(2)
	new hitpoint, weapon
	new attacker = get_user_attacker(id,weapon,hitpoint)
	if ( !client_hittable(attacker)) return
	new origin[3]
	get_user_origin(id,origin)
	new origin2[3]
	get_user_origin(attacker,origin2)
	
	
	new CsTeams:att_team=CS_TEAM_UNASSIGNED;
	att_team=cs_get_user_team(attacker)
	
	
	
	if(cs_get_user_team(id)==att_team){
		
		return;
		
	}
	if(gHasEster[id]){
		if(!gUnloading[id]&&gTimesLeft[id]){
			
			g_ester_enemies[id][attacker]=true;
			if(gPedalIsFloored[id]){
				
				shExtraDamage( attacker, id,floatround(floatmul(floatdiv(float(damage),float(damage_to_do[id])),float(gEsterDmg[id])),floatround_ceil), "Charging reflect" )
				emit_sound(id, CHAN_WEAPON, COUNTER_UP_SFX, 1.0, 0.0, 0, PITCH_NORM)
				directed_spark(attacker, id)
			}
		}
		fx_blood(origin,origin2,hitpoint,true);
	}
}

public fw_TraceAttack_Player(id, attacker, Float:damage, Float:Direction[3], Ptr, DamageBits)
{
	
	if(!client_hittable(attacker)||!client_hittable(id)){
		return HAM_IGNORED	
	}
	new hitgroup=get_tr2(Ptr,TR_iHitgroup)
	new headshot=(hitgroup==1)
	new weapon=get_user_weapon(attacker)
	new mult=(headshot?moralizing_headshot_xp_mult:1);
	new CsTeams:att_team=CS_TEAM_UNASSIGNED,CsTeams:vic_team=CS_TEAM_UNASSIGNED;
	att_team=cs_get_user_team(attacker)
	vic_team=cs_get_user_team(id)
	if(!ester_get_has_ester(attacker)){
		return HAM_IGNORED
	}
	
	if(gHasEster[attacker]){
		new attacker_name[128]
		new client_name[128]
		get_user_name(attacker,attacker_name,127)
		get_user_name(id,client_name,127)
		new is_teamate=(vic_team==att_team)
		if((weapon==CSW_KNIFE)||(weapon==CSW_TMP)){
		switch(is_teamate){
			case 0:{
					if(sh_get_user_effect(id)!=GLOW){
							new fx_num=sh_effect_user_direct(id,attacker,GLOW,ester_get_hero_id());
							gatling_set_fx_num(id,fx_num);
							sh_chat_message(attacker,gHeroID,(weapon==CSW_TMP?"%s: AYO CHILL, %s!":"%s: OW! What was that for, Ester? (%s)?"),client_name,attacker_name)
							sh_chat_message(id,gHeroID,(weapon==CSW_TMP?"%s: HEY! LOCK! IN, %s!":"%s: Shut up, %s."),attacker_name,client_name)
							sh_set_stun(id,GLOW_TIME,150.0);
						
					}
					new Float:extraDamage = (weapon==CSW_TMP?(floatmul(damage,tmp_dmg_mult)+1.0):floatadd(damage,pan_dmg))
					if (extraDamage>0){
						sh_extra_damage(id, attacker, floatround(extraDamage), (weapon==CSW_TMP?"The moralizing ray (C)":"Adutling Pan (TM)"), headshot)
						new extra_moralizing_xp=max(0,min((weapon==CSW_TMP?moralizing_tmp_xp_get_mult:moralizing_pan_xp_get_mult)*mult*floatround(extraDamage+damage),max_moralizing_xp-gBuiltUpXp[attacker]))
						if(extra_moralizing_xp){
							
							client_print(attacker,print_center,ESTER_JUST_SHUT_UP_STRING,gHeroName,extra_moralizing_xp)
							sh_chat_message(attacker,gHeroID,"wow, %s that was such a nice... %s from your.... ^"Moralizing^"...",gHeroName,headshot?"headshot":"(wow... not even headshot)")
						}
						gBuiltUpXp[attacker]+=extra_moralizing_xp
					}
			}
			case 1:{
					if(gBuiltUpXp[attacker]>(weapon==CSW_TMP?moralizing_tmp_xp_give:moralizing_pan_xp_give)){
						if(sh_get_user_effect(id)!=METYLPHENIDATE){
							new fx_num=sh_effect_user_direct(id,attacker,METYLPHENIDATE,ester_get_hero_id());
							gatling_set_fx_num(id,fx_num);
							sh_chat_message(attacker,gHeroID,(weapon==CSW_TMP?"%s: AYO CHILL, %s!":"%s: OW! What was that for, Ester? (%s)?"),client_name,attacker_name)
							sh_chat_message(id,gHeroID,(weapon==CSW_TMP?"%s: HEY! LOCK! IN, %s!":"%s: Shut up, %s."),attacker_name,client_name)
							new unextra_moralizing_xp=min(mult*(weapon==CSW_TMP?moralizing_tmp_xp_give:moralizing_pan_xp_give),gBuiltUpXp[attacker])
							if(unextra_moralizing_xp){
								
								sh_chat_message(attacker,ester_get_hero_id(),ESTER_SAVED_THE_DAY_STRING,client_name,unextra_moralizing_xp)
								sh_set_user_xp(id,unextra_moralizing_xp,true);
							}
							gBuiltUpXp[attacker]-=unextra_moralizing_xp
						}
					}
					
			}
			default:{
			}
		}
		
		
	}
	}
	return HAM_IGNORED
}

public plugin_precache()
{
	
	precache_model("models/player/ester/ester.mdl")
	precache_model("models/player/ester/esterT.mdl")
	for(new i=0;i<ESTER_NUM_WEAPON_HIT_SOUNDS;i++){
		
		engfunc(EngFunc_PrecacheSound, ester_weapon_hit_sounds[i])
		
	}
	for(new i=0;i<ESTER_NUM_DEATH_SOUNDS;i++){
		
		engfunc(EngFunc_PrecacheSound, ester_death_sounds[i])
		
	}
	engfunc(EngFunc_PrecacheSound,NULL_SOUND_FILENAME)
	engfunc(EngFunc_PrecacheSound,NEUROBLAST_CHARGE)
	engfunc(EngFunc_PrecacheSound,NEUROBLAST_RELEASE)
	precache_model(PAN_V_MODEL)
	precache_model(PAN_P_MODEL)
	precache_explosion_fx()
	
}

public death()
{
	new id=read_data(2)
	remove_task(id+ESTER_HUD_TASKID)
	if ( !is_user_connected(id)){
		return
	}
	if(ester_get_has_ester(id)){
		
		reset_ester_reborn_mode(id,0)
		ester_unmorph(id+ESTER_MORPH_TASKID)
		reset_status(id)
		emit_sound(id, CHAN_VOICE, ester_death_sounds[random_num(0,(sizeof ester_death_sounds) -1)], 1.0, 0.0,0,random_num(95,120))
		
		gTimesLeft[id]-=(gTimesLeft[id]&&gPedalIsFloored[id])?1:0
		
		if(damage_to_do[id]){
			arrayset(g_ester_enemies[id],false,SH_MAXSLOTS+1)
		}
	}
	new dead_client_name[128]
	get_user_name(id,dead_client_name,127)
	for(new i=1;i<=SH_MAXSLOTS;i++){
		if(!client_hittable(i)){
		
			continue
		}
		if(!ester_get_has_ester(i)){
		
			continue
		} 
		if(!g_ester_enemies[i][id]){
			continue
		}
		new ester_wielder_name[128]
		get_user_name(i,ester_wielder_name,127)
		sh_chat_message(i,gHeroID,"%s: KARMA, %s! KARMA!",ester_wielder_name,dead_client_name)
		sh_chat_message(id,gHeroID,"%s: KARMA, %s! KARMA!",ester_wielder_name,dead_client_name)
	}
}	

//----------------------------------------------------------------------------------------------
public ester_kd()
{
	new temp[6]
	
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	if ( !is_user_alive(id)||!gHasEster[id]||!hasRoundStarted()) {
		return PLUGIN_HANDLED
	}
	if(!count_enemies(id)){
	
		sh_chat_message(id,gHeroID,"Maaaaan... you have no enemies yet! Chiiiilll");
		sh_sound_deny(id)
		return PLUGIN_HANDLED
		
	}
	if(!gTimesLeft[id]){
		
		sh_chat_message(id,gHeroID,"Already used Ester %d times this map. Dumbass",times_per_map);
		sh_sound_deny(id)
		return PLUGIN_HANDLED
	}
	if(gUnloading[id]){
		
		sh_chat_message(id,gHeroID,"YOURE UNLOADING!!!! NO GOING BACK NOw AHAHAAHAH!!!!");
		sh_sound_deny(id)
		return PLUGIN_HANDLED
		
	}
	new client_name[128];
	get_user_name(id,client_name,127)
	sh_chat_message(0,gHeroID,"%s is charging up and about to release a NEUROBLAST!!!!^n",client_name)
	sh_chat_message(0,gHeroID,"%s: Thats it! IM FUCKING TIRED OF THIS SHIT!!!!! You ALL DIE N O W!",client_name);
	show_targets(id)
	
	emit_sound(id, CHAN_ITEM, NEUROBLAST_CHARGE, 1.0, ATTN_NORM, 0, PITCH_NORM)
	gPedalIsFloored[id]=true
	set_task(period, "Ester_revenge_loop", id+ESTER_REVENGE_TASKID, _, _, "b")
	
	return PLUGIN_HANDLED
}

public ester_ku()
{
	new temp[6]
	
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	if ( !is_user_alive(id) ||!gHasEster[id]||!gTimesLeft[id]||!gPedalIsFloored[id]||!hasRoundStarted()) {
		return PLUGIN_HANDLED
	}
	gPedalIsFloored[id]=false
	stop_sounds(id)
	new client_name[128]
	get_user_name(id,client_name,127)
	if(damage_to_do[id]<min_damage_to_do){
		
		sh_chat_message(id,gHeroID,"Not enough built up damage! (current: %d but needs %d.) Resetting damage to do",damage_to_do[id],min_damage_to_do);
		sh_sound_deny(id)
		reset_status(id)
		return PLUGIN_HANDLED;
	}
	emit_sound(id, CHAN_ITEM, NEUROBLAST_RELEASE, 1.0, ATTN_NORM, 0, PITCH_NORM)
	if(!gFinished[id]){
		gUnloading[id]=true
		gTimesLeft[id]--;
	}
	
	return PLUGIN_HANDLED
}
