

#include "../my_include/superheromod.inc"

#define ESTER_HUD_TASKID 23443
#define ESTER_REVENGE_TASKID 11122

#define COUNTER_UP_SFX "shmod/Teliko/counter_plus_plus.wav"
#define NEUROBLAST_CHARGE "shmod/ester/ester_buildup.wav"
#define NEUROBLAST_RELEASE  "shmod/ester/ester_release.wav"

#define PAN_P_MODEL "models/shmod/ester/pan/p_knife.mdl"
#define PAN_V_MODEL  "models/shmod/ester/pan/v_knife.mdl"

#define PAN_HIT_WALL_SOUND "weapons/esterpan/knife_hitwall1.wav"
#define PAN_HIT_AIR1_SOUND  "weapons/esterpan/knife_slash1.wav"
#define PAN_HIT_AIR2_SOUND  "weapons/esterpan/knife_slash2.wav"
#define PAN_STAB_MEAT_SOUND  "weapons/esterpan/knife_stab.wav"
#define PAN_HIT_MEAT1_SOUND  "weapons/esterpan/knife_hit1.wav"
#define PAN_HIT_MEAT2_SOUND  "weapons/esterpan/knife_hit2.wav"
#define PAN_HIT_MEAT3_SOUND  "weapons/esterpan/knife_hit3.wav"
#define PAN_HIT_MEAT4_SOUND  "weapons/esterpan/knife_hit4.wav"


#define ESTER_MORPH_TASKID 2182722
// GLOBAL VARIABLES
new gHeroID
new const gHeroName[] = "Ester"
new bool:gHasEster[SH_MAXSLOTS+1]
new bool:gPedalIsFloored[SH_MAXSLOTS+1]
new bool:gUnloading[SH_MAXSLOTS+1]
new bool:gFinished[SH_MAXSLOTS+1]
new damage_to_do[SH_MAXSLOTS+1]
new gEsterDmg[SH_MAXSLOTS+1]
new gTimesLeft[SH_MAXSLOTS+1]


new gmorphed[SH_MAXSLOTS+1]
new teamglow_on



new bool:g_ester_enemies[SH_MAXSLOTS+1][SH_MAXSLOTS+1]
new m_spriteTexture
new hud_sync
new hud_sync_enemies
new times_per_map,Float:stun_time_at_it,Float:stun_speed_at_it,Float:period,power_cost
new base_dmg_per_it,dmg_inc_per_inc,num_lvls_for_inc,max_dmg
new Float:pan_dmg
new gHeroLevel

//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Ester", "1.0", "TastyMedula")
	
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("ester_level", "8")
	register_cvar("ester_stuntime", "10")
	register_cvar("ester_stunspeed", "100")
	register_cvar("ester_damage", "3")
	register_cvar("ester_period", "0.1")
	register_cvar("ester_max_dmg", "20")
	register_cvar("ester_teamglow_on", "1")
	register_cvar("ester_dmg_inc_per_inc", "5")
	register_cvar("ester_lvls_for_inc", "5")
	register_cvar("ester_uses_per_map","1")
	register_cvar("ester_power_cost", "3")
	register_cvar("ester_pan_dmg", "1.5")
	hud_sync = CreateHudSyncObj()
	hud_sync_enemies = CreateHudSyncObj()
	gHeroID=shCreateHero(gHeroName, "NEUROBLAST!", "Kill everyone who wronged you! Also you have a pan", true, "ester_level" )
	
	register_event("Damage", "ester_damage", "b", "2!0")
	register_event("CurWeapon", "weaponChange", "be", "1=1")
	register_event("DeathMsg","death","a")
	
	register_srvcmd("ester_init", "ester_init")
	shRegHeroInit(gHeroName, "ester_init")
	register_srvcmd("ester_kd", "ester_kd")
	shRegKeyDown(gHeroName, "ester_kd")
	register_srvcmd("ester_ku", "ester_ku")
	shRegKeyUp(gHeroName, "ester_ku")
}
public ester_init()
{
	
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	gHasEster[id]=(hasPowers!=0)
	if(gHasEster[id]){
		
		ester_model(id)
		if(gTimesLeft[id]<=0){
			reset_status(id)
			sh_chat_message(id,gHeroID,"Youve already used up Ester this map. Have fun with the pan tho")
			return
		}
		reset_ester_user_round(id)
		set_task( 1.0, "ester_loop", id+ESTER_HUD_TASKID, "", 0, "b")
	}
	else{
		reset_ester_user_round(id)
		ester_unmorph(id+ESTER_MORPH_TASKID)
		remove_task(id+ESTER_REVENGE_TASKID)
	
	}
	
	
}

//----------------------------------------------------------------------------------------------
public ester_model(id)
{
	set_task(1.0, "ester_morph", id+ESTER_MORPH_TASKID)
	if( teamglow_on){
		set_task(1.0, "ester_glow", id+ESTER_MORPH_TASKID, "", 0, "b" )
	}

}
//----------------------------------------------------------------------------------------------
public ester_morph(id)
{
	id-=ESTER_MORPH_TASKID
	if ( gmorphed[id] || !is_user_alive(id)||!gHasEster[id] ) return
	
	// Message
	/*set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, 7)
	show_hudmessage(id, "Ready to adult.")*/
	cs_set_user_model(id, "ester")
	
	gmorphed[id] = true
	
}
//----------------------------------------------------------------------------------------------
public ester_unmorph(id)
{
	id-=ESTER_MORPH_TASKID
	if(!is_user_connected(id)) return
	if ( gmorphed[id] ) {

		cs_reset_user_model(id)

		gmorphed[id] = false

		if ( teamglow_on ) {
			remove_task(id+ESTER_MORPH_TASKID)
			set_user_rendering(id)
		}
		// Message
		/*set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, 7)
		show_hudmessage(id, "Fuck my li- *Sigh...* Spectating again")*/
	}
}
//----------------------------------------------------------------------------------------------
public ester_glow(id)
{
	id -= ESTER_MORPH_TASKID

	if ( !is_user_connected(id) ) {
		//Don't want any left over residuals
		remove_task(id+ESTER_MORPH_TASKID)
		return
	}

	if ( gHasEster[id] && is_user_alive(id)) {
		if ( get_user_team(id) == 1 ) {
			shGlow(id, 255, 0, 0)
		}
		else {
			shGlow(id, 0, 0, 255)
		}
	}
}

reset_status(id){



	remove_task(id+ESTER_REVENGE_TASKID)
	gFinished[id]=false
	damage_to_do[id]=0
	gPedalIsFloored[id]=false
	gUnloading[id]=false
	emit_sound(id, CHAN_ITEM, NEUROBLAST_CHARGE, 1.0, 0.0,SND_STOP,PITCH_NORM)
	emit_sound(id, CHAN_ITEM, NEUROBLAST_RELEASE, 1.0, 0.0,SND_STOP,PITCH_NORM)

}

client_hittable(vic_userid){

return (is_user_connected(vic_userid)&&is_user_alive(vic_userid)&&vic_userid)

}
count_enemies(id){
	
	new count=0;
	if((gTimesLeft[id]>0)||!gFinished[id]){
		new players[SH_MAXSLOTS]
		new player_count
		get_players(players,player_count)
		for(new i=0;i<player_count;i++){
			if(client_hittable(players[i])){
				count+=((g_ester_enemies[id][players[i]])&&(players[i]!=id)&&(players[i]))?1:0;
			}
		}
		
		
		
	}
	return count;
		



}

public weaponChange(id)
{
	if ( !is_user_alive(id)||!gHasEster[id] ||!shModActive()) return PLUGIN_CONTINUE

	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	if (wpnid == CSW_KNIFE) {
		entity_set_string(id, EV_SZ_viewmodel, PAN_V_MODEL)
		entity_set_string(id, EV_SZ_weaponmodel, PAN_P_MODEL)
	}
	return PLUGIN_CONTINUE

}
public reset_ester_user_round(id){
	reset_status(id)
	if(gTimesLeft[id]<=0){
		arrayset(g_ester_enemies[id],false,SH_MAXSLOTS+1)
	}
	update_max_dmg(id)
	
	
	
}
public status_hud(id){

	new hud_msg[200];
	format(hud_msg,199,"[SH] %s:^nCharging? %s^nUnloding? %s^nFinished? %s^nYour damage: %d^nTimes left: %d^nDamage to do to enemies: %d^nNumber of enemies: %d^n",
					gHeroName,
					gPedalIsFloored[id]?"Yes":"No.",
					gUnloading[id]?"Yes":"No.",
					gFinished[id]?"Yes":"No.",
					gEsterDmg[id],
					gTimesLeft[id],
					damage_to_do[id],
					count_enemies(id));
	
	
	set_hudmessage(255, 255, 255,1.0, 0.3, 0, 0.0, 2.0,0.0,0.0,1)
	ShowSyncHudMsg(id, hud_sync, "%s", hud_msg)
	
	
}
public show_targets(id){

	new hud_msg[500];
	new client_name[128];
	get_user_name(id,client_name,127)
	format(hud_msg,500,"[SH] %s:^nTHE FOLLOWING PLAYERS WILL BE TARGETED BY AN INCOMMING NEUROBLAST FROM %s!!!!^n^n",gHeroName,client_name)
	for(new i=1;i<=SH_MAXSLOTS;i++){
		if(g_ester_enemies[id][i]&&client_hittable(i)){
			get_user_name(i,client_name,127)
			format(hud_msg,500,"%s%s.^n",hud_msg,client_name);
		}
	} 
	set_hudmessage(255,50, 255, -1.0, -1.0,      0,       0.0,       4.0,       0.0,     0.0,      1)
	ShowSyncHudMsg(0, hud_sync_enemies, "%s", hud_msg)

}
public update_max_dmg(id){
		gEsterDmg[id]=(gTimesLeft[id]>0)?min(max_dmg,base_dmg_per_it+(dmg_inc_per_inc*((sh_get_user_lvl(id)-gHeroLevel)/num_lvls_for_inc))):0

}
//----------------------------------------------------------------------------------------------
public plugin_cfg()
{
	loadCVARS();
	arrayset(gTimesLeft,times_per_map,SH_MAXSLOTS+1)
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
	gHeroLevel=get_cvar_num("ester_level");
	stun_time_at_it=get_cvar_float("ester_stuntime")
	stun_speed_at_it=get_cvar_float("ester_stunspeed")
	period=get_cvar_float("ester_period")
	power_cost=get_cvar_num("ester_power_cost")
	times_per_map=get_cvar_num("ester_uses_per_map")
	base_dmg_per_it=get_cvar_num("ester_damage")
	max_dmg=get_cvar_num("ester_max_dmg")
	dmg_inc_per_inc=get_cvar_num("ester_dmg_inc_per_inc")
	num_lvls_for_inc=get_cvar_num("ester_lvls_for_inc")
	pan_dmg=get_cvar_float("ester_pan_dmg")
	teamglow_on=get_cvar_num("ester_teamglow_on")
}//----------------------------------------------------------------------------------------------
public ester_loop(id)
{
	id -= ESTER_HUD_TASKID
	
	if ( !is_user_connected(id)||!is_user_alive(id)||!gHasEster[id]||!id){
		
		return PLUGIN_HANDLED
		
	}
	status_hud(id)
	if(gPedalIsFloored[id]){
		
		sh_set_rendering(id, 8, 255, 8, 255,kRenderFxGlowShell, kRenderTransAlpha)
			
		
	}
	else {
		if(gUnloading[id]){
			
			sh_set_rendering(id, 255, 255, 255, 255,kRenderFxGlowShell, kRenderTransAlpha)
			
			
		}
		else  if(gFinished[id]) {
	
			sh_chat_message(id,gHeroID,"Revenge taken. You shall now die");
			sh_extra_damage(id,id,1,"Neuroblast",false,SH_DMG_KILL)
			
	
		}
	}
	return PLUGIN_HANDLED
}
public psychic_stream(id, x)
{
	emit_sound(id, CHAN_ITEM, "weapons/electro5.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)

	new origin[3]
	
	get_user_origin(id, origin, 1)
		
	message_begin( MSG_BROADCAST, SVC_TEMPENTITY )
	write_byte( 8 )
	write_short(id)				// start entity
	write_short(x)				// entity
	write_short(m_spriteTexture)		// model
	write_byte( 0 ) 				// starting frame
	write_byte( 30 )  			// frame rate
	write_byte( 1)  			// life
	write_byte( 45)  		// line width
	write_byte( 0 )  			// noise amplitude
	write_byte(255 )				// r, g, b
	write_byte( 255 )				// r, g, b
	write_byte( 255 )				// r, g, b
	write_byte( 255 )				// brightness
	write_byte( 8 )				// scroll speed
	message_end()

}
public charge_aura(id){

	new origin[3]

	get_user_origin(id, origin, 1)
	
	message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
	write_byte(27)
	write_coord(origin[0])	//pos
	write_coord(origin[1])
	write_coord(origin[2])
	write_byte(15)
	write_byte(100)			// r, g, b
	write_byte(100)		// r, g, b
	write_byte(255)			// r, g, b
	write_byte(3)			// life
	write_byte(1)			// decay
	message_end()

}
public charge_reflect_spark(id, x)
{
	emit_sound(id, CHAN_ITEM, "weapons/electro5.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
	
	new origin[3]
	
	get_user_origin(id, origin, 1)
	
	message_begin( MSG_BROADCAST, SVC_TEMPENTITY )
	write_byte( 8 )
	write_short(id)				// start entity
	write_short(x)				// entity
	write_short(m_spriteTexture)		// model
	write_byte( 0 ) 				// starting frame
	write_byte( 30 )  			// frame rate
	write_byte( 1)  			// life
	write_byte( 2)  		// line width
	write_byte(80 )  			// noise amplitude
	write_byte(8)				// r, g, b
	write_byte( 60)				// r, g, b
	write_byte( 8 )				// r, g, b
	write_byte( 110)				// brightness
	write_byte( 8 )				// scroll speed
	message_end()

}
public Ester_revenge_loop(id)
{
	id-=ESTER_REVENGE_TASKID
	if ( !sh_is_active() || !is_user_alive(id) ||!(gPedalIsFloored[id]||gUnloading[id])||gFinished[id]) return
	static CsArmorType:armorType
	static userArmor,user_health
	user_health=get_user_health(id)
	userArmor = cs_get_user_armor(id, armorType)
	if ( userArmor == 0 ) armorType = CS_ARMOR_VESTHELM
	
	if(gPedalIsFloored[id]){
		
		if (power_cost > 0 )
		{
			if ( (userArmor < power_cost)) {
					if ( user_health< power_cost ) {
						sh_chat_message(id,gHeroID,"You ran out of both vitality and stamina. Now you will die.");
						sh_extra_damage(id,id,1,"Neuroblast",false,SH_DMG_KILL)
						return;
					}
					
					sh_extra_damage(id,id,power_cost,"Neuroblast",false,SH_DMG_NORM)
					user_health=get_user_health(id)
			}
			else{
			
				cs_set_user_armor(id, userArmor - power_cost, armorType)
				if( cs_get_user_armor(id, armorType)<power_cost){
					sh_chat_message(id,gHeroID,"You ran out stamina. Now you will now lose health.");
						
				}
			}
		}
		charge_aura(id)
		damage_to_do[id]+=gEsterDmg[id]
	}
	else if(gUnloading[id]){
		
		for ( new x=1; x<=SH_MAXSLOTS; x++) 
		{
			if ( is_user_alive(x) && (get_user_team(id)!=get_user_team(x)) && x!=id &&(g_ester_enemies[id][x]))
			{
				
				Ester_instant(x, id)
				sh_set_stun(x,stun_time_at_it, stun_speed_at_it)
			}
		}
		damage_to_do[id]-=min(power_cost,damage_to_do[id])
		if(!damage_to_do[id]){
		
			gUnloading[id]=false;
			gFinished[id]=true;
			sh_chat_message(id,gHeroID,"There.... hah.... hah.... hah...");
		
		}
	}
}

public Ester_instant(x, id)
{
	emit_sound(x, CHAN_ITEM, "weapons/xbow_hitbod2.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
	shExtraDamage( x, id,gEsterDmg[id], "Neuroblast" )
	psychic_stream(id,x)
	return PLUGIN_HANDLED
}
//----------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{
	if ( gHasEster[id]&&is_user_alive(id) && sh_is_active() ) {
		
		emit_sound(id, CHAN_ITEM, NEUROBLAST_CHARGE, 1.0, 0.0,SND_STOP,PITCH_NORM)
		emit_sound(id, CHAN_ITEM, NEUROBLAST_RELEASE, 1.0, 0.0,SND_STOP,PITCH_NORM)
		reset_ester_user_round(id)
		ester_model(id)
		
	}
	
}
public ester_damage(id)
{
	if ( !shModActive() || !is_user_alive(id)||!is_user_connected(id)) return
	
	new  damage= read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0
	if ( (attacker <= 0 || attacker > SH_MAXSLOTS )|| (attacker==id)||!is_user_connected(attacker)) return
	
	
	new CsTeams:att_team=CS_TEAM_UNASSIGNED;
	att_team=cs_get_user_team(attacker)
	
	if(gHasEster[attacker]&&(weapon==CSW_KNIFE)){
	
		new attacker_name[128]
		new client_name[128]
		get_user_name(attacker,attacker_name,127)
		get_user_name(id,client_name,127)
		sh_set_stun(id,2.0,0.5)
		sh_chat_message(attacker,gHeroID,"%s: OW! What was that for, Ester? (%s)?",client_name,attacker_name)
		sh_chat_message(id,gHeroID,"%s: Shut up, %s.",attacker_name,client_name)
		new Float:extraDamage = floatsub(floatmul(float(damage), pan_dmg ),float(damage))
		if (extraDamage>0){
			shExtraDamage(id, attacker, floatround(extraDamage), "Adutling Pan (TM)", headshot)
		}
	
	
	}
	if(cs_get_user_team(id)==att_team){
	
		return;
	
	}
	if(!gUnloading[id]&&gTimesLeft[id]&&gHasEster[id]){
		
		g_ester_enemies[id][attacker]=true;
		if(gPedalIsFloored[id]){
			
			shExtraDamage( attacker, id,floatround(floatmul(floatdiv(float(damage),float(damage_to_do[id])),float(gEsterDmg[id])),floatround_ceil), "Charging reflect" )
			emit_sound(id, CHAN_WEAPON, COUNTER_UP_SFX, 1.0, 0.0, 0, PITCH_NORM)
			charge_reflect_spark(id, attacker)
		}
	}
}
public plugin_precache()
{
	
	m_spriteTexture = precache_model("sprites/laserbeam.spr")
	precache_model("models/player/ester/ester.mdl")
	precache_model("models/player/ester/esterT.mdl")
	engfunc(EngFunc_PrecacheSound, PAN_HIT_AIR1_SOUND)
	engfunc(EngFunc_PrecacheSound, PAN_HIT_AIR2_SOUND)
	engfunc(EngFunc_PrecacheSound, PAN_HIT_WALL_SOUND)
	engfunc(EngFunc_PrecacheSound, PAN_STAB_MEAT_SOUND)
	engfunc(EngFunc_PrecacheSound, PAN_HIT_MEAT1_SOUND)
	engfunc(EngFunc_PrecacheSound, PAN_HIT_MEAT2_SOUND)
	engfunc(EngFunc_PrecacheSound, PAN_HIT_MEAT3_SOUND)
	engfunc(EngFunc_PrecacheSound, PAN_HIT_MEAT4_SOUND)
	engfunc(EngFunc_PrecacheSound,NEUROBLAST_CHARGE)
	engfunc(EngFunc_PrecacheSound,NEUROBLAST_RELEASE)
	precache_model(PAN_V_MODEL)
	precache_model(PAN_P_MODEL)
	
}

public death()
{
	new id=read_data(1)
	
	ester_unmorph(id+ESTER_MORPH_TASKID)
	emit_sound(id, CHAN_ITEM, NEUROBLAST_CHARGE, 1.0, 0.0,SND_STOP,PITCH_NORM)
	emit_sound(id, CHAN_ITEM, NEUROBLAST_RELEASE, 1.0, 0.0,SND_STOP,PITCH_NORM)
	if ( !is_user_connected(id)||!gHasEster[id]||!id){
		return
	}
	gTimesLeft[id]-=(gTimesLeft[id]&&gPedalIsFloored[id])?1:0
}	

//----------------------------------------------------------------------------------------------
public ester_kd()
{
	new temp[6]
	
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	if ( !is_user_alive(id)||!gHasEster[id]||!hasRoundStarted()) {
		return PLUGIN_HANDLED
	}
	if(!gTimesLeft[id]){
	
		sh_chat_message(id,gHeroID,"Already used Ester %d times this map. Dumbass",times_per_map);
		sh_sound_deny(id)
		return PLUGIN_HANDLED
	}
	if(gUnloading[id]){
	
		sh_chat_message(id,gHeroID,"YOURE UNLOADING!!!! NO GOING BACK NO AHAHAAHAH!!!!");
		sh_sound_deny(id)
		return PLUGIN_HANDLED
	
	}
	new client_name[128];
	get_user_name(id,client_name,127)
	sh_chat_message(0,gHeroID,"%s is charging up and about to release a NEUROBLAST!!!!^n",client_name)
	sh_chat_message(0,gHeroID,"%s: Thats it! IM FUCKING TIRED OF THIS SHIT!!!!! You ALL DIE N O W!",client_name);
	show_targets(id)
	
	emit_sound(id, CHAN_ITEM, NEUROBLAST_CHARGE, 1.0, ATTN_NORM, 0, PITCH_NORM)
	gPedalIsFloored[id]=true
	set_task(period, "Ester_revenge_loop", id+ESTER_REVENGE_TASKID, _, _, "b")
	
	return PLUGIN_HANDLED
}

public ester_ku()
{
	new temp[6]
	
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	if ( !is_user_alive(id) ||!gHasEster[id]||!gTimesLeft[id]||!gPedalIsFloored[id]||!hasRoundStarted()) {
		return PLUGIN_HANDLED
	}
	gPedalIsFloored[id]=false
	
	emit_sound(id, CHAN_ITEM, NEUROBLAST_CHARGE, 1.0, ATTN_NORM, SND_STOP, PITCH_NORM)
	emit_sound(id, CHAN_ITEM, NEUROBLAST_RELEASE, 1.0, ATTN_NORM, 0, PITCH_NORM)
	if(!gFinished[id]){
		gUnloading[id]=true
		gTimesLeft[id]--;
	}
	
	return PLUGIN_HANDLED
}
