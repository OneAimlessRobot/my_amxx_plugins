

#include "../my_include/superheromod.inc"
#include <xs>
#include "tranq_gun_inc/sh_erica_get_set.inc"
#include "tranq_gun_inc/sh_man_hook_funcs.inc"
#include "tranq_gun_inc/sh_tranq_funcs.inc"
#include "sh_aux_stuff/sh_aux_inc.inc"
#include "bleed_knife_inc/sh_bknife_fx.inc"
#include "tranq_gun_inc/sh_molotov_funcs.inc"
#include "tranq_gun_inc/sh_molotov_fx.inc"
// GLOBAL VARIABLES

new gHeroID

stock const gHeroName[] = "Erica Fonseca"

new gHasErica[SH_MAXSLOTS+1]
new gNumDarts[SH_MAXSLOTS+1]
new g_erica_points[SH_MAXSLOTS+1]
new g_erica_kills[SH_MAXSLOTS+1]
new gNumMollies[SH_MAXSLOTS+1]
new Float:g_base_er_speed[SH_MAXSLOTS+1]
new Float:g_normal_er_speed[SH_MAXSLOTS+1]
new Float:g_base_er_dmg_mult[SH_MAXSLOTS+1]
new Float:g_normal_er_dmg_mult[SH_MAXSLOTS+1]
new Float:g_base_er_radius[SH_MAXSLOTS+1]
new Float:g_normal_er_radius[SH_MAXSLOTS+1]


new const erica_knife_sounds[9][]={"weapons/erica_knife/knife_deploy1.wav",
"weapons/erica_knife/knife_hit1.wav",
"weapons/erica_knife/knife_hit2.wav",
"weapons/erica_knife/knife_hit3.wav",
"weapons/erica_knife/knife_hit4.wav",
"weapons/erica_knife/knife_hitwall1.wav",
"weapons/erica_knife/knife_slash1.wav",
"weapons/erica_knife/knife_slash2.wav",
"weapons/erica_knife/knife_stab.wav"}

//new gHeroLevel
new base_er_points
new max_er_points
new Float:speed_speed_er_points_pct
new Float:speed_points_er_radius_pct
new Float:dmg_speed_er_points_pct
new Float:base_er_speed
new Float:max_er_speed
new Float:max_er_radius
new Float:base_er_radius
new Float:max_dmg_er_mult
new Float:base_dmg_er_mult
new Float:dmg_mult_er_inc
new num_er_darts
new num_mollies


//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Erica", "1.0", "TastyMedula")
	
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("erica_level", "8")
	register_cvar("erica_speed_points_radius_pct", "0.1")
	register_cvar("erica_base_radius", "500")
	register_cvar("erica_max_radius", "1000")
	register_cvar("erica_base_points", "1000")
	register_cvar("erica_max_points", "1000")
	register_cvar("erica_base_dmg_mult", "1.0")
	register_cvar("erica_dmg_mult_inc", "1.0")
	register_cvar("erica_max_dmg_mult", "6.0")
	register_cvar("erica_base_speed", "500")
	register_cvar("erica_max_speed", "1000")
	register_cvar("erica_num_darts", "100")
	register_cvar("erica_num_mollies", "181288")
	register_cvar("erica_speed_speed_points_pct", "0.1")
	register_cvar("erica_dmg_speed_points_pct", "0.1")
	register_event("ResetHUD","newRound","b")
	gHeroID=shCreateHero(gHeroName, "Erica!", "Grab attention and get ++ powerful!", false, "erica_level" )
	tranq_set_hero_id(gHeroID)
	g_msgFade = get_user_msgid("ScreenFade");
	register_event("Damage", "erica_damage", "b", "2!0")
	register_event("DeathMsg","death","a")
	register_srvcmd("erica_init", "erica_init")
	shRegHeroInit(gHeroName, "erica_init")
	RegisterHam(Ham_TakeDamage,"player","Erica_ham_damage",_,true)
	
	register_event("CurWeapon", "weaponChange", "be", "1=1")
	
	
}

public plugin_natives(){

	
	register_native("tranq_dec_num_darts","_tranq_dec_num_darts",0);
	register_native("tranq_get_num_darts","_tranq_get_num_darts",0);
	register_native("tranq_set_num_darts","_tranq_set_num_darts",0);
	
	
	register_native("erica_dec_num_mollies","_erica_dec_num_mollies",0);
	register_native("erica_get_num_mollies","_erica_get_num_mollies",0);
	register_native("erica_set_num_mollies","_erica_set_num_mollies",0);
	
	
	
	register_native("tranq_set_hero_id","_tranq_set_hero_id",0);
	register_native("tranq_get_hero_id","_tranq_get_hero_id",0);
	
	register_native("tranq_get_is_max_points","_tranq_get_is_max_points",0);
	register_native("tranq_get_has_erica","_tranq_get_has_erica",0);
	register_native("tranq_set_has_erica","_tranq_set_has_erica",0);
	

}

public _erica_set_num_mollies(iPlugin,iParams){
	new id= get_param(1)
	new value_to_set=get_param(2)
	gNumMollies[id]=value_to_set;
}
public _erica_get_num_mollies(iPlugin,iParams){


	new id= get_param(1)
	return gNumMollies[id]

}

public _erica_dec_num_mollies(iPlugin,iParams){


	new id= get_param(1)
	gNumMollies[id]-= (gNumMollies[id]>0)? 1:0

}
public bool:_tranq_get_is_max_points(iPlugin,iParams){

	new id= get_param(1)
	return g_erica_points[id]==max_er_points;


}
public _tranq_set_has_erica(iPlugin,iParams){
	new id= get_param(1)
	new value_to_set= get_param(2)
	gHasErica[id]=value_to_set;
}
public _tranq_get_has_erica(iPlugin,iParams){
	new id= get_param(1)
	return gHasErica[id]
}

public _tranq_get_hero_id(iPlugin,iParams){
	return gHeroID
}
public _tranq_set_hero_id(iPlugin,iParams){
	gHeroID=get_param(1)
}

public _tranq_set_num_darts(iPlugin,iParams){
	new id= get_param(1)
	new value_to_set=get_param(2)
	gNumDarts[id]=value_to_set;
}
public _tranq_get_num_darts(iPlugin,iParams){


	new id= get_param(1)
	return gNumDarts[id]

}

public _tranq_dec_num_darts(iPlugin,iParams){


	new id= get_param(1)
	gNumDarts[id]-= (gNumDarts[id]>0)? 1:0

}


public erica_init()
{
	
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)
	
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	gHasErica[id]=(hasPowers!=0)
	if(gHasErica[id]){
		g_erica_points[id]=base_er_points;
		g_erica_kills[id]=0;
		g_base_er_speed[id]=base_er_speed
		g_base_er_radius[id]=base_er_radius
		gNumDarts[id]=num_er_darts
		gNumMollies[id]=num_mollies
		Erica_weapons(id)
		set_task(0.1, "erica_stats", id+ERICA_STATS_TASKID, "", 0, "b")
		
	}
	else{
		g_erica_points[id]=0;
		g_erica_kills[id]=0;
		g_base_er_speed[id]=0.0
		g_base_er_radius[id]=0.0
		gNumDarts[id]=0
		remove_task(id+ERICA_STATS_TASKID)
		if ( is_user_alive(id) ) {
			sh_drop_weapon(id, CSW_ELITE, true)
		}
		hook_set_hook(id,0)
	}
	
	
}
//----------------------------------------------------------------------------------------------
public plugin_cfg()
{
	loadCVARS();
	
}
//----------------------------------------------------------------------------------------------
public loadCVARS()
{
	
	//gHeroLevel=get_cvar_num("erica_level")
	base_er_radius=get_cvar_float("erica_base_radius")
	max_er_radius=get_cvar_float("erica_max_radius")
	max_er_points=get_cvar_num("erica_max_points")
	base_er_points=get_cvar_num("erica_base_points")
	base_er_speed=get_cvar_float("erica_base_speed")
	max_er_speed=get_cvar_float("erica_max_speed")
	num_er_darts=get_cvar_num("erica_num_darts")
	num_mollies=get_cvar_num("erica_num_mollies")
	max_dmg_er_mult=get_cvar_float("erica_max_dmg_mult")
	base_dmg_er_mult=get_cvar_float("erica_base_dmg_mult")
	dmg_mult_er_inc=get_cvar_float("erica_dmg_mult_inc")
	speed_speed_er_points_pct=get_cvar_float("erica_speed_speed_points_pct")
	speed_points_er_radius_pct=get_cvar_float("erica_speed_points_radius_pct")
	dmg_speed_er_points_pct=get_cvar_float("erica_dmg_speed_points_pct")
}
public Erica_ham_damage(id, idinflictor, attacker, Float:damage, damagebits)
{
if ( !shModActive() || !is_user_alive(id) || !is_user_connected(id)||!is_user_alive(attacker) ||!is_user_connected(attacker) ||!(attacker>=1 && attacker <=SH_MAXSLOTS)) return HAM_IGNORED

new clip,ammo,weapon=get_user_weapon(attacker,clip,ammo)

new CsTeams:att_team=cs_get_user_team(attacker)
if(tranq_get_has_erica(attacker)&&!(cs_get_user_team(id)==att_team)){
	
	if(weapon==CSW_KNIFE){
		new button = pev(attacker, pev_button);
		new bool:slashing;
		new bool:stabbing;
		if(button & IN_ATTACK2){
			
			button &= ~IN_ATTACK2;
			stabbing=true;
			slashing=false
		}
		if(button & IN_ATTACK){
			
			button &= ~IN_ATTACK;
			stabbing=false;
			slashing=true
		}
		new Float: vec2LOS[2];
		new Float: vecForward[3];
		new Float: vecForward2D[2];
	
		velocity_by_aim( attacker, 1, vecForward );
      
		xs_vec_make2d( vecForward, vec2LOS );
		xs_vec_normalize( vec2LOS, vec2LOS );
    
		velocity_by_aim(id, 1, vecForward ); 
        
		xs_vec_make2d( vecForward, vecForward2D );
		if(stabbing){
			
			if( (xs_vec_dot( vec2LOS, vecForward2D ) > 0.8) )
			{
				sh_ultrableed_user(id,attacker,gHeroID)
			}
			else{
				sh_bleed_user(id,attacker,gHeroID)
			}
			return HAM_IGNORED
		}
		else if(slashing){
			
			sh_minibleed_user(id,attacker,gHeroID)
			return HAM_IGNORED
		}
	}
}

return HAM_IGNORED
	
}
//----------------------------------------------------------------------------------------------
public newRound(id)
{	
	if(shModActive()&&client_hittable(id)){
		if ( gHasErica[id]) {
			g_erica_kills[id]=0;
			gNumDarts[id]=num_er_darts
			gNumMollies[id]=num_mollies
			g_erica_points[id]=base_er_points;
			g_base_er_speed[id]=base_er_speed
			g_base_er_dmg_mult[id]=base_dmg_er_mult
			g_base_er_radius[id]=base_er_radius
			
			
		}
	}
	return PLUGIN_HANDLED
	
}
public sh_client_spawn(id)
{
	if ( gHasErica[id] ) {
		Erica_weapons(id)
	}

}
add_speed_points(id,Float:damage){
	
	g_erica_points[id]=min(max_er_points,g_erica_points[id]+(floatround(damage*dmg_speed_er_points_pct)))
	
	
}
public get_speed_dmg_in_radius(id,Float:damage){

	new client_origin[3],teamate_origin[3],distance
	get_user_origin(id,client_origin);
	for(new i=1;i<=SH_MAXSLOTS;i++){
		
		//if(!is_user_connected(i)||!gHasAdriano[i]||!is_user_alive(i)){
		if(gHasErica[id]&&client_hittable(id)){
			get_user_origin(i,teamate_origin)
			distance=get_distance(client_origin,teamate_origin)
			if(distance<g_normal_er_radius[id]){
				heal_stream(i, id,PINK)
				aura(id,LineColorsWithAlpha[PINK])
				add_speed_points(id,damage)
				return 1
			}
		}
		
		
	}
	return 0
}
public sh_round_end(){

	clear_darts()
	clear_mollies()

}
public weaponChange(id)
{
	if ( !is_user_alive(id)||!gHasErica[id] ||!shModActive()&&client_hittable(id)) return PLUGIN_CONTINUE

	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	if (wpnid == CSW_KNIFE) {
		entity_set_string(id, EV_SZ_viewmodel, NAVALHA_V_MODEL)
		entity_set_string(id, EV_SZ_weaponmodel, NAVALHA_P_MODEL)
	}
	if (wpnid == CSW_ELITE) {
		entity_set_string(id, EV_SZ_viewmodel,TRANQS_V_MODEL)
		entity_set_string(id, EV_SZ_weaponmodel, TRANQS_P_MODEL)
	}
	return PLUGIN_CONTINUE

}

public erica_damage(id)
{
	if ( !shModActive() || !is_user_alive(id)||!is_user_connected(id)) return
	
	new  Float:damage= float(read_data(2))
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0
	if ( attacker <= 0 || attacker > SH_MAXSLOTS || attacker==id  ||!gHasErica[attacker]||!is_user_connected(attacker)) return
	
	
	new Float:extraDamage = damage * g_normal_er_dmg_mult[attacker] - damage
	if (floatround(extraDamage)>0){
		shExtraDamage(id, attacker, floatround(extraDamage), "Hype shot", headshot)
			
	}
	get_speed_dmg_in_radius(attacker,extraDamage+damage)
}
public erica_stats(id){
	
	id-=ERICA_STATS_TASKID;
	
	if(gHasErica[id]&&client_hittable(id)){
		
		update_stats2(id)
		
		
	}
	
	
}


update_stats2(id){
	
	if(gHasErica[id]&&client_hittable(id)){
		////g_normal_speed[id]=900.0-float(g_adriano_points[id])
		if(!sh_get_stun(id)){
			new Float:maxspeed=get_user_maxspeed(id)
			g_normal_er_speed[id]=floatmax(floatmin(floatadd(g_base_er_speed[id],floatmul(speed_speed_er_points_pct,float(g_erica_points[id]))),max_er_speed),maxspeed),
			set_user_maxspeed(id,g_normal_er_speed[id])
		}
		g_normal_er_radius[id]=floatmin(floatadd(g_base_er_radius[id],floatmul(float(g_erica_points[id]),speed_points_er_radius_pct)),max_er_radius);
		g_normal_er_dmg_mult[id]=floatmin(floatadd(g_base_er_dmg_mult[id],floatmul(float(g_erica_kills[id]),dmg_mult_er_inc)),max_dmg_er_mult);
		
	}
	
	
}
public Erica_weapons(id)
{
if ( sh_is_active() && gHasErica[id] &&client_hittable(id)) {
	sh_give_weapon(id,MOLLY_CLASSID,false)
	cs_set_user_bpammo(id, MOLLY_CLASSID,num_mollies);
	sh_give_weapon(id, CSW_ELITE)
	
	new weapon_id=find_ent_by_owner(-1,"weapon_elite",id);
	if(is_valid_ent(weapon_id)){
		cs_set_weapon_ammo(weapon_id, CLIP_SIZE);
		cs_set_user_bpammo(id, CSW_ELITE,gNumDarts[id]-CLIP_SIZE);
	}
	hook_set_hook(id,1)
	
}
}
public plugin_precache()
{
	precache_model(NAVALHA_V_MODEL)
	precache_model(NAVALHA_P_MODEL)
	precache_model(TRANQS_P_MODEL)
	precache_model(TRANQS_V_MODEL)
	engfunc(EngFunc_PrecacheSound, SILENT_TRANQS_SFX)
	for(new i=0;i<sizeof(erica_knife_sounds);i++){
	
		engfunc(EngFunc_PrecacheSound,erica_knife_sounds[i] );
	
	}
	precache_explosion_fx()
		
}
public death()
{	
	new id = read_data(2)
	if(gHasErica[id] && molly_get_molly_loaded(id)){
	
		molly_uncharge_molly(id)
	}
	sh_unmolly_user(id)
	new killer= read_data(1)
	new killer_name[128]
	get_user_name(killer,killer_name,127)
	if(gHasErica[killer]&&get_speed_dmg_in_radius(killer,0.0)){
		
		g_erica_kills[killer]++;
		sh_chat_message(0,gHeroID,"%s: WOW! AMAZING, HUH?!",killer_name)
	
	}
	
}
