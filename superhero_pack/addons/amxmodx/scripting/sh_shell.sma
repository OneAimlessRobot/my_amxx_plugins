
/* CVARS - copy and paste to shconfig.cfg

//Shell
shell_level 0
shell_healpoints 1		//The # of HP healed per second
shell_hpperlev 5			//The amount of HP subtracted per level
shell_healmax 250		//Max # HP shell can heal to

*/

#include <superheromod>

// GLOBAL VARIABLES
#define TASKID 5556
new gHeroName[]="Shell"
new bool:ghasShellPowers[SH_MAXSLOTS+1]
new gPlayerLevels[SH_MAXSLOTS+1]
new gHealPoints, gHealAmount
new gHasPNinety
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Shell", "1.02", "1sh0t2killz")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("shell_level", "0")
	register_cvar("shell_healpoints", "1")
	register_cvar("shell_hpperlev", "5")
	register_cvar("shell_healmax", "250")
	register_cvar("shell_giveweapon", "1")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(gHeroName, "Noob Protection!", "The lower level you are, the more hp you have.", false, "shell_level")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("shell_init", "shell_init")
	shRegHeroInit(gHeroName, "shell_init")

	
	set_task(1.0, "shell_loop", 0, "", 0, "b")
	// LEVELS
	register_srvcmd("shell_levels", "shell_levels")
	shRegLevels(gHeroName, "shell_levels")

	//Set Varibles when plugin loads
	gHealPoints = get_cvar_num("shell_healpoints")
	gHealAmount = get_cvar_num("shell_healmax")
	loadCVARS()
}
public loadCVARS(){

	gHasPNinety=get_cvar_num("shell_giveweapon")


}
//----------------------------------------------------------------------------------------------
public shell_init()
{
		// First Argument is an id
		new temp[6]
		read_argv(1,temp,5)
		new id = str_to_num(temp)

		// 2nd Argument is 0 or 1 depending on whether the id has the hero
		read_argv(2,temp,5)
		new hasPowers = str_to_num(temp)
		//This gets run if they had the power but don't anymore

		ghasShellPowers[id] = (hasPowers != 0)
		if(is_user_alive(id)){
		if ( !ghasShellPowers[id] ) {
			remove_task(id+TASKID)
			shRemHealthPower(id)
			gHasPNinety=0
		
		}
		else{
		
			gHasPNinety=1
			shell_weapons(id)
		}
		}
		//Sets this variable to the current status
		
}
public shell_weapons(id){

	if ( ghasShellPowers[id] && is_user_alive(id) ) {
			
			if(gHasPNinety){
				
				shGiveWeapon(id,"weapon_p90");
			}
			else{
				
				engclient_cmd(id, "drop", "weapon_p90")
				
			
		
			}
		}
	}
//----------------------------------------------------------------------------------------------
public sh_client_spawn(id)
{
	if ( ghasShellPowers[id] ) {
		new gHealthMax = ( gHealAmount - (gPlayerLevels[id] * get_cvar_num("shell_hpperlev")) )
		set_user_health(id, gHealthMax)
		shell_weapons(id)
	}
}
//----------------------------------------------------------------------------------------------
public shell_levels()
{
	new id[5]
	new lev[5]

	read_argv(1,id,4)
	read_argv(2,lev,4)

	gPlayerLevels[str_to_num(id)] = str_to_num(lev)
}
//----------------------------------------------------------------------------------------------
public shell_loop()
{
	if ( !shModActive() || !hasRoundStarted() ) return
	for(new id=0;id<SH_MAXSLOTS+1;id++){
		if ( ghasShellPowers[id] && is_user_alive(id) ) {	
			new gHealMax = ( gHealAmount - (gPlayerLevels[id] * get_cvar_num("shell_hpperlev")) )
			sh_add_hp(id, gHealPoints, gHealMax)
		}
	}
}
//----------------------------------------------------------------------------------------------
