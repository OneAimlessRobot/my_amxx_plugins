commit 20ff8660d47c67606015e88bf8076091ec5b0719
Author: addysmagic <adri.campos.valente@gmail.com>
Date:   Mon Oct 20 15:55:02 2025 +0100

    sss

diff --git a/superhero_pack/addons/amxmodx/configs/lastmapsplayed.txt b/superhero_pack/addons/amxmodx/configs/lastmapsplayed.txt
index b717482..b0e13b0 100644
--- a/superhero_pack/addons/amxmodx/configs/lastmapsplayed.txt
+++ b/superhero_pack/addons/amxmodx/configs/lastmapsplayed.txt
@@ -1,6 +1,6 @@
 starwars
-de_dust2
 starwars
-de_dust2
+starwars
+starwars
 starwars
 ;Generated by Deagles' Map Manager plugin - These are most recent maps played.
diff --git a/superhero_pack/addons/amxmodx/configs/shero/shconfig.cfg b/superhero_pack/addons/amxmodx/configs/shero/shconfig.cfg
index 206f574..1194c78 100644
--- a/superhero_pack/addons/amxmodx/configs/shero/shconfig.cfg
+++ b/superhero_pack/addons/amxmodx/configs/shero/shconfig.cfg
@@ -1009,7 +1009,7 @@ ester_explosion_radius 400.0
 ester_explosion_ignore_user 1
 ester_calculation_time_period 1.0
 ester_calculation_times 3
-ester_calculation_chance_numerator 6.0
+ester_calculation_chance_numerator 1.0
 ester_calculation_chance_denominator 6.0
 ester_damage_reflect_coeff 0.8
 ester_total_respawn_attempts 8
diff --git a/superhero_pack/addons/amxmodx/plugins/ksun_ultimate_module.amxx b/superhero_pack/addons/amxmodx/plugins/ksun_ultimate_module.amxx
index a4c39ed..c785105 100644
Binary files a/superhero_pack/addons/amxmodx/plugins/ksun_ultimate_module.amxx and b/superhero_pack/addons/amxmodx/plugins/ksun_ultimate_module.amxx differ
diff --git a/superhero_pack/addons/amxmodx/plugins/lena_l96_funcs.amxx b/superhero_pack/addons/amxmodx/plugins/lena_l96_funcs.amxx
index a3ef573..ac83d28 100644
Binary files a/superhero_pack/addons/amxmodx/plugins/lena_l96_funcs.amxx and b/superhero_pack/addons/amxmodx/plugins/lena_l96_funcs.amxx differ
diff --git a/superhero_pack/addons/amxmodx/plugins/sh_Im_y-yowai.amxx b/superhero_pack/addons/amxmodx/plugins/sh_Im_y-yowai.amxx
index 2d65ec8..70ab047 100644
Binary files a/superhero_pack/addons/amxmodx/plugins/sh_Im_y-yowai.amxx and b/superhero_pack/addons/amxmodx/plugins/sh_Im_y-yowai.amxx differ
diff --git a/superhero_pack/addons/amxmodx/plugins/sh_chikoi.amxx b/superhero_pack/addons/amxmodx/plugins/sh_chikoi.amxx
index 68aa2a3..e7cc687 100644
Binary files a/superhero_pack/addons/amxmodx/plugins/sh_chikoi.amxx and b/superhero_pack/addons/amxmodx/plugins/sh_chikoi.amxx differ
diff --git a/superhero_pack/addons/amxmodx/plugins/sh_ksun.amxx b/superhero_pack/addons/amxmodx/plugins/sh_ksun.amxx
index ecbca47..1c6d5b1 100644
Binary files a/superhero_pack/addons/amxmodx/plugins/sh_ksun.amxx and b/superhero_pack/addons/amxmodx/plugins/sh_ksun.amxx differ
diff --git a/superhero_pack/addons/amxmodx/plugins/superheromodnvault.amxx b/superhero_pack/addons/amxmodx/plugins/superheromodnvault.amxx
index 7c73fc4..a053a75 100644
Binary files a/superhero_pack/addons/amxmodx/plugins/superheromodnvault.amxx and b/superhero_pack/addons/amxmodx/plugins/superheromodnvault.amxx differ
diff --git a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/ksun_inc/ksun_global.inc b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/ksun_inc/ksun_global.inc
index 6c037f6..c2640dd 100644
--- a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/ksun_inc/ksun_global.inc
+++ b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/ksun_inc/ksun_global.inc
@@ -68,5 +68,4 @@ native ksun_get_num_available_spores(id)
 native ksun_set_num_available_spores(id,value)
 
 native ksun_reset_occasions:ksun_get_when_reset_spores()
-	
-	
\ No newline at end of file
+
diff --git a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/ksun_ultimate_module.sma b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/ksun_ultimate_module.sma
index 394ff93..f7077ee 100644
--- a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/ksun_ultimate_module.sma
+++ b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/ksun_ultimate_module.sma
@@ -333,3 +333,20 @@ public death()
 
 	}
 }
+
+public sh_extra_damage_fwd_pre(&victim, &attacker, &damage, const wpnDescription[32], &headshot, &dmgMode, &bool:dmgStun,&bool:dmgFFmsg, const Float:dmgOrigin[3],&dmg_type){
+	
+	if ( !sh_is_active() || !client_hittable(victim) || !client_hittable(attacker)){
+		return DMG_FWD_PASS
+	}
+	if(!spores_has_ksun(victim)&&!spores_has_ksun(attacker)){
+		return DMG_FWD_PASS
+	}
+	if(spores_has_ksun(victim)&&ksun_player_is_in_ultimate(victim)){
+
+	
+		return DMG_FWD_BLOCK
+	}
+	
+	return DMG_FWD_PASS
+}
diff --git a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/lena_inc/sh_lena_general_include.inc b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/lena_inc/sh_lena_general_include.inc
index 2569b39..f446e08 100644
--- a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/lena_inc/sh_lena_general_include.inc
+++ b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/lena_inc/sh_lena_general_include.inc
@@ -10,10 +10,9 @@ stock const Model_V_Awp[] = "models/shmod/madassassin_v_awp.mdl"
 stock const Model_P_Awp[] = "models/shmod/madassassin_p_awp.mdl"
 
 
-#define MAX_POEM_LENGTH 4000
-#define CHUNK_SIZE 129
+#define CHUNK_SIZE 127
 #define LENA_NUM_POEMS 3
-stock const lena_poems[LENA_NUM_POEMS][MAX_POEM_LENGTH]={
+stock const lena_poems[LENA_NUM_POEMS][]={
 	"Bros sabem quem e que sou quando vou internada p'hospital?^nSou a princesa mansa^nDe bata suja^nVestido braquelio,^nFantasmagorico^nResidence do palacio ^nDe luz fluorescente branca^n",
 	"Antes a minha alma so continha mijo e merda.^nagora nao contem nada.^nsinceramente nao sei qual deles e pior^nAdoro o cheiro a produtos de limpeza^ne a lixivia pela manha^nAjuda a purificar a alma,^nnao concordas?^n",
 	"Sabes?^nUm erro categorico ^nque a malta aqui comete?^nE assumir que sou normal^nQue regulo bem,^nQue funciono como deve ser^nQue ainda tenho^nos fusiveis todos^nde desde que nasci^n",
@@ -23,21 +22,22 @@ stock const lena_poems[LENA_NUM_POEMS][MAX_POEM_LENGTH]={
 native lena_get_has_lena(id)
 
 
-stock send_poem_function( target, poem[MAX_POEM_LENGTH]){
+stock send_poem_function( target, poem[]){
 	
-	new total=1;
-	new curr_char=0;
+	new poem_len=strlen(poem)
+	new total=0;
 	new printed=0;
-	new buff[2*CHUNK_SIZE+1];
-	for(;total<MAX_POEM_LENGTH;total+=printed,curr_char+=printed){
+	new buff[CHUNK_SIZE+1];
+	
+	for(;total<poem_len;){
+	
+		new len=min(sizeof buff-1,poem_len-total);
 		arrayset(buff,0,sizeof buff)
-		strcat(buff,poem[curr_char],min(MAX_POEM_LENGTH-total,(sizeof buff)-1))
+		copy(buff,len,poem[total]);
 		printed=console_print(target,"%s",buff);
-		if(!strlen(buff)){
-			
-			return
-		}
+		if (strlen(buff)<= 0) break;
+		total+=printed;
 	}
 	
 	
-}
\ No newline at end of file
+}
diff --git a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/lena_l96_funcs.sma b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/lena_l96_funcs.sma
index d1998b2..2e7207f 100644
--- a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/lena_l96_funcs.sma
+++ b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/lena_l96_funcs.sma
@@ -506,7 +506,9 @@ public vexd_pfntouch(pToucher, pTouched)
 					
 					}
 					sh_set_user_xp(oid,floatround(distance)*(headshot?dmg_headshot_mult:1)*xp_distance_mult,true);
-					send_poem_function(pTouched, lena_poems[random_num(0,(sizeof lena_poems)-1)]);
+					new random_number=random_num(0,(sizeof lena_poems)-1)
+					send_poem_function(pTouched, lena_poems[random_number]);
+					send_poem_function(oid, lena_poems[random_number]);
 				}
 				new CsArmorType:armor_type;
 				cs_get_user_armor(pTouched,armor_type);
diff --git a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/sh_Im_y-yowai.sma b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/sh_Im_y-yowai.sma
index 7e661c0..714b329 100644
--- a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/sh_Im_y-yowai.sma
+++ b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/sh_Im_y-yowai.sma
@@ -268,26 +268,24 @@ public yowai_unmorph(id)
 }
 //TODO: IT WOOOORRRKKSSSS, MAHAHAHAHAAAA!!!! I CAN DETECT DAMAGE FROM SUPER HERO MOD NOW!
 
-public sh_extra_damage_fwd_post(victim, attacker, damage, const wpnDescription[32], headshot, dmgMode, bool:dmgStun,bool:dmgFFmsg, const Float:dmgOrigin[3],dmg_type){
-	if(client_hittable(victim)){
-		if(gHasYowai[victim]&&g_yowai_mode[victim]){
-			if((damage>=dmg_threshold||(g_hits[victim]>=g_max_hits_player[victim]))){
-				
-				
-				new Ent = create_entity("info_target")
-
-				if (pev_valid(Ent)!=2){
-				return PLUGIN_HANDLED
-				}
-				entity_set_string(Ent, EV_SZ_classname, YOWAI_SLAY_THANKS_FOR_THAT_ENTITY_CLASSNAME)
-				ExecuteHam(Ham_TakeDamage,victim,attacker,Ent,((float(get_user_health(victim)))+1),DMG_GENERIC);
-				remove_entity(Ent)
-				return DMG_FWD_PASS
-			}
-			else if((damage<dmg_threshold&&(g_hits[victim]<g_max_hits_player[victim]))){
-				dmg_message(victim,attacker,float(damage))
-				return DMG_FWD_BLOCK
+public sh_extra_damage_fwd_pre(&victim, &attacker, &damage, const wpnDescription[32], &headshot, &dmgMode, &bool:dmgStun,&bool:dmgFFmsg, const Float:dmgOrigin[3],&dmg_type){
+	if(gHasYowai[victim]&&g_yowai_mode[victim]){
+		if((damage>=dmg_threshold||(g_hits[victim]>=g_max_hits_player[victim]))){
+			
+			
+			new Ent = create_entity("info_target")
+
+			if (pev_valid(Ent)!=2){
+			return PLUGIN_HANDLED
 			}
+			entity_set_string(Ent, EV_SZ_classname, YOWAI_SLAY_THANKS_FOR_THAT_ENTITY_CLASSNAME)
+			ExecuteHam(Ham_TakeDamage,victim,attacker,Ent,((float(get_user_health(victim)))+1),DMG_GENERIC);
+			remove_entity(Ent)
+			return DMG_FWD_PASS
+		}
+		else if((damage<dmg_threshold&&(g_hits[victim]<g_max_hits_player[victim]))){
+			dmg_message(victim,attacker,float(damage))
+			return DMG_FWD_BLOCK
 		}
 	}
 	return DMG_FWD_PASS
diff --git a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/sh_chikoi.sma b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/sh_chikoi.sma
index a8139da..b67e9b1 100644
--- a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/sh_chikoi.sma
+++ b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/sh_chikoi.sma
@@ -138,7 +138,7 @@ if(is_user_alive(id) && shModActive()&&gHasChikoi[id]){
 return PLUGIN_HANDLED	
 }
 
-public sh_extra_damage_fwd_post(victim, attacker, damage, const wpnDescription[32], headshot, dmgMode, bool:dmgStun,bool:dmgFFmsg, const Float:dmgOrigin[3],dmg_type){
+public sh_extra_damage_fwd_pre(&victim, &attacker, &damage, const wpnDescription[32], &headshot, &dmgMode, &bool:dmgStun,&bool:dmgFFmsg, const Float:dmgOrigin[3],&dmg_type){
 	if(client_hittable(victim,gHasChikoi[victim])){
 		if(headshot){
 			
diff --git a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/sh_ksun.sma b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/sh_ksun.sma
index 0d87c6a..a50d14f 100644
--- a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/sh_ksun.sma
+++ b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_heroes/sh_ksun.sma
@@ -104,64 +104,58 @@ public plugin_natives(){
 	
 	
 }
-public ksun_damage_debt(id, idinflictor, attacker, Float:damage, damagebits)
-{
-if ( !sh_is_active() || !client_hittable(id) || !client_hittable(attacker)) return HAM_IGNORED
-
-new clip,ammo,weapon=get_user_weapon(attacker,clip,ammo)
-
-new CsTeams:att_team=cs_get_user_team(attacker)
-
-if (idinflictor != attacker)
-{
-    gWeaponPlayerKilledPlayerWith[attacker][id] = CSW_HEGRENADE;
-}
-else
-{
-    gWeaponPlayerKilledPlayerWith[attacker][id] = weapon;
-}
-if(spores_has_ksun(id)&&COVERT_ABUSE_ENABLED){
 
+stock covert_spike_damage(id){
 	for(new payer=0;payer<SH_MAXSLOTS+1;payer++){
 
-		if(!client_hittable(payer)){
-			
-			
-			continue
-		}
-		new CsTeams:payer_team=cs_get_user_team(payer)
-		if(cs_get_user_team(id)==payer_team){
-			
-			continue
-		}
-		new times_spiked_by_me=get_times_player_spiked_by_player(payer,id)
-		//should be multiplied because heal function splits it by default. Ill do it l8r
-		if((times_spiked_by_me>0)){
-			new tger_name[128], vic_name[128]
-			get_user_name(payer,vic_name,127)
-			get_user_name(id,tger_name,127)
-			new Float: pctHealthLost=get_spike_base_damage_debt()*float(times_spiked_by_me)
-			new Float: healthXtracted=1.0+(float(get_user_health(payer))*pctHealthLost)
-			sh_extra_damage(payer,id,floatround(healthXtracted),"ksun debt",0,SH_DMG_NORM)
-			heal(id,healthXtracted)
-			new violence_to_use
-			if(get_cvar_num("ksun_violence_level")<0){
+			if(!client_hittable(payer)){
 				
-				violence_to_use=random_num(1,MAX_VIOLENCE)
+				
+				continue
 			}
-			else{
+			new CsTeams:payer_team=cs_get_user_team(payer)
+			if(cs_get_user_team(id)==payer_team){
 				
-				violence_to_use=clamp(1,get_cvar_num("ksun_violence_level"),MAX_VIOLENCE)
+				continue
+			}
+			new times_spiked_by_me=get_times_player_spiked_by_player(payer,id)
+			if((times_spiked_by_me>0)){
+				new tger_name[128], vic_name[128]
+				get_user_name(payer,vic_name,127)
+				get_user_name(id,tger_name,127)
+				new Float: pctHealthLost=get_spike_base_damage_debt()*float(times_spiked_by_me)
+				new Float: healthXtracted=1.0+(float(get_user_health(payer))*pctHealthLost)
+				new Ent = create_entity("info_target")
+
+				if (pev_valid(Ent)!=2){
+					continue
+				}
+				entity_set_string(Ent, EV_SZ_classname, "ksun debt")
+				sh_chat_message(id,spores_ksun_hero_id(),"health of target named %s before: %d",vic_name,get_user_health(payer))
+				ExecuteHam(Ham_TakeDamage,payer,id,Ent,healthXtracted,DMG_GENERIC);
+				sh_chat_message(id,spores_ksun_hero_id(),"health of target named %s now: %d",vic_name,get_user_health(payer))
+				remove_entity(Ent)
+				heal(id,healthXtracted)
+				new violence_to_use
+				if(get_cvar_num("ksun_violence_level")<0){
+					
+					violence_to_use=random_num(1,MAX_VIOLENCE)
+				}
+				else{
+					
+					violence_to_use=clamp(1,get_cvar_num("ksun_violence_level"),MAX_VIOLENCE)
+				}
+				sh_chat_message(id,spores_ksun_hero_id(),"(Expected and obligated) %s%s! they %0.2f health points were due today",CENSORSHIP_SENTENCES[violence_to_use][0],vic_name,healthXtracted)
+				sh_chat_message(payer,spores_ksun_hero_id(),"(Expected and obligated) %s by%s! %0.2f health points were due today",CENSORSHIP_SENTENCES[violence_to_use][1],tger_name,healthXtracted)
 			}
-			sh_chat_message(id,spores_ksun_hero_id(),"(Expected and obligated) %s%s!",CENSORSHIP_SENTENCES[violence_to_use][0],vic_name)
-			sh_chat_message(payer,spores_ksun_hero_id(),"(Expected and obligated) %s by%s!",CENSORSHIP_SENTENCES[violence_to_use][1],tger_name)
 		}
-		
-
+			
 
-	}
 }
-if((damage>0.0)&&OVERT_ABUSE_ENABLED){
+
+stock overt_spike_damage(attacker,&Float:damage,is_in_ham_hook=1){
+	
+	new CsTeams:att_team=cs_get_user_team(attacker)
 	for(new collector=0;collector<SH_MAXSLOTS+1;collector++){
 
 		if(!client_hittable(collector)){
@@ -175,7 +169,6 @@ if((damage>0.0)&&OVERT_ABUSE_ENABLED){
 			
 			continue
 		}
-		
 		new times_spiked_by_them=get_times_player_spiked_player(collector,attacker)
 		if((times_spiked_by_them>0)){
 			
@@ -196,47 +189,78 @@ if((damage>0.0)&&OVERT_ABUSE_ENABLED){
 				
 				violence_to_use=clamp(1,get_cvar_num("ksun_violence_level"),MAX_VIOLENCE)
 			}
-			sh_chat_message(collector,spores_ksun_hero_id(),"(kind and generosly) %s%s!",CENSORSHIP_SENTENCES[violence_to_use][0],vic_name)
-			sh_chat_message(attacker,spores_ksun_hero_id(),"(kindly and generosly) %s by%s!",CENSORSHIP_SENTENCES[violence_to_use][1],tger_name)
+			sh_chat_message(collector,spores_ksun_hero_id(),"(kind and generosly) %s%s! %0.2f of privileges were due today",CENSORSHIP_SENTENCES[violence_to_use][0],vic_name,dmgSnatched)
+			sh_chat_message(attacker,spores_ksun_hero_id(),"(kindly and generosly) %s by%s! %0.2f of privileges were due today",CENSORSHIP_SENTENCES[violence_to_use][1],tger_name,dmgSnatched)
 			new Float:newDamage=damage- dmgSnatched
-			SetHamParamFloat(4, newDamage);
+			if(is_in_ham_hook){
+				SetHamParamFloat(4, newDamage);
+			}
+			else{
+				damage=newDamage
+			}
 		}
 
 
 	}
+
 }
-if(spores_has_ksun(attacker)){
-	if(weapon==KSUN_WEAPON_ID){
-		if(sh_get_user_is_asleep(id)){
-		
-			new tger_name[128], vic_name[128]
-			get_user_name(attacker,vic_name,127)
-			get_user_name(id,tger_name,127)
-			heal(attacker,damage)
-			new CsTeams:payer_team=cs_get_user_team(id)
-			new CsTeams:att_team=cs_get_user_team(attacker)
-			if(att_team!=payer_team){
-				ksun_inc_player_supply_points(attacker,floatround(damage))
-				if(spores_has_ksun(id)){
-					ksun_dec_player_supply_points(id,floatround(damage))
-					sh_chat_message(attacker,spores_ksun_hero_id(),"You stol-- took back %d supply points rom %s! They now have %d supply points!",floatround(damage),tger_name,ksun_get_player_supply_points(id))
-				}
-			}
-			else{
-				
-				if(spores_has_ksun(id)){
+public ksun_damage_debt(id, idinflictor, attacker, Float:damage, damagebits)
+{
+	if ( !sh_is_active() || !client_hittable(id) || !client_hittable(attacker)) return HAM_IGNORED
+
+	new clip,ammo,weapon=get_user_weapon(attacker,clip,ammo)
+
+	if (idinflictor != attacker)
+	{
+		gWeaponPlayerKilledPlayerWith[attacker][id] = CSW_HEGRENADE;
+	}
+	else
+	{
+		gWeaponPlayerKilledPlayerWith[attacker][id] = weapon;
+	}
+	if(spores_has_ksun(id)&&COVERT_ABUSE_ENABLED){
+
+	
+		covert_spike_damage(id)
+
+	}
+
+	if((damage>0.0)&&OVERT_ABUSE_ENABLED){
+		overt_spike_damage(attacker,damage,1)
+	}
+
+	if(spores_has_ksun(attacker)){
+		if(weapon==KSUN_WEAPON_ID){
+			if(sh_get_user_is_asleep(id)){
+			
+				new tger_name[128], vic_name[128]
+				get_user_name(attacker,vic_name,127)
+				get_user_name(id,tger_name,127)
+				heal(attacker,damage)
+				new CsTeams:payer_team=cs_get_user_team(id)
+				new CsTeams:att_team=cs_get_user_team(attacker)
+				if(att_team!=payer_team){
 					ksun_inc_player_supply_points(attacker,floatround(damage))
-					ksun_dec_player_supply_points(id,floatround(damage))
-					sh_chat_message(attacker,spores_ksun_hero_id(),"You stol-- took back %d supply points rom %s! They now have %d supply points!",floatround(damage),tger_name,ksun_get_player_supply_points(id))
+					if(spores_has_ksun(id)){
+						ksun_dec_player_supply_points(id,floatround(damage))
+						sh_chat_message(attacker,spores_ksun_hero_id(),"You stol-- took back %d supply points rom %s! They now have %d supply points!",floatround(damage),tger_name,ksun_get_player_supply_points(id))
+					}
+				}
+				else{
+					
+					if(spores_has_ksun(id)){
+						ksun_inc_player_supply_points(attacker,floatround(damage))
+						ksun_dec_player_supply_points(id,floatround(damage))
+						sh_chat_message(attacker,spores_ksun_hero_id(),"You stol-- took back %d supply points rom %s! They now have %d supply points!",floatround(damage),tger_name,ksun_get_player_supply_points(id))
+					}
+					
+					
 				}
-				
-				
 			}
 		}
-	}
 	
-}
-return HAM_IGNORED
+	}
+	return HAM_IGNORED
 	
 }
 
@@ -683,3 +707,24 @@ public sh_client_death(id, killer, headshot, const wpnDescription[]){
 	}
 	
 }
+public sh_extra_damage_fwd_pre(&victim, &attacker, &damage, const wpnDescription[32], &headshot, &dmgMode, &bool:dmgStun,&bool:dmgFFmsg, const Float:dmgOrigin[3],&dmg_type){
+	
+	if ( !sh_is_active() || !client_hittable(victim) || !client_hittable(attacker)) return DMG_FWD_PASS
+
+	if(spores_has_ksun(victim)&&COVERT_ABUSE_ENABLED){
+
+	
+		covert_spike_damage(victim)
+
+	}
+
+	if((damage>0.0)&&OVERT_ABUSE_ENABLED){
+		new Float:flDamage=float(damage)
+		overt_spike_damage(attacker,flDamage,0)
+		damage=floatround(flDamage)
+	}
+	
+
+	
+	return DMG_FWD_PASS
+}
diff --git a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_include/superheroconst.inc b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_include/superheroconst.inc
index c957a67..a5edbe6 100644
--- a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_include/superheroconst.inc
+++ b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_include/superheroconst.inc
@@ -9,7 +9,8 @@
 
 enum {
 	DMG_FWD_PASS=0,
-	DMG_FWD_BLOCK=1
+	DMG_FWD_OVERRIDE=1,
+	DMG_FWD_BLOCK=2
 
 
 }
diff --git a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_include/superheromod.inc b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_include/superheromod.inc
index 65ad031..5625060 100644
--- a/superhero_pack/addons/amxmodx/scripting/my_plugins/my_include/superheromod.inc
+++ b/superhero_pack/addons/amxmodx/scripting/my_plugins/my_include/superheromod.inc
@@ -41,10 +41,7 @@
  *        FORWARDS        *
  **************************/
 
-forward sh_extra_damage_fwd_pre(victim, attacker, damage,const wpnDescription[32],  headshot,dmgMode, bool:dmgStun, bool:dmgFFmsg, const Float:dmgOrigin[3],dmg_type);
-
-forward sh_extra_damage_fwd_post(victim, attacker, damage,const wpnDescription[32],  headshot,dmgMode, bool:dmgStun, bool:dmgFFmsg, const Float:dmgOrigin[3],dmg_type);
-
+forward sh_extra_damage_fwd_pre(&victim, &attacker, &damage,const wpnDescription[32],  &headshot,&dmgMode, &bool:dmgStun, &bool:dmgFFmsg, const Float:dmgOrigin[3],&dmg_type);
 
 /**
  * Called when a hero is added or dropped.
diff --git a/superhero_pack/addons/amxmodx/scripting/my_plugins/superheromodnvault.sma b/superhero_pack/addons/amxmodx/scripting/my_plugins/superheromodnvault.sma
index 807254d..4a1d1cc 100644
--- a/superhero_pack/addons/amxmodx/scripting/my_plugins/superheromodnvault.sma
+++ b/superhero_pack/addons/amxmodx/scripting/my_plugins/superheromodnvault.sma
@@ -499,8 +499,7 @@ new sh_anubisdmg_check, gAnubisHero[25]
 new fwdReturn
 new fwd_HeroInit, fwd_HeroKey, fwd_Spawn, fwd_Death
 new fwd_RoundStart, fwd_RoundEnd, fwd_NewRound
-//new fwd_ShDamagePre,fwd_ShDamagePost
-new fwd_ShDamagePost
+new fwd_ShDamagePre
 
 //new max_entities
 //new max_entities_cvar
@@ -605,8 +604,7 @@ public plugin_init()
 	fwd_NewRound = CreateMultiForward("sh_round_new", ET_IGNORE)
 	fwd_RoundStart = CreateMultiForward("sh_round_start", ET_IGNORE)
 	fwd_RoundEnd = CreateMultiForward("sh_round_end", ET_IGNORE)
-	//fwd_ShDamagePre=CreateMultiForward("sh_extra_damage_fwd_pre",ET_CONTINUE ,FP_CELL,FP_CELL,FP_CELL,FP_STRING,FP_CELL,FP_CELL,FP_CELL,FP_CELL,FP_ARRAY,FP_CELL)
-	fwd_ShDamagePost= CreateMultiForward("sh_extra_damage_fwd_post",ET_CONTINUE ,FP_CELL,FP_CELL,FP_CELL,FP_STRING,FP_CELL,FP_CELL,FP_CELL,FP_CELL,FP_ARRAY,FP_CELL)
+	fwd_ShDamagePre= CreateMultiForward("sh_extra_damage_fwd_pre",ET_CONTINUE ,FP_VAL_BYREF,FP_VAL_BYREF,FP_VAL_BYREF,FP_STRING,FP_VAL_BYREF,FP_VAL_BYREF,FP_VAL_BYREF,FP_VAL_BYREF,FP_ARRAY,FP_VAL_BYREF)
 
 
 
@@ -2927,7 +2925,8 @@ public _sh_extra_damage()
 
 	if ( attacker == gXpBounsVIP && getVipFlags() & VIP_BLOCK_EXTRADMG ) return
 
-	new damage = get_param(3)
+	new damage_after;
+	damage_after = get_param(3)
 	new mode = get_param(6)
 	new bool:dmgStun = get_param(7) ? true : false
 	new bool:dmgFFmsg = get_param(8) ? true : false
@@ -2939,14 +2938,14 @@ public _sh_extra_damage()
 	new plrArmor = cs_get_user_armor(victim, armorType)
 
 	if ( mode == SH_DMG_KILL ) {
-		damage = health
+		damage_after = health
 	}
 	else {
-		if ( damage <= 0 ) return
+		if ( damage_after <= 0 ) return
 
 		// *** Damage calculation due to armor from: multiplayer/dlls/player.cpp ***
 		// *** Note: this is not exactly CS damage method because we do not have that sdk ***
-		new Float:flDamage = float(damage)
+		new Float:flDamage = float(damage_after)
 		new Float:flNewDamage = flDamage * SH_ARMOR_RATIO
 		new Float:flArmor = (flDamage - flNewDamage) * SH_ARMOR_BONUS
 
@@ -2960,11 +2959,13 @@ public _sh_extra_damage()
 			plrArmor = floatround(plrArmor - flArmor)
 		}
 
-		if ( mode == SH_DMG_NORM ) damage = floatround(flNewDamage)
+		if ( mode == SH_DMG_NORM ){
+			damage_after = floatround(flNewDamage)
+		}
 		//*** End of damage-armor calculations ***
 	}
 
-	new newHealth = health - damage
+	new newHealth = health - damage_after
 	new FFon = get_pcvar_num(mp_friendlyfire)
 	new freeforall = get_pcvar_num(sh_ffa)
 	new headshot = get_param(5)
@@ -2973,12 +2974,10 @@ public _sh_extra_damage()
 	new Float:dmgOrigin[3]
 	get_array_f(9, dmgOrigin, 3)
 	new dmg_type=get_param(10)
-	
-	new preparedWpnDmgOriginInt=PrepareArray(dmgOrigin,3,0)
+	new preparedWpnDmgOriginInt=PrepareArray(_:dmgOrigin,3,0)
 	
 	new the_dmg_return_value=DMG_FWD_PASS
-	server_print("Sh damage forward execute error?.");
-	if (!ExecuteForward(fwd_ShDamagePost, the_dmg_return_value, victim, attacker, damage,wpnDescription,headshot, mode,dmgStun,dmgFFmsg , preparedWpnDmgOriginInt,dmg_type)){
+	if (!ExecuteForward(fwd_ShDamagePre, the_dmg_return_value, victim, attacker, damage_after,wpnDescription,headshot, mode,dmgStun,dmgFFmsg , preparedWpnDmgOriginInt,dmg_type)){
 		server_print("Sh damage forward execute error.");
 	}
 	if(the_dmg_return_value!=DMG_FWD_BLOCK){
@@ -3070,14 +3069,14 @@ public _sh_extra_damage()
 
 		if ( gHasAnubis[attacker] && get_pcvar_num(sh_anubisdmg_check) && victim != attacker ) {
 			set_hudmessage(0, 100, 200, -1.0, 0.55, 2, 0.1, 2.0, 0.02, 0.02, -1)
-			ShowSyncHudMsg(attacker, gMsgSync1, "%d", damage)
-			sh_chat_message(attacker, -1, "Anubis SH damage %d - %s ", damage, wpnDescription)
+			ShowSyncHudMsg(attacker, gMsgSync1, "%d", damage_after)
+			sh_chat_message(attacker, -1, "Anubis SH damage %d - %s ", damage_after, wpnDescription)
 		}
 
 		if ( gHasAnubis[victim] && get_pcvar_num(sh_anubisdmg_check) ) {
 			set_hudmessage(200, 0, 0, -1.0, 0.48, 2, 0.1, 2.0, 0.02, 0.02, -1)
-			ShowSyncHudMsg(victim, gMsgSync1, "%d", damage)
-			sh_chat_message(victim, -1, "Anubis SH damage %d - %s", damage, wpnDescription)
+			ShowSyncHudMsg(victim, gMsgSync1, "%d", damage_after)
+			sh_chat_message(victim, -1, "Anubis SH damage %d - %s", damage_after, wpnDescription)
 		}
 
 		// Update killers scoreboard with new info
@@ -3115,12 +3114,12 @@ public _sh_extra_damage()
 
 		if ( gHasAnubis[attacker] && get_pcvar_num(sh_anubisdmg_check) && victim != attacker ) {
 			set_hudmessage(0, 100, 200, -1.0, 0.55, 2, 0.1, 2.0, 0.02, 0.02, -1)
-			ShowSyncHudMsg(attacker, gMsgSync2, "%d", damage)
+			ShowSyncHudMsg(attacker, gMsgSync2, "%d", damage_after)
 		}
 
 		if ( gHasAnubis[victim] && get_pcvar_num(sh_anubisdmg_check) ) {
 			set_hudmessage(200, 0, 0, -1.0, 0.48, 2, 0.1, 2.0, 0.02, 0.02, -1)
-			ShowSyncHudMsg(victim, gMsgSync2, "%d", damage)
+			ShowSyncHudMsg(victim, gMsgSync2, "%d", damage_after)
 		}
 
 		// External plugins might use this
@@ -3155,7 +3154,7 @@ public _sh_extra_damage()
 		// Damage message for showing damage bits only
 		message_begin(MSG_ONE_UNRELIABLE, gmsgDamage, _, victim)
 		write_byte(0)		// dmg_save
-		write_byte(damage)	// dmg_take
+		write_byte(damage_after)	// dmg_take
 		write_long(dmg_type)	// visibleDamageBits
 		engfunc(EngFunc_WriteCoord, dmgOrigin[0])	// damageOrigin.x
 		engfunc(EngFunc_WriteCoord, dmgOrigin[1])	// damageOrigin.y
@@ -3163,10 +3162,6 @@ public _sh_extra_damage()
 		message_end()
 		}
 	}
-	else{
-		server_print("Shero damage blocked!!!\n");
-	
-	}
 }
 //---------------------------------------------------------------------------------------------
 public fm_AlertMessage(atype, const msg[])
